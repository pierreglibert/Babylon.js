{"version":3,"sources":["webpack://INSPECTOR/webpack/universalModuleDefinition","webpack://INSPECTOR/webpack/bootstrap","webpack://INSPECTOR/./src/helpers/Helpers.ts","webpack://INSPECTOR/external {\"root\":\"BABYLON\",\"commonjs\":\"babylonjs\",\"commonjs2\":\"babylonjs\",\"amd\":\"babylonjs\"}","webpack://INSPECTOR/./src/Inspector.ts","webpack://INSPECTOR/./src/gui/BasicElement.ts","webpack://INSPECTOR/./src/tree/TreeItem.ts","webpack://INSPECTOR/./src/adapters/Adapter.ts","webpack://INSPECTOR/./src/tabs/Tab.ts","webpack://INSPECTOR/./src/tabs/PropertyTab.ts","webpack://INSPECTOR/./src/tools/AbstractTool.ts","webpack://INSPECTOR/./src/treetools/AbstractTreeTool.ts","webpack://INSPECTOR/./src/treetools/Checkbox.ts","webpack://INSPECTOR/external {\"root\":[\"BABYLON\",\"GUI\"],\"commonjs\":\"babylonjs-gui\",\"commonjs2\":\"babylonjs-gui\",\"amd\":\"babylonjs-gui\"}","webpack://INSPECTOR/./src/scheduler/Scheduler.ts","webpack://INSPECTOR/./src/details/Property.ts","webpack://INSPECTOR/./src/details/DetailPanel.ts","webpack://INSPECTOR/./src/properties.ts","webpack://INSPECTOR/./src/details/PropertyLine.ts","webpack://INSPECTOR/./src/gui/SearchBar.ts","webpack://INSPECTOR/./src/adapters/MeshAdapter.ts","webpack://INSPECTOR/./src/gui/Tooltip.ts","webpack://INSPECTOR/./src/gui/CubeTextureElement.ts","webpack://INSPECTOR/./src/treetools/CameraPOV.ts","webpack://INSPECTOR/./src/tabs/ToolsTab.ts","webpack://INSPECTOR/./src/adapters/TextureAdapter.ts","webpack://INSPECTOR/./src/tabs/TextureTab.ts","webpack://INSPECTOR/./src/tabs/StatsTab.ts","webpack://INSPECTOR/./src/treetools/SoundInteractions.ts","webpack://INSPECTOR/./src/adapters/SoundAdapter.ts","webpack://INSPECTOR/./src/tabs/SoundTab.ts","webpack://INSPECTOR/./src/tabs/SceneTab.ts","webpack://INSPECTOR/./src/adapters/PhysicsImpostorAdapter.ts","webpack://INSPECTOR/./src/tabs/PhysicsTab.ts","webpack://INSPECTOR/./src/tabs/MeshTab.ts","webpack://INSPECTOR/./src/adapters/MaterialAdapter.ts","webpack://INSPECTOR/./src/tabs/MaterialTab.ts","webpack://INSPECTOR/./src/adapters/LightAdapter.ts","webpack://INSPECTOR/./src/tabs/LightTab.ts","webpack://INSPECTOR/./src/adapters/GUIAdapter.ts","webpack://INSPECTOR/./src/tabs/GUITab.ts","webpack://INSPECTOR/./src/tabs/GLTFTab.ts","webpack://INSPECTOR/./src/tabs/ConsoleTab.ts","webpack://INSPECTOR/./src/treetools/Info.ts","webpack://INSPECTOR/./src/treetools/DebugArea.ts","webpack://INSPECTOR/./src/treetools/BoundingBox.ts","webpack://INSPECTOR/./src/tabs/CameraTab.ts","webpack://INSPECTOR/./src/tools/DisposeTool.ts","webpack://INSPECTOR/./src/tools/PauseScheduleTool.ts","webpack://INSPECTOR/./src/tools/FullscreenTool.ts","webpack://INSPECTOR/./src/tools/PopupTool.ts","webpack://INSPECTOR/./src/tools/PickTool.ts","webpack://INSPECTOR/./src/tools/LabelTool.ts","webpack://INSPECTOR/./src/tools/RefreshTool.ts","webpack://INSPECTOR/./src/tools/Toolbar.ts","webpack://INSPECTOR/./src/tabs/TabBar.ts","webpack://INSPECTOR/./src/properties_gui.ts","webpack://INSPECTOR/./src/gui/TextureElement.ts","webpack://INSPECTOR/./src/gui/HDRCubeTextureElement.ts","webpack://INSPECTOR/./src/gui/ColorPickerElement.ts","webpack://INSPECTOR/./src/adapters/CameraAdapter.ts","webpack://INSPECTOR/./src/treetools/index.ts","webpack://INSPECTOR/./src/tree/index.ts","webpack://INSPECTOR/./src/tools/index.ts","webpack://INSPECTOR/./src/tabs/index.ts","webpack://INSPECTOR/./src/scheduler/index.ts","webpack://INSPECTOR/./src/helpers/index.ts","webpack://INSPECTOR/./src/gui/ColorElement.ts","webpack://INSPECTOR/./src/gui/index.ts","webpack://INSPECTOR/./src/details/index.ts","webpack://INSPECTOR/external {\"root\":\"BABYLON\",\"commonjs\":\"babylonjs-serializers\",\"commonjs2\":\"babylonjs-serializers\",\"amd\":\"babylonjs-serializers\"}","webpack://INSPECTOR/external {\"root\":\"BABYLON\",\"commonjs\":\"babylonjs-loaders\",\"commonjs2\":\"babylonjs-loaders\",\"amd\":\"babylonjs-loaders\"}","webpack://INSPECTOR/./node_modules/style-loader/lib/urls.js","webpack://INSPECTOR/./node_modules/style-loader/lib/addStyles.js","webpack://INSPECTOR/./node_modules/css-loader/lib/css-base.js","webpack://INSPECTOR/./sass/main.scss","webpack://INSPECTOR/./sass/main.scss?fc85","webpack://INSPECTOR/./src/adapters/index.ts","webpack://INSPECTOR/./src/index.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__68__","__WEBPACK_EXTERNAL_MODULE__69__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","babylonjs_1","Property_1","PropertyLine_1","Inspector_1","properties_1","Helpers","GET_TYPE","obj","undefined","classname","Tools","GetClassName","constructor","this","_GetFnName","_CheckIfTypeExists","_GetTypeFor","type","PROPERTIES","IsBrowserEdge","test","navigator","userAgent","IsBrowserIE","typeBlock","fn","f","toString","match","SEND_EVENT","eventName","event","Inspector","DOCUMENT","createEvent","initEvent","Event","dispatchEvent","Trunc","nb","Math","round","toFixed","CreateDiv","className","parent","CreateElement","CreateInput","element","elem","createElement","appendChild","CleanDiv","div","firstChild","removeChild","Css","cssAttribute","clone","cloneNode","body","style","display","WINDOW","getComputedStyle","parentNode","LoadScript","LoadFile","textContent","console","log","IsSystemName","indexOf","lastIndexOf","length","GetAllLinesProperties","propertiesLines","_i","props_1","GetAllLinesPropertiesAsString","prop","infos","Property","push","PropertyLine","dontTakeThis","props","substring","Capitalize","str","charAt","toUpperCase","slice","GUI","Helpers_1","properties_gui_1","Scheduler_1","TabBar_1","scene","popup","initialTab","parentElement","newColors","_this","_popupMode","loadGUIProperties","warn","_initialTab","_parentElement","_scene","document","openPopup","canvas","getEngine","getRenderingCanvas","canvasParent","canvasComputedStyle","_canvasStyle","width","height","position","top","bottom","left","right","padding","paddingBottom","paddingLeft","paddingTop","paddingRight","margin","marginBottom","marginLeft","marginTop","marginRight","_c2diwrapper","inspector","_buildInspector","widthPx","parseFloat","substr","heightPx","leftPx","innerWidth","maxWidth","parent_1","_getRelativeParent","pWidth","clientWidth","pheight","clientHeight","replaceChild","Split","direction","sizes","onDrag","_tabbar","updateWidth","refresh","bColor","backgroundColor","bColorl1","backgroundColorLighter","bColorl2","backgroundColorLighter2","bColorl3","backgroundColorLighter3","color","colorTop","colorBot","styles","querySelectorAll","innerHTML","replace","lookForAbsoluteOrRelative","computedStyle","TabBar","_topPanel","toHtml","_tabPanel","filterItem","filter","tab","getActiveTab","displayObjectDetails","mesh","switchMeshTab","activeTab","update","getPanel","dispose","insertBefore","remove","Scheduler","getInstance","firstTime","open","title","links","link","rel","href","head","classList","add","addEventListener","alert","getActiveTabIndex","BasicElement","_div","_build","BasicElement_1","MeshAdapter_1","TreeItem","_super","children","_tab","_adapter","_tools","getTools","__extends","id","child","compareTo","item","str1","str2","localeCompare","numeric","correspondsTo","fold","_a","unfold","adapterId","adapter","MeshAdapter","TransformNode","AbstractMesh","tool","text","_lineContent","_addEvent","getDetails","getProperties","contains","e","select","_isFolded","stopPropagation","active","b","getDiv","Adapter","_obj","_name","Geometry","RandomId","Tab","tabbar","_isActive","isActive","evt","switchTab","_panel","getPixelWidth","DetailPanel_1","SearchBar_1","PropertyTab","insp","_treeItems","_inspector","_searchBar","SearchBar","_treePanel","_detailsPanel","DetailPanel","blockDrag","popupMode","_items","items","_getTree","clean","sort","item1","item2","items_1","displayDetails","activateNode","details","getItemFor","searchObjectInTree","treeItem","it","toLowerCase","_b","_c","Tooltip_1","AbstractTool","iconSet","icon","tooltip","_elem","action","Tooltip","_updateIcon","AbstractTreeTool","_on","_addEvents","Checkbox","isVisible","_check","dontEnable","setVisible","pause","_updatableProperties","interval","setInterval","_update","REFRESH_TIME","_instance","index","splice","clearInterval","parentObj","_property","_parentObj","newValue","Scene","debugLayer","onPropertyChangedObservable","notifyObservers","initialValue","getScene","newObj","dr","_detailRows","_sortDirection","detailsRow","_addSearchBarDetails","_details","_createHeaderRow","_headerRow","_sortDetails","cleanRow","_addSearchDetails","_addDetails","searchDetails","_searchDetails","SearchBarDetails","searchByName","searchName","rows","row","_items_1","_direction","elems","query","querySelector","isString","String","forEach","closeDetails","detail1","detail2","createDiv","cssClass","spanName","spanDirection","format","type_not_defined","properties","Array","Vector2","vec","x","y","Vector3","z","Color3","toPrecision","g","slider","min","max","step","Color4","Quaternion","Size","size","Texture","tex","RenderTargetTexture","DynamicTexture","BaseTexture","CubeTexture","HDRCubeTexture","Sound","ArcRotateCamera","alpha","PI","beta","fov","FreeCamera","Mesh","visibility","StandardMaterial","mat","PBRMaterial","PhysicsImpostor","ImageProcessingConfiguration","ColorCurves","ColorPickerElement_1","CubeTextureElement_1","HDRCubeTextureElement_1","TextureElement_1","PropertyFormatter","level","_children","_elements","_level","_parent","_valueDiv","_isSliderType","_displayValueContent","_createElements","_updateValue","_checkboxInput","_rangeInput","_isSimple","_initInput","_displayInputHandler","_input","_focusOutInputHandler","_validateInputHandler","_escapeInputHandler","setAttribute","_displayInput","_validateInput","_escapeInput","_onMouseDownHandler","_onMouseDown","_onMouseDragHandler","_onMouseDrag","_onMouseUpHandler","_onMouseUp","removeEventListener","keyCode","validateInput","preventDefault","forceupdate","updateObject","_removeInputWithoutValidating","valueTxt","focus","ColorPickerElement","TextureElement","HDRCubeTextureElement","CubeTextureElement","childNodes","nodeValue","hexLineString","rValue","parseInt","rValueRound","gValue","gValueRound","bValue","bValueRound","aValue","aValueRound","a","hex","hexLineInfos","valHexR","valHexG","valHexB","valHexA","unshift","join","_SIMPLE_TYPE","toggle","objToDetail","propToDisplay","reverse","propToDisplay_1","_MARGIN_LEFT","hexLinePropCheck","hexLineCheck","propToDisplay_2","valHex","hexLineProp","hexLine","_d","_e","nextSibling","diff","_prevY","clientY","_preValue","childElementCount","checked","_getSliderProperty","_rangeHandler","_textValue","innerText","_propTab","_inputElement","placeholder","reset","_detailTab","BoundingBox_1","Checkbox_1","DebugArea_1","Info_1","tools","DebugArea","getTotalVertices","BoundingBox","Info","setEnabled","isEnabled","isBoxVisible","showBoundingBox","setBoxVisible","debug","enable","_axesViewer","_drawAxis","onBeforeRenderObservable","onBeforeRenderObserver","getInfo","computeWorldMatrix","Debug","AxesViewer","matrix","getWorldMatrix","extend","getBoundingInfo","boundingBox","extendSizeWorld","scaleLines","TransformNormal","tip","attachTo","_infoDiv","_pause","_textureDiv","_canvas","_textureUrl","_showViewer","url","_engine","_cube","material","_initEngine","_populateScene","hdrTexture","coordinatesMode","SKYBOX_MODE","CreateBox","hdrSkyboxMaterial","backFaceCulling","reflectionTexture","disableLighting","registerBeforeRender","rotation","Engine","clearColor","runRenderLoop","render","AbstractTreeTool_1","CameraPOV","camera","cameraPOV","getCurrentActiveCamera","_gotoPOV","actives","setPOV","ToolsTab","versionSpan","Version","errorElemm_1","elemValue","inputElement","accept","onchange","files","target","file","isFileDDS","isFileEnv","ReadFile","data","blob","Blob","URL","createObjectURL","environmentTexture","CreateFromPrefilteredData","message","premultipliedAlpha","onclick","activeCamera","EnvironmentTextureTools","CreateEnvTextureAsync","then","buffer","Download","catch","error","CreateScreenshot","precision","Adapter_1","TextureAdapter","TextureAdapter_1","TreeItem_1","TextureTab","_imagePanel","arr","textures","texture","imgs","img","engine_1","size_1","getSize","screenShotTexture","onBeforeRender","onAfterRender","onAfterRenderObservable","faceIndex","DumpFramebuffer","src","incrementRenderId","resetCachedMaterial","pixels","readPixels","ctx","getContext","tmp","u","Uint8ClampedArray","ImageData","set","imgData","createImageData","putImageData","base64Image","toDataURL","StatsTab","_glInfo","getGlInfo","_connectToInstrumentation","fpsSpan","updateFct","Format","getFps","_updateLoopHandler","_refreshRateCounter","refreshRate","_createStatLabel","meshes","_sceneInstrumentation","drawCallsCounter","current","textureCollisionsCounter","lights","materials","getActiveMeshes","getActiveIndices","getActiveBones","getActiveParticles","activeMeshesEvaluationTimeCounter","renderTargetsRenderTimeCounter","particlesRenderTimeCounter","spritesRenderTimeCounter","animationsTimeCounter","physicsTimeCounter","renderTimeCounter","frameTimeCounter","interFrameTimeCounter","_engineInstrumentation","gpuFrameTimeCounter","average","getRenderWidth","getRenderHeight","getCaps","standardDerivatives","s3tc","instancedArrays","textureFloat","uintIndices","fragmentDepthSupported","highPrecisionShaderSupported","drawBuffersExtension","vertexArrayObject","timerQuery","isStencilEnable","maxTexturesImageUnits","maxTextureSize","maxAnisotropy","webGLVersion","version","renderer","SceneInstrumentation","captureActiveMeshesEvaluationTime","captureRenderTargetsRenderTime","captureFrameTime","captureRenderTime","captureInterFrameTime","captureParticlesRenderTime","captureSpritesRenderTime","capturePhysicsTime","captureAnimationsTime","EngineInstrumentation","captureGPUFrameTime","content","Infinity","unregisterAfterRender","registerAfterRender","SoundInteractions","playSound","_playSound","setPlaying","SoundInteractions_1","SoundAdapter","callback","isPlaying","play","onended","SoundAdapter_1","SoundTab","soundTracks","soundCollection","SceneTab","_skeletonViewers","_actions","propString","point","wireframe","solid","forcePointsCloud","forceWireframe","_generateRadioAction","_generateActionLine","DiffuseTextureEnabled","AmbientTextureEnabled","SpecularTextureEnabled","EmissiveTextureEnabled","BumpTextureEnabled","OpacityTextureEnabled","ReflectionTextureEnabled","RefractionTextureEnabled","ColorGradingTextureEnabled","LightmapTextureEnabled","FresnelEnabled","animationsEnabled","collisionsEnabled","fogEnabled","lensFlaresEnabled","lightsEnabled","particlesEnabled","postProcessesEnabled","probesEnabled","proceduralTexturesEnabled","renderTargetsEnabled","shadowsEnabled","skeletonsEnabled","spritesEnabled","texturesEnabled","headphones","normalSpeaker","audioEnabled","headphone","skeleton","found","sIndex","viewer","SkeletonViewer","initValue","isActivated","arr_2","arr_1","PhysicsImpostorAdapter","_isVisible","_viewer","physicsImposter","showImpostor","hideImpostor","PhysicsImpostorAdapter_1","PhysicsTab","isPhysicsEnabled","PhysicsViewer","physicsImpostor","MeshTab","alreadyIn","createNode","descendants","getDescendants","node","descendants_1","notFound","instances","meshWithoutAnyParent","transformNodes","tn","meshWithoutAnyParent_1","MaterialAdapter","MaterialAdapter_1","MaterialTab","LightAdapter","LightAdapter_1","LightTab","light","GUIAdapter","babylonjs_gui_1","GUIAdapter_1","GUITab","AdvancedDynamicTexture","_rootContainer","babylonjs_loaders_1","babylonjs_serializers_1","GLTFTab","_closeDetailsPanel","SceneLoader","GLTFFileLoader","GLTF2","GLTFLoader","_addImport","GLTF2Export","_addExport","_Initialize","OnPluginActivatedObservable","loader","_LoaderDefaults","defaults_1","onExtensionLoadedObservable","extension","extensionDefaults","extensions","importTitle","importActions","_getLoaderDefaultsAsync","defaults","_showLoaderDefaults","extensionName","extensionAction","_showLoaderExtensionDefaults","checkbox","enabled","_EnumeratePublic","Promise","resolve","engine","NullEngine","importMeshAsync","_openDetailsPanel","_split","destroy","detailsPanel","keys","exportActions","button","GLBAsync","shouldExportTransformNode","transformNode","_IsSkyBox","glb","downloadFiles","ConsoleTab","consolePanel","bjsPanel","_consolePanelContent","_bjsPanelContent","LogCache","OnNewCacheEntry","entry","scrollTop","scrollHeight","_oldConsoleLog","_oldConsoleWarn","_oldConsoleError","_addConsoleLog","_addConsoleWarn","_addConsoleError","_message","caller","params","arguments","callerFunc","CameraAdapter_1","CameraTab","cameras","CameraAdapter","DisposeTool","PauseScheduleTool","_isPause","FullscreenTool","requestFullscreen","webkitRequestFullScreen","requestFullScreen","PopupTool","PickTool","_pickHandler","_pickMesh","_deactivate","pos","_updatePointerPosition","pi","pick","pickedMesh","canvasRect","getRenderingCanvasClientRect","clientX","LabelTool","_isDisplayed","_advancedTexture","_labelInitialized","_guiLoaded","_checkGUILoaded","_initializeLabels","CreateFullscreenUI","_createLabel","onNewMeshAddedObservable","onMeshRemovedObservable","_removeLabel","rect1","Rectangle","background","addControl","label","TextBlock","fontSize","linkWithMesh","_linkedMesh","removeControl","RefreshTool","RefreshTool_1","LabelTool_1","PickTool_1","PopupTool_1","FullscreenTool_1","PauseScheduleTool_1","DisposeTool_1","Toolbar","_addTools","sum","Toolbar_1","CameraTab_1","ConsoleTab_1","GLTFTab_1","GUITab_1","LightTab_1","MaterialTab_1","MeshTab_1","PhysicsTab_1","SceneTab_1","SoundTab_1","StatsTab_1","TextureTab_1","ToolsTab_1","_tabs","_invisibleTabs","_visibleTabs","_meshTab","IsSupported","_toolBar","_moreTabsIcon","_moreTabsPanel","topPanel","_addInvisibleTabToPanel","parentSize","currentSize","pop","lastTab","PROPERTIES_GUI","ValueAndUnit","valueAndUnit","Control","control","Button","ColorPicker","colorPicker","Ellipse","ellipse","Image","image","Line","line","RadioButton","radioButton","rectangle","Slider","StackPanel","stackPanel","textBlock","Container","container","imgDiv","sizeDiv","getBaseSize","backgroundImage","microSurface","propertyLine","scheduler","_toRgba","pline","opacity","toHexString","FromHexString","CameraPOV_1","switchActiveCamera","__export","ColorElement","css","location","Error","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","JSON","stringify","stylesInDom","isOldIE","memo","apply","memoize","all","atob","getElement","styleTarget","HTMLIFrameElement","contentDocument","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","options","domStyle","refs","j","parts","addStyle","listToStyles","list","newStyles","base","part","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","before","removeStyleElement","idx","createStyleElement","attrs","addAttrs","el","result","transform","styleIndex","applyToSingletonTag","revokeObjectURL","btoa","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","oldSrc","styleSheet","cssText","createTextNode","DEBUG","newList","mayRemove","replaceText","textStore","replacement","Boolean","cssNode","useSourceMap","map","cssMapping","sourceMapping","toComment","sourceURLs","sources","source","sourceRoot","concat","cssWithMappingToString","mediaQuery","alreadyImportedModules","hmr","locals"],"mappings":"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","file":"babylon.inspector.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"babylonjs\"), require(\"babylonjs-gui\"), require(\"babylonjs-serializers\"), require(\"babylonjs-loaders\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"babylonjs-inspector\", [\"babylonjs\", \"babylonjs-gui\", \"babylonjs-serializers\", \"babylonjs-loaders\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"babylonjs-inspector\"] = factory(require(\"babylonjs\"), require(\"babylonjs-gui\"), require(\"babylonjs-serializers\"), require(\"babylonjs-loaders\"));\n\telse\n\t\troot[\"INSPECTOR\"] = factory(root[\"BABYLON\"], root[\"BABYLON\"][\"GUI\"], root[\"BABYLON\"], root[\"BABYLON\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__68__, __WEBPACK_EXTERNAL_MODULE__69__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 76);\n","import { Nullable, Tools } from \"babylonjs\";\r\nimport { Property } from \"../details/Property\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { PROPERTIES } from \"../properties\";\r\n\r\nexport class Helpers {\r\n\r\n\r\n    /** \r\n     * Returns the type of the given object. First\r\n     * uses getClassName. If nothing is returned, used the type of the constructor\r\n     */\r\n    public static GET_TYPE(obj: any): string {\r\n        if (typeof obj === 'boolean') {\r\n            return 'boolean';\r\n        }\r\n\r\n        if (obj != null && obj != undefined) {\r\n            let classname = Tools.GetClassName(obj);\r\n            if (!classname || classname === 'object') {\r\n                classname = obj.constructor.name;\r\n                // classname is undefined in IE11\r\n                if (!classname) {\r\n                    classname = this._GetFnName(obj.constructor);\r\n                }\r\n            }\r\n            // If the class name has no matching properties, check every type\r\n            if (!this._CheckIfTypeExists(classname)) {\r\n                return this._GetTypeFor(obj);\r\n            }\r\n\r\n            return classname;\r\n        } else {\r\n\r\n            return 'type_not_defined';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if some properties are defined for the given type.\r\n     */\r\n    private static _CheckIfTypeExists(type: string) {\r\n        let properties = (<any>PROPERTIES)[type];\r\n        if (properties) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the user browser is edge.\r\n     */\r\n    public static IsBrowserEdge(): boolean {\r\n        var regexp = /Edge/\r\n        return regexp.test(navigator.userAgent);\r\n    }\r\n    /**\r\n     * Returns true if the user browser is IE.\r\n     */\r\n    public static IsBrowserIE(): boolean {\r\n        var regexp = /Trident.*rv\\:11\\./\r\n        return regexp.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Returns the name of the type of the given object, where the name \r\n     * is in PROPERTIES constant.\r\n     * Returns 'Undefined' if no type exists for this object\r\n     */\r\n    private static _GetTypeFor(obj: any) {\r\n        for (let type in PROPERTIES) {\r\n            let typeBlock = (<any>PROPERTIES)[type];\r\n            if (typeBlock.type) {\r\n                if (obj instanceof typeBlock.type) {\r\n                    return type;\r\n                }\r\n            }\r\n        }\r\n        return 'type_not_defined';\r\n    }\r\n    /**\r\n     * Returns the name of a function (workaround to get object type for IE11)\r\n     */\r\n    private static _GetFnName(fn: any) {\r\n        var f = typeof fn == 'function';\r\n        var s = f && ((fn.name && ['', fn.name]) || fn.toString().match(/function ([^\\(]+)/));\r\n        return (!f && 'not a function') || (s && s[1] || 'anonymous');\r\n    }\r\n\r\n    /** Send the event which name is given in parameter to the window */\r\n    public static SEND_EVENT(eventName: string) {\r\n        let event;\r\n        if (Inspector.DOCUMENT.createEvent) {\r\n            event = Inspector.DOCUMENT.createEvent('HTMLEvents');\r\n            event.initEvent(eventName, true, true);\r\n        } else {\r\n            event = new Event(eventName);\r\n        }\r\n        window.dispatchEvent(event);\r\n    }\r\n\r\n    /** Returns the given number with 2 decimal number max if a decimal part exists */\r\n    public static Trunc(nb: number): number {\r\n        if (typeof nb !== 'number') {\r\n            return 0;\r\n        }\r\n        if (Math.round(nb) !== nb) {\r\n            return (<any>nb.toFixed(2));\r\n        }\r\n        return nb;\r\n    };\r\n\r\n    /**\r\n     * Useful function used to create a div\r\n     */\r\n    public static CreateDiv(className: Nullable<string> = null, parent?: HTMLElement): HTMLDivElement {\r\n        return <HTMLDivElement>Helpers.CreateElement('div', className, parent);\r\n    }\r\n\r\n    /**\r\n     * Useful function used to create a input\r\n     */\r\n    public static CreateInput(className?: string, parent?: HTMLElement): HTMLInputElement {\r\n        return <HTMLInputElement>Helpers.CreateElement('input', className, parent);\r\n    }\r\n\r\n    public static CreateElement(element: string, className: Nullable<string> = null, parent?: HTMLElement): HTMLElement {\r\n        let elem = Inspector.DOCUMENT.createElement(element);\r\n\r\n        if (className) {\r\n            elem.className = className;\r\n        }\r\n        if (parent) {\r\n            parent.appendChild(elem);\r\n        }\r\n        return elem;\r\n    }\r\n\r\n    /**\r\n     * Removes all children of the given div.\r\n     */\r\n    public static CleanDiv(div: HTMLElement) {\r\n        while (div.firstChild) {\r\n            div.removeChild(div.firstChild);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the true value of the given CSS Attribute from the given element (in percentage or in pixel, as it was specified in the css)\r\n     */\r\n    public static Css(elem: HTMLElement, cssAttribute: string): string {\r\n        let clone = elem.cloneNode(true) as HTMLElement;\r\n        let div = Helpers.CreateDiv('', Inspector.DOCUMENT.body);\r\n        div.style.display = 'none';\r\n        div.appendChild(clone);\r\n        let value = (<any>Inspector.WINDOW.getComputedStyle(clone))[cssAttribute];\r\n        if (div.parentNode) {\r\n            div.parentNode.removeChild(div);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    public static LoadScript() {\r\n        Tools.LoadFile(\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.7.0/highlight.min.js\", (elem) => {\r\n            let script = Helpers.CreateElement('script', '', Inspector.DOCUMENT.body);\r\n            script.textContent = elem as string;\r\n\r\n            // Load glsl detection\r\n            Tools.LoadFile(\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.7.0/languages/glsl.min.js\", (elem) => {\r\n                let script = Helpers.CreateElement('script', '', Inspector.DOCUMENT.body);\r\n                script.textContent = elem as string;\r\n\r\n                // Load css style\r\n                Tools.LoadFile(\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.7.0/styles/zenburn.min.css\", (elem) => {\r\n                    let style = Helpers.CreateElement('style', '', Inspector.DOCUMENT.body);\r\n                    style.textContent = elem as string;\r\n                });\r\n            }, undefined, undefined, undefined, () => {\r\n                console.log('Error : LoadFile \"glsl.min.js\"');\r\n            });\r\n\r\n        }, undefined, undefined, undefined, () => {\r\n            console.log('Error : LoadFile \"highlight.min.js\"')\r\n        });\r\n\r\n    }\r\n\r\n    public static IsSystemName(name: string): boolean {\r\n        if (name == null) {\r\n            return false;\r\n        }\r\n        return name.indexOf(\"###\") === 0 && name.lastIndexOf(\"###\") === (name.length - 3);\r\n    }\r\n\r\n    /**\r\n     * Return an array of PropertyLine for an obj\r\n     * @param obj \r\n     */\r\n    public static GetAllLinesProperties(obj: any): Array<PropertyLine> {\r\n        let propertiesLines: Array<PropertyLine> = [];\r\n        let props = Helpers.GetAllLinesPropertiesAsString(obj);\r\n\r\n        for (let prop of props) {\r\n            let infos = new Property(prop, obj);\r\n            propertiesLines.push(new PropertyLine(infos));\r\n        }\r\n        return propertiesLines;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns an array of string corresponding to tjhe list of properties of the object to be displayed\r\n     * @param obj \r\n     */\r\n    public static GetAllLinesPropertiesAsString(obj: any, dontTakeThis: Array<string> = []): Array<string> {\r\n        let props: Array<string> = [];\r\n\r\n        for (let prop in obj) {\r\n            //No private and no function\r\n            if (dontTakeThis.indexOf(prop) === -1 && prop.substring(0, 1) !== '_' && typeof obj[prop] !== 'function') {\r\n                props.push(prop);\r\n            }\r\n        }\r\n        return props;\r\n    }\r\n\r\n    public static Capitalize(str: string): string {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import { AbstractMesh, Nullable, Scene, Tools } from \"babylonjs\";\r\nimport * as GUI from \"babylonjs-gui\";\r\nimport \"../sass/main.scss\";\r\nimport { Helpers } from \"./helpers/Helpers\";\r\nimport { loadGUIProperties } from \"./properties_gui\";\r\nimport { Scheduler } from \"./scheduler/Scheduler\";\r\nimport { TabBar } from \"./tabs/TabBar\";\r\n\r\n\r\nexport class Inspector {\r\n\r\n    private _c2diwrapper: HTMLElement;\r\n    // private _detailsPanel: DetailPanel;\r\n    /** The panel displayed at the top of the inspector */\r\n    private _topPanel: HTMLElement;\r\n    /** The div containing the content of the active tab */\r\n    private _tabPanel: HTMLElement;\r\n    /** The panel containing the list if items */\r\n    // private _treePanel   : HTMLElement;\r\n    private _tabbar: TabBar;\r\n    private _scene: Scene;\r\n    /** The HTML document relative to this inspector (the window or the popup depending on its mode) */\r\n    public static DOCUMENT: HTMLDocument;\r\n    /** The HTML window. In popup mode, it's the popup itself. Otherwise, it's the current tab */\r\n    public static WINDOW: Window;\r\n    /** True if the inspector is built as a popup tab */\r\n    private _popupMode: boolean = false;\r\n    /** The original canvas style, before applying the inspector*/\r\n    private _canvasStyle: any;\r\n\r\n    private _initialTab: number;\r\n\r\n    private _parentElement: Nullable<HTMLElement>;\r\n\r\n    /** The inspector is created with the given engine.\r\n     * If the parameter 'popup' is false, the inspector is created as a right panel on the main window.\r\n     * If the parameter 'popup' is true, the inspector is created in another popup.\r\n     */\r\n    constructor(scene: Scene, popup?: boolean, initialTab: number = 0, parentElement: Nullable<HTMLElement> = null, newColors?: {\r\n        backgroundColor?: string,\r\n        backgroundColorLighter?: string,\r\n        backgroundColorLighter2?: string,\r\n        backgroundColorLighter3?: string,\r\n        color?: string,\r\n        colorTop?: string,\r\n        colorBot?: string\r\n    }) {\r\n\r\n        // Load GUI library if not already done\r\n        if (!GUI) {\r\n            Tools.LoadScript(\"https://preview.babylonjs.com/gui/babylon.gui.min.js\", () => {\r\n                //Load properties of GUI objects now as GUI has to be declared before \r\n                loadGUIProperties();\r\n            }, () => {\r\n                console.warn('Error : loading \"babylon.gui.min.js\". Please add script https://preview.babylonjs.com/gui/babylon.min.gui.js to the HTML file.');\r\n            });\r\n        }\r\n        else {\r\n            //Load properties of GUI objects now as GUI has to be declared before \r\n            loadGUIProperties();\r\n        }\r\n\r\n        //get Tabbar initialTab\r\n        this._initialTab = initialTab;\r\n\r\n        //get parentElement of our Inspector\r\n        this._parentElement = parentElement;\r\n\r\n        // get canvas parent only if needed.\r\n        this._scene = scene;\r\n\r\n        // Save HTML document and window\r\n        Inspector.DOCUMENT = window.document;\r\n        Inspector.WINDOW = window;\r\n\r\n        // POPUP MODE\r\n        if (popup) {\r\n            // Build the inspector in the given parent\r\n            this.openPopup(true);// set to true in order to NOT dispose the inspector (done in openPopup), as it's not existing yet\r\n        } else {\r\n            // Get canvas and its DOM parent\r\n            let canvas = <HTMLElement>this._scene.getEngine().getRenderingCanvas();\r\n            let canvasParent = canvas.parentElement;\r\n\r\n            // get canvas style                \r\n            let canvasComputedStyle = Inspector.WINDOW.getComputedStyle(canvas);\r\n\r\n            this._canvasStyle = {\r\n                width: Helpers.Css(canvas, 'width'),\r\n                height: Helpers.Css(canvas, 'height'),\r\n\r\n                position: canvasComputedStyle.position,\r\n                top: canvasComputedStyle.top,\r\n                bottom: canvasComputedStyle.bottom,\r\n                left: canvasComputedStyle.left,\r\n                right: canvasComputedStyle.right,\r\n\r\n                padding: canvasComputedStyle.padding,\r\n                paddingBottom: canvasComputedStyle.paddingBottom,\r\n                paddingLeft: canvasComputedStyle.paddingLeft,\r\n                paddingTop: canvasComputedStyle.paddingTop,\r\n                paddingRight: canvasComputedStyle.paddingRight,\r\n\r\n                margin: canvasComputedStyle.margin,\r\n                marginBottom: canvasComputedStyle.marginBottom,\r\n                marginLeft: canvasComputedStyle.marginLeft,\r\n                marginTop: canvasComputedStyle.marginTop,\r\n                marginRight: canvasComputedStyle.marginRight\r\n\r\n            };\r\n\r\n            if (this._parentElement) {\r\n                // Build the inspector wrapper\r\n                this._c2diwrapper = Helpers.CreateDiv('insp-wrapper', this._parentElement);\r\n                this._c2diwrapper.style.width = '100%';\r\n                this._c2diwrapper.style.height = '100%';\r\n                this._c2diwrapper.style.paddingLeft = '5px';\r\n\r\n                // add inspector     \r\n                let inspector = Helpers.CreateDiv('insp-right-panel', this._c2diwrapper);\r\n                inspector.style.width = '100%';\r\n                inspector.style.height = '100%';\r\n                // and build it in the popup  \r\n                this._buildInspector(inspector);\r\n            } else {\r\n                // Create c2di wrapper\r\n                this._c2diwrapper = Helpers.CreateDiv('insp-wrapper');\r\n\r\n                // copy style from canvas to wrapper\r\n                for (let prop in this._canvasStyle) {\r\n                    (<any>this._c2diwrapper.style)[prop] = this._canvasStyle[prop];\r\n                }\r\n\r\n                if (!canvasComputedStyle.width || !canvasComputedStyle.height || !canvasComputedStyle.left) {\r\n                    return;\r\n                }\r\n\r\n                // Convert wrapper size in % (because getComputedStyle returns px only)\r\n                let widthPx = parseFloat(canvasComputedStyle.width.substr(0, canvasComputedStyle.width.length - 2)) || 0;\r\n                let heightPx = parseFloat(canvasComputedStyle.height.substr(0, canvasComputedStyle.height.length - 2)) || 0;\r\n\r\n                // If the canvas position is absolute, restrain the wrapper width to the window width + left positionning\r\n                if (canvasComputedStyle.position === \"absolute\" || canvasComputedStyle.position === \"relative\") {\r\n                    // compute only left as it takes predominance if right is also specified (and it will be for the wrapper)\r\n                    let leftPx = parseFloat(canvasComputedStyle.left.substr(0, canvasComputedStyle.left.length - 2)) || 0;\r\n                    if (widthPx + leftPx >= Inspector.WINDOW.innerWidth) {\r\n                        this._c2diwrapper.style.maxWidth = `${widthPx - leftPx}px`;\r\n                    }\r\n                }\r\n\r\n\r\n                // Check if the parent of the canvas is the body page. If yes, the size ratio is computed\r\n                let parent = this._getRelativeParent(canvas);\r\n\r\n                let parentWidthPx = parent.clientWidth;\r\n                let parentHeightPx = parent.clientHeight;\r\n\r\n                let pWidth = widthPx / parentWidthPx * 100;\r\n                let pheight = heightPx / parentHeightPx * 100;\r\n\r\n                this._c2diwrapper.style.width = pWidth + \"%\";\r\n                this._c2diwrapper.style.height = pheight + \"%\";\r\n\r\n                // reset canvas style\r\n                canvas.style.position = \"static\";\r\n                canvas.style.width = \"100%\";\r\n                canvas.style.height = \"100%\";\r\n                canvas.style.paddingBottom = \"0\";\r\n                canvas.style.paddingLeft = \"0\";\r\n                canvas.style.paddingTop = \"0\";\r\n                canvas.style.paddingRight = \"0\";\r\n\r\n                canvas.style.margin = \"0\";\r\n                canvas.style.marginBottom = \"0\";\r\n                canvas.style.marginLeft = \"0\";\r\n                canvas.style.marginTop = \"0\";\r\n                canvas.style.marginRight = \"0\";\r\n\r\n                // Replace canvas with the wrapper...\r\n                if (canvasParent) {\r\n                    canvasParent.replaceChild(this._c2diwrapper, canvas);\r\n                }\r\n                // ... and add canvas to the wrapper\r\n                this._c2diwrapper.appendChild(canvas);\r\n\r\n                // add inspector\r\n                let inspector = Helpers.CreateDiv('insp-right-panel', this._c2diwrapper);\r\n\r\n                // Add split bar\r\n                if (!this._parentElement) {\r\n                    Split([canvas, inspector], {\r\n                        direction: 'horizontal',\r\n                        sizes: [75, 25],\r\n                        onDrag: () => {\r\n                            Helpers.SEND_EVENT('resize');\r\n                            if (this._tabbar) {\r\n                                this._tabbar.updateWidth()\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // Build the inspector\r\n                this._buildInspector(inspector);\r\n            }\r\n            // Send resize event to the window\r\n            Helpers.SEND_EVENT('resize');\r\n            this._tabbar.updateWidth();\r\n        }\r\n\r\n        /*\r\n        * Refresh the inspector if the browser is not edge\r\n        *   Why not ?! Condition commented on 180525\r\n        *   To be tested\r\n        */\r\n        // if (!Helpers.IsBrowserEdge()) {\r\n        this.refresh();\r\n        // }\r\n\r\n        // Check custom css colors\r\n        if (newColors) {\r\n\r\n            let bColor = newColors.backgroundColor || '#242424';\r\n            let bColorl1 = newColors.backgroundColorLighter || '#2c2c2c';\r\n            let bColorl2 = newColors.backgroundColorLighter2 || '#383838';\r\n            let bColorl3 = newColors.backgroundColorLighter3 || '#454545';\r\n\r\n            let color = newColors.color || '#ccc';\r\n            let colorTop = newColors.colorTop || '#f29766';\r\n            let colorBot = newColors.colorBot || '#5db0d7';\r\n\r\n            let styles = Inspector.DOCUMENT.querySelectorAll('style');\r\n            for (let s = 0; s < styles.length; s++) {\r\n                let style = styles[s];\r\n\r\n                if (style.innerHTML.indexOf('insp-wrapper') != -1) {\r\n\r\n                    styles[s].innerHTML = styles[s].innerHTML\r\n                        .replace(/#242424/g, bColor) // background color\r\n                        .replace(/#2c2c2c/g, bColorl1) // background-lighter\r\n                        .replace(/#383838/g, bColorl2) // background-lighter2\r\n                        .replace(/#454545/g, bColorl3) // background-lighter3\r\n                        .replace(/#ccc/g, color) // color\r\n                        .replace(/#f29766/g, colorTop) // color-top\r\n                        .replace(/#5db0d7/g, colorBot) // color-bot\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * If the given element has a position 'asbolute' or 'relative', \r\n     * returns the first parent of the given element that has a position 'relative' or 'absolute'.\r\n     * If the given element has no position, returns the first parent\r\n     * \r\n     */\r\n    private _getRelativeParent(elem: HTMLElement, lookForAbsoluteOrRelative?: boolean): HTMLElement {\r\n        // If the elem has no parent, returns himself\r\n        if (!elem.parentElement) {\r\n            return elem;\r\n        }\r\n        let computedStyle = Inspector.WINDOW.getComputedStyle(elem);\r\n        // looking for the first element absolute or relative\r\n        if (lookForAbsoluteOrRelative) {\r\n            // if found, return this one\r\n            if (computedStyle.position === \"relative\" || computedStyle.position === \"absolute\") {\r\n                return elem;\r\n            } else {\r\n                // otherwise keep looking\r\n                return this._getRelativeParent(elem.parentElement, true);\r\n            }\r\n        }\r\n        // looking for the relative parent of the element \r\n        else {\r\n            if (computedStyle.position == \"static\") {\r\n                return elem.parentElement;\r\n            } else {\r\n                // the elem has a position relative or absolute, look for the closest relative/absolute parent\r\n                return this._getRelativeParent(elem.parentElement, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Build the inspector panel in the given HTML element */\r\n    private _buildInspector(parent: HTMLElement) {\r\n        // tabbar\r\n        this._tabbar = new TabBar(this, this._initialTab);\r\n\r\n        // Top panel\r\n        this._topPanel = Helpers.CreateDiv('top-panel', parent);\r\n        // Add tabbar\r\n        this._topPanel.appendChild(this._tabbar.toHtml());\r\n        this._tabbar.updateWidth();\r\n\r\n        // Tab panel\r\n        this._tabPanel = Helpers.CreateDiv('tab-panel-content', this._topPanel);\r\n\r\n    }\r\n\r\n    public get scene(): Scene {\r\n        return this._scene;\r\n    }\r\n    public get popupMode(): boolean {\r\n        return this._popupMode;\r\n    }\r\n\r\n    /**  \r\n     * Filter the list of item present in the tree.\r\n     * All item returned should have the given filter contained in the item id.\r\n    */\r\n    public filterItem(filter: string) {\r\n        let tab = this._tabbar.getActiveTab();\r\n\r\n        if (tab) {\r\n            tab.filter(filter);\r\n        }\r\n    }\r\n\r\n    /** Display the mesh tab on the given object */\r\n    public displayObjectDetails(mesh: AbstractMesh) {\r\n        this._tabbar.switchMeshTab(mesh);\r\n    }\r\n\r\n    /** Clean the whole tree of item and rebuilds it */\r\n    public refresh() {\r\n        // Clean top panel\r\n        Helpers.CleanDiv(this._tabPanel);\r\n\r\n        // Get the active tab and its items\r\n        let activeTab = this._tabbar.getActiveTab();\r\n\r\n        if (!activeTab) {\r\n            return;\r\n        }\r\n        activeTab.update();\r\n        this._tabPanel.appendChild(activeTab.getPanel());\r\n        Helpers.SEND_EVENT('resize');\r\n\r\n    }\r\n\r\n    /** Remove the inspector panel when it's built as a right panel:\r\n     * remove the right panel and remove the wrapper\r\n     */\r\n    public dispose() {\r\n        if (!this._popupMode) {\r\n            let activeTab = this._tabbar.getActiveTab();\r\n            if (activeTab) {\r\n                activeTab.dispose();\r\n            }\r\n\r\n            // Get canvas\r\n            let canvas = <HTMLElement>this._scene.getEngine().getRenderingCanvas();\r\n\r\n            // restore canvas style\r\n            for (let prop in this._canvasStyle) {\r\n                (<any>canvas.style)[prop] = this._canvasStyle[prop];\r\n            }\r\n            // Get parent of the wrapper \r\n            if (canvas.parentElement) {\r\n                let canvasParent = canvas.parentElement.parentElement;\r\n\r\n                if (canvasParent) {\r\n                    canvasParent.insertBefore(canvas, this._c2diwrapper);\r\n                    // Remove wrapper\r\n                    Helpers.CleanDiv(this._c2diwrapper);\r\n                    this._c2diwrapper.remove();\r\n                    // Send resize event to the window\r\n                    Helpers.SEND_EVENT('resize');\r\n                }\r\n            }\r\n        }\r\n        Scheduler.getInstance().dispose();\r\n    }\r\n\r\n    /** Open the inspector in a new popup\r\n     * Set 'firstTime' to true if there is no inspector created beforehands\r\n     */\r\n    public openPopup(firstTime?: boolean) {\r\n\r\n        // Create popup\r\n        let popup = window.open('', 'js INSPECTOR', 'toolbar=no,resizable=yes,menubar=no,width=750,height=1000');\r\n        if (!popup) {\r\n            alert(\"Please update your browser to open the js inspector in an external view.\");\r\n            return;\r\n        }\r\n        popup.document.title = \"js INSPECTOR\";\r\n        // Get the inspector style      \r\n        let styles = Inspector.DOCUMENT.querySelectorAll('style');\r\n        for (let s = 0; s < styles.length; s++) {\r\n            popup.document.body.appendChild(styles[s].cloneNode(true));\r\n        }\r\n        let links = document.querySelectorAll('link');\r\n        for (let l = 0; l < links.length; l++) {\r\n            let link = popup.document.createElement(\"link\");\r\n            link.rel = \"stylesheet\";\r\n            link.href = (links[l] as HTMLLinkElement).href;\r\n            popup.document.head.appendChild(link);\r\n        }\r\n        // Dispose the right panel if existing\r\n        if (!firstTime) {\r\n            this.dispose();\r\n        }\r\n        // set the mode as popup\r\n        this._popupMode = true;\r\n        // Save the HTML document\r\n        Inspector.DOCUMENT = popup.document;\r\n        Inspector.WINDOW = popup;\r\n        // Build the inspector wrapper\r\n        this._c2diwrapper = Helpers.CreateDiv('insp-wrapper', popup.document.body);\r\n        // add inspector     \r\n        let inspector = Helpers.CreateDiv('insp-right-panel', this._c2diwrapper);\r\n        inspector.classList.add('popupmode');\r\n        // and build it in the popup  \r\n        this._buildInspector(inspector);\r\n        // Rebuild it\r\n        this.refresh();\r\n\r\n        popup.addEventListener('resize', () => {\r\n            if (this._tabbar) {\r\n                this._tabbar.updateWidth()\r\n            }\r\n        });\r\n    }\r\n\r\n    public getActiveTabIndex(): number {\r\n        return this._tabbar.getActiveTabIndex();\r\n    }\r\n}","import { Helpers } from \"../helpers/Helpers\";\r\n\r\n/**\r\n * Represents a html div element. \r\n * The div is built when an instance of BasicElement is created.\r\n */\r\nexport abstract class BasicElement {\r\n\r\n    protected _div: HTMLDivElement;\r\n\r\n    constructor() {\r\n        this._div = Helpers.CreateDiv();\r\n    }\r\n\r\n    /**\r\n     * Returns the div element\r\n     */\r\n    public toHtml(): HTMLDivElement {\r\n        return this._div;\r\n    }\r\n\r\n    /**\r\n     * Build the html element\r\n     */\r\n    protected _build() { };\r\n\r\n    public abstract update(data?: any): void;\r\n\r\n    /** Default dispose method if needed */\r\n    public dispose() { };\r\n\r\n}\r\n","import { BasicElement } from \"../gui/BasicElement\";\r\nimport { Tab } from \"../tabs/Tab\";\r\nimport { Adapter } from \"../adapters/Adapter\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { MeshAdapter } from \"../adapters/MeshAdapter\";\r\nimport { TransformNode, AbstractMesh } from \"babylonjs\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\n\r\n\r\nexport class TreeItem extends BasicElement {\r\n\r\n    // Reference to the tab\r\n    private _tab: Tab;\r\n    // The object this item is linked to (should be a primitive or a canvas) TODO should be superclass of all primitives\r\n    private _adapter: Adapter;\r\n    private _tools: Array<AbstractTreeTool>;\r\n    public children: Array<TreeItem> = [];\r\n    // Div element that contains all children of this node.\r\n    private _lineContent: HTMLElement;\r\n\r\n    constructor(tab: Tab, obj: Adapter) {\r\n        super();\r\n        this._tab = tab;\r\n        this._adapter = obj;\r\n\r\n        this._tools = this._adapter.getTools();\r\n\r\n        this._build();\r\n\r\n    }\r\n\r\n    /** Returns the item ID == its adapter ID */\r\n    public get id(): string {\r\n        return this._adapter.id();\r\n    }\r\n\r\n    /** Add the given item as a child of this one */\r\n    public add(child: TreeItem) {\r\n        this.children.push(child);\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Returns the original adapter\r\n     */\r\n    public get adapter(): Adapter {\r\n        return this._adapter;\r\n    }\r\n\r\n    /**\r\n     * Function used to compare this item to another tree item.\r\n     * Returns the alphabetical sort of the adapter ID\r\n     */\r\n    public compareTo(item: TreeItem): number {\r\n        let str1 = this.id;\r\n        let str2 = item.id;\r\n        return str1.localeCompare(str2, [], { numeric: true });\r\n    }\r\n\r\n    /** Returns true if the given obj correspond to the adapter linked to this tree item */\r\n    public correspondsTo(obj: any): boolean {\r\n        return this._adapter.correspondsTo(obj);\r\n    }\r\n\r\n    /** hide all children of this item */\r\n    public fold() {\r\n        // Do nothing id no children\r\n        if (this.children.length > 0) {\r\n            for (let elem of this.children) {\r\n                elem.toHtml().style.display = 'none';\r\n            }\r\n            this._div.classList.add('folded');\r\n            this._div.classList.remove('unfolded');\r\n        }\r\n    }\r\n    /** Show all children of this item */\r\n    public unfold() {\r\n        // Do nothing id no children\r\n        if (this.children.length > 0) {\r\n            for (let elem of this.children) {\r\n                elem.toHtml().style.display = 'block';\r\n            }\r\n            this._div.classList.add('unfolded');\r\n            this._div.classList.remove('folded');\r\n        }\r\n    }\r\n\r\n    /** Build the HTML of this item */\r\n    protected _build() {\r\n\r\n        /**\r\n         *  Hide the debug objects :\r\n         * - Axis : xline, yline, zline\r\n         * */\r\n        let adapterId = this._adapter.id();\r\n        if (adapterId == \"xline\"\r\n            || adapterId == \"yline\"\r\n            || adapterId == \"zline\") {\r\n            this._div.className = \"line_invisible\";\r\n        }\r\n        else this._div.className = 'line';\r\n\r\n        // special class for transform node ONLY\r\n        if (this.adapter instanceof MeshAdapter) {\r\n            let obj = this.adapter.object;\r\n            if (obj instanceof TransformNode && !(obj instanceof AbstractMesh)) {\r\n                this._div.className += ' transformNode';\r\n            }\r\n        }\r\n\r\n\r\n        for (let tool of this._tools) {\r\n            this._div.appendChild(tool.toHtml());\r\n        }\r\n\r\n\r\n        // Id\r\n        let text = Inspector.DOCUMENT.createElement('span');\r\n        text.textContent = this._adapter.id();\r\n        this._div.appendChild(text);\r\n\r\n        // Type\r\n        let type = Inspector.DOCUMENT.createElement('span');\r\n        type.className = 'property-type';\r\n        if (this._adapter.type() !== 'type_not_defined') {\r\n            type.textContent = ' - ' + this._adapter.type();\r\n        }\r\n        this._div.appendChild(type);\r\n\r\n        this._lineContent = Helpers.CreateDiv('line-content', this._div);\r\n\r\n        this._addEvent();\r\n    }\r\n\r\n    /**\r\n     * Returns one HTML element (.details) containing all  details of this primitive\r\n     */\r\n    public getDetails(): Array<PropertyLine> {\r\n        return this._adapter.getProperties();\r\n    }\r\n\r\n    public update() {\r\n        // Clean division holding all children\r\n        Helpers.CleanDiv(this._lineContent);\r\n\r\n        for (let child of this.children) {\r\n            let elem = child.toHtml();\r\n            this._lineContent.appendChild(elem);\r\n        }\r\n        if (this.children.length > 0) {\r\n            // Check if folded or not\r\n            if (!this._div.classList.contains('folded') && !this._div.classList.contains('unfolded')) {\r\n                this._div.classList.add('folded');\r\n            }\r\n        }\r\n        this.fold();\r\n    }\r\n\r\n    /**\r\n     * Add an event listener on the item : \r\n     * - one click display details\r\n     */\r\n    protected _addEvent() {\r\n        this._div.addEventListener('click', (e) => {\r\n            this._tab.select(this);\r\n            // Fold/unfold the tree\r\n            if (this._isFolded()) {\r\n                this.unfold();\r\n            } else {\r\n                this.fold();\r\n            }\r\n            e.stopPropagation();\r\n        });\r\n    }\r\n\r\n    /** Returns true if the node is folded, false otherwise */\r\n    private _isFolded(): boolean {\r\n        return !this._div.classList.contains('unfolded');\r\n    }\r\n\r\n    /** Set this item as active (background lighter) in the tree panel */\r\n    public active(b: boolean) {\r\n        this._div.classList.remove('active');\r\n        for (let child of this.children) {\r\n            child.active(false);\r\n        }\r\n        if (b) {\r\n            this._div.classList.add('active');\r\n        }\r\n    }\r\n\r\n    public getDiv() {\r\n        return this._div;\r\n    }\r\n}\r\n","import { Geometry } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\n\r\n\r\nexport abstract class Adapter {\r\n\r\n    protected _obj: any;\r\n    // a unique name for this adapter, to retrieve its own key in the local storage\r\n    private static _name: string = Geometry.RandomId();\r\n\r\n    constructor(obj: any) {\r\n        this._obj = obj;\r\n    }\r\n\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public abstract id(): string;\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public abstract type(): string;\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public abstract getProperties(): Array<PropertyLine>;\r\n\r\n    /** Returns true if the given object correspond to this  */\r\n    public correspondsTo(obj: any) {\r\n        return obj === this._obj;\r\n    }\r\n\r\n    /** Returns the adapter unique name */\r\n    public get name(): string {\r\n        return Adapter._name;\r\n    }\r\n\r\n    /**\r\n     * Returns the actual object used for this adapter\r\n     */\r\n    public get object(): any {\r\n        return this._obj;\r\n    }\r\n\r\n    /** Returns the list of tools available for this adapter */\r\n    public abstract getTools(): Array<AbstractTreeTool>;\r\n}\r\n","import { BasicElement } from \"../gui/BasicElement\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\n\r\nexport abstract class Tab extends BasicElement {\r\n    protected _tabbar: TabBar;\r\n    // The tab name displayed in the tabbar\r\n    public name: string;\r\n    protected _isActive: boolean = false;\r\n\r\n    // The whole panel corresponding to this tab. It's what is displayed when the tab is activacted\r\n    protected _panel: HTMLDivElement;\r\n\r\n    constructor(tabbar: TabBar, name: string) {\r\n        super();\r\n        this._tabbar = tabbar;\r\n        this.name = name;\r\n        this._build();\r\n    }\r\n\r\n    /** True if the tab is active, false otherwise */\r\n    public isActive(): boolean {\r\n        return this._isActive;\r\n    }\r\n\r\n    protected _build() {\r\n        this._div.className = 'tab';\r\n        this._div.textContent = this.name;\r\n\r\n        this._div.addEventListener('click', (evt) => {\r\n            // Set this tab as active\r\n            this._tabbar.switchTab(this);\r\n        });\r\n    }\r\n\r\n    /** Set this tab as active or not, depending on the current state */\r\n    public active(b: boolean) {\r\n        if (b) {\r\n            this._div.classList.add('active');\r\n        } else {\r\n            this._div.classList.remove('active');\r\n        }\r\n        this._isActive = b;\r\n    }\r\n\r\n    public update() {\r\n        // Nothing for the moment\r\n    }\r\n\r\n    /** Creates the tab panel for this tab. */\r\n    public getPanel(): HTMLElement {\r\n        return this._panel;\r\n    }\r\n\r\n    /** Add this in the propertytab with the searchbar */\r\n    public filter(str: string) { };\r\n\r\n    /** Dispose properly this tab */\r\n    public abstract dispose(): void;\r\n\r\n    /** Select an item in the tree */\r\n    public select(item: TreeItem) {\r\n        // To define in subclasses if needed \r\n    }\r\n\r\n    /** \r\n     * Returns the total width in pixel of this tab, 0 by default\r\n    */\r\n    public getPixelWidth(): number {\r\n        let style = Inspector.WINDOW.getComputedStyle(this._div);\r\n        if (!style.marginLeft || !style.marginRight) {\r\n            return 0;\r\n        }\r\n        let left = parseFloat(style.marginLeft.substr(0, style.marginLeft.length - 2)) || 0;\r\n        let right = parseFloat(style.marginRight.substr(0, style.marginRight.length - 2)) || 0;\r\n        return (this._div.clientWidth || 0) + left + right;\r\n    }\r\n}\r\n\r\n","import { AbstractMesh, Nullable } from \"babylonjs\";\r\nimport { DetailPanel } from \"../details/DetailPanel\";\r\nimport { SearchBar } from \"../gui/SearchBar\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\n/**\r\n * A Property tab can creates two panels: \r\n * a tree panel and a detail panel, \r\n * in which properties will be displayed.\r\n * Both panels are separated by a resize bar\r\n */\r\nexport abstract class PropertyTab extends Tab {\r\n\r\n    protected _inspector: Inspector;\r\n    /** The panel containing a list of items */\r\n    protected _treePanel: HTMLDivElement;\r\n    /** The panel containing a list if properties corresponding to an item */\r\n    protected _detailsPanel: DetailPanel;\r\n    protected _treeItems: Array<TreeItem> = [];\r\n    protected _searchBar: SearchBar;\r\n\r\n    constructor(tabbar: TabBar, name: string, insp: Inspector) {\r\n        super(tabbar, name);\r\n\r\n        this._inspector = insp;\r\n\r\n        // Build the properties panel : a div that will contains the tree and the detail panel\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n        this._panel.classList.add('searchable');\r\n\r\n        // Search bar\r\n        this._searchBar = new SearchBar(this);\r\n        // Add searchbar\r\n        this._panel.appendChild(this._searchBar.toHtml());\r\n\r\n        // Build the treepanel\r\n        this._treePanel = Helpers.CreateDiv('insp-tree', this._panel);\r\n\r\n        // Build the detail panel\r\n        this._detailsPanel = new DetailPanel();\r\n        this._panel.appendChild(this._detailsPanel.toHtml());\r\n\r\n        Split([this._treePanel, this._detailsPanel.toHtml()], {\r\n            blockDrag: this._inspector.popupMode,\r\n            direction: 'vertical'\r\n        });\r\n\r\n        this.update();\r\n    }\r\n\r\n    /** Overrides dispose */\r\n    public dispose() {\r\n        this._detailsPanel.dispose();\r\n    }\r\n\r\n    public update(_items?: Array<TreeItem>) {\r\n\r\n        let items;\r\n        if (_items) {\r\n            items = _items;\r\n        } else {\r\n            // Rebuild the tree\r\n            this._treeItems = this._getTree();\r\n            items = this._treeItems;\r\n        }\r\n        // Clean the tree\r\n        Helpers.CleanDiv(this._treePanel);\r\n        // Clean the detail properties\r\n        this._detailsPanel.clean();\r\n\r\n\r\n        // Sort items alphabetically\r\n        items.sort((item1, item2) => {\r\n            return item1.compareTo(item2);\r\n        });\r\n\r\n        // Display items\r\n        for (let item of items) {\r\n            this._treePanel.appendChild(item.toHtml());\r\n        }\r\n    }\r\n\r\n    /** Display the details of the given item */\r\n    public displayDetails(item: TreeItem) {\r\n        // Remove active state on all items\r\n        this.activateNode(item);\r\n        // Update the detail panel\r\n        this._detailsPanel.details = item.getDetails();\r\n    }\r\n\r\n    /** Select an item in the tree */\r\n    public select(item: TreeItem) {\r\n        // Active the node\r\n        this.activateNode(item);\r\n        // Display its details\r\n        this.displayDetails(item);\r\n    }\r\n\r\n    /** Set the given item as active in the tree */\r\n    public activateNode(item: TreeItem) {\r\n        if (this._treeItems) {\r\n            for (let node of this._treeItems) {\r\n                node.active(false);\r\n            }\r\n        }\r\n        //  item.getDiv().scrollIntoView();\r\n        item.active(true);\r\n    }\r\n\r\n    /** Returns the treeitem corersponding to the given obj, null if not found */\r\n    public getItemFor(_obj: any): Nullable<TreeItem> {\r\n        let obj = _obj as AbstractMesh;\r\n\r\n        // Search recursively\r\n        let searchObjectInTree = (object: any, treeItem: TreeItem): Nullable<TreeItem> => {\r\n            if (treeItem.correspondsTo(object)) {\r\n                return treeItem;\r\n            }\r\n            else {\r\n                if (treeItem.children.length > 0) {\r\n                    for (let item of treeItem.children) {\r\n                        let it = searchObjectInTree(obj, item);\r\n                        if (it) {\r\n                            return it;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        for (let item of this._treeItems) {\r\n            let it = searchObjectInTree(obj, item);\r\n            if (it) {\r\n                return it;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public filter(filter: string) {\r\n        let items = [];\r\n\r\n        for (let item of this._treeItems) {\r\n            if (item.id.toLowerCase().indexOf(filter.toLowerCase()) != -1) {\r\n                items.push(item);\r\n            }\r\n            for (let child of item.children) {\r\n                if (child.id.toLowerCase().indexOf(filter.toLowerCase()) != -1) {\r\n                    items.push(item);\r\n                }\r\n            }\r\n        }\r\n        this.update(items);\r\n    }\r\n\r\n    /** Builds the tree panel */\r\n    protected abstract _getTree(): Array<TreeItem>;\r\n}\r\n","import { Inspector } from \"../Inspector\";\r\nimport { Tooltip } from \"../gui/Tooltip\";\r\n\r\nexport abstract class AbstractTool {\r\n    private _elem: HTMLElement;\r\n    protected _inspector: Inspector;\r\n\r\n    constructor(iconSet: string, icon: string, parent: HTMLElement, inspector: Inspector, tooltip: string) {\r\n        this._inspector = inspector;\r\n\r\n        this._elem = Inspector.DOCUMENT.createElement('i');\r\n        this._elem.className = `tool ${iconSet} ${icon}`;\r\n        parent.appendChild(this._elem);\r\n\r\n        this._elem.addEventListener('click', (e) => {\r\n            this.action();\r\n        });\r\n\r\n        new Tooltip(this._elem, tooltip);\r\n    }\r\n\r\n    public toHtml(): HTMLElement {\r\n        return this._elem;\r\n    }\r\n\r\n    /** \r\n     * Returns the total width in pixel of this tool, 0 by default\r\n    */\r\n    public getPixelWidth(): number {\r\n        let style = Inspector.WINDOW.getComputedStyle(this._elem);\r\n\r\n        if (!style.marginLeft || !style.marginRight) {\r\n            return 0;\r\n        }\r\n\r\n        let left = parseFloat(style.marginLeft.substr(0, style.marginLeft.length - 2)) || 0;\r\n        let right = parseFloat(style.marginRight.substr(0, style.marginRight.length - 2)) || 0;\r\n        return (this._elem.clientWidth || 0) + left + right;\r\n    }\r\n\r\n    /** \r\n     * Updates the icon of this tool with the given string\r\n     */\r\n    protected _updateIcon(icon: string) {\r\n        this._elem.className = `tool fa ${icon}`;\r\n    }\r\n\r\n    public abstract action(): void;\r\n}\r\n","import { Inspector } from \"../Inspector\";\r\n\r\n\r\nexport abstract class AbstractTreeTool {\r\n    protected _elem: HTMLElement;\r\n    /** Is the tool enabled ? */\r\n    protected _on: boolean = false;\r\n\r\n    constructor() {\r\n        this._elem = Inspector.DOCUMENT.createElement('i');\r\n        this._elem.className = 'treeTool fa';\r\n        this._addEvents();\r\n    }\r\n\r\n    public toHtml(): HTMLElement {\r\n        return this._elem;\r\n    }\r\n\r\n    protected _addEvents() {\r\n        this._elem.addEventListener('click', (e) => {\r\n            this.action();\r\n            e.stopPropagation();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Action launched when clicked on this element\r\n     * Should be overrided\r\n     */\r\n    protected action() {\r\n        this._on = !this._on;\r\n    }\r\n\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\n\r\n/** Any object implementing this interface should \r\n * provide methods to toggle its visibility\r\n */\r\nexport interface IToolVisible {\r\n    isVisible: () => boolean,\r\n    setVisible: (b: boolean) => void;\r\n}\r\n/**\r\n * Checkbox to display/hide the primitive\r\n */\r\nexport class Checkbox extends AbstractTreeTool {\r\n\r\n    private _obj: IToolVisible;\r\n\r\n    constructor(obj: IToolVisible) {\r\n        super();\r\n        this._obj = obj;\r\n        this._elem.classList.add('fa-eye');\r\n        this._on = this._obj.isVisible();\r\n        this._check(true);\r\n    }\r\n\r\n    // For a checkbox, set visible/invisible the corresponding prim\r\n    protected action() {\r\n        super.action();\r\n        // update object and gui according to the new status\r\n        this._check();\r\n    }\r\n\r\n    private _check(dontEnable?: boolean) {\r\n        if (this._on) {\r\n            // set icon eye\r\n            this._elem.classList.add('fa-eye');\r\n            this._elem.classList.add('active');\r\n            this._elem.classList.remove('fa-eye-slash');\r\n        } else {\r\n            // set icon eye-slash\r\n            this._elem.classList.remove('fa-eye');\r\n            this._elem.classList.remove('active');\r\n            this._elem.classList.add('fa-eye-slash');\r\n        }\r\n        if (!dontEnable) {\r\n            this._obj.setVisible(this._on);\r\n        }\r\n    }\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","import { PropertyLine } from \"../details/PropertyLine\";\r\n\r\n\r\nexport class Scheduler {\r\n\r\n    private static _instance: Scheduler;\r\n\r\n    /** Is this scheduler in pause ? */\r\n    public pause: boolean = false;\r\n\r\n    /** All properties are refreshed every 250ms */\r\n    public static REFRESH_TIME: number = 250;\r\n\r\n    /** The list of data to update */\r\n    private _updatableProperties: Array<PropertyLine> = [];\r\n\r\n    private interval: number;\r\n\r\n    constructor() {\r\n        this.interval = setInterval(this._update.bind(this), Scheduler.REFRESH_TIME);\r\n    }\r\n\r\n    public static getInstance(): Scheduler {\r\n        if (!Scheduler._instance) {\r\n            Scheduler._instance = new Scheduler();\r\n        }\r\n        return Scheduler._instance;\r\n    }\r\n\r\n    /** Add a property line to be updated every X ms */\r\n    public add(prop: PropertyLine) {\r\n        this._updatableProperties.push(prop);\r\n    }\r\n\r\n    /** Removes the given property from the list of properties to update */\r\n    public remove(prop: PropertyLine) {\r\n        let index = this._updatableProperties.indexOf(prop);\r\n        if (index != -1) {\r\n            this._updatableProperties.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private _update() {\r\n        // If not in pause, update \r\n        if (!this.pause) {\r\n            for (let prop of this._updatableProperties) {\r\n                prop.update();\r\n            }\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        window.clearInterval(this.interval);\r\n    }\r\n}\r\n","import { Scene } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\n\r\n/**\r\n * A property is a link between a data (string) and an object.\r\n */\r\nexport class Property {\r\n\r\n    /** The property name */\r\n    private _property: string;\r\n    /** The obj this property refers to */\r\n    private _obj: any;\r\n    /** The obj parent  */\r\n    private _parentObj: any;\r\n\r\n    constructor(prop: string, obj: any, parentObj?: any) {\r\n        this._property = prop;\r\n        this._obj = obj;\r\n        this._parentObj = parentObj || null;\r\n    }\r\n\r\n    public get name(): string {\r\n        return this._property;\r\n    }\r\n\r\n    public get value(): any {\r\n        return this._obj[this._property];\r\n    }\r\n    public set value(newValue: any) {\r\n        if (newValue != undefined && this._obj[this._property] != undefined) {\r\n            if (this._obj instanceof Scene) {\r\n                (<Scene>this._obj).debugLayer.onPropertyChangedObservable.notifyObservers({\r\n                    object: this._obj,\r\n                    property: this._property,\r\n                    value: newValue,\r\n                    initialValue: (<any>this._obj)[this._property]\r\n                });\r\n            }\r\n            else {\r\n                if (this._parentObj != null) {\r\n                    // Object that have \"children\" properties : Color, Vector, imageProcessingConfiguration\r\n\r\n                    if (this._parentObj instanceof Scene) {\r\n                        (<Scene>this._parentObj).debugLayer.onPropertyChangedObservable.notifyObservers({\r\n                            object: this._parentObj,\r\n                            property: this._property,\r\n                            value: newValue,\r\n                            initialValue: (<any>this._obj)[this._property]\r\n                        });\r\n                    }\r\n                    else {\r\n                        this._parentObj.getScene().debugLayer.onPropertyChangedObservable.notifyObservers({\r\n                            object: this._parentObj,\r\n                            property: this._property,\r\n                            value: newValue,\r\n                            initialValue: this._obj[this._property]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    this._obj.getScene().debugLayer.onPropertyChangedObservable.notifyObservers({\r\n                        object: this._obj,\r\n                        property: this._property,\r\n                        value: newValue,\r\n                        initialValue: this._obj[this._property]\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        this._obj[this._property] = newValue;\r\n    }\r\n\r\n    public get type(): string {\r\n        return Helpers.GET_TYPE(this.value);\r\n    }\r\n\r\n    public get obj(): any {\r\n        return this._obj;\r\n    }\r\n    public set obj(newObj: any) {\r\n        this._obj = newObj;\r\n    }\r\n\r\n}\r\n","import { BasicElement } from \"../gui/BasicElement\";\r\nimport { SearchBarDetails } from \"../gui/SearchBar\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { PropertyLine } from \"./PropertyLine\";\r\n\r\nexport interface SortDirection {\r\n    [property: string]: number;\r\n}\r\n\r\nexport class DetailPanel extends BasicElement {\r\n\r\n    // The header row\r\n    private _headerRow: HTMLElement;\r\n    // Contains all details rows that belongs to the item above\r\n    private _detailRows: Array<PropertyLine> = [];\r\n    // Store the sort direction of each header column\r\n    private _sortDirection: SortDirection = {};\r\n    // The search bar\r\n    private _searchDetails: SearchBarDetails;\r\n    private _details: HTMLDivElement;\r\n\r\n    constructor(dr?: Array<PropertyLine>) {\r\n        super();\r\n        this._build();\r\n\r\n        if (dr) {\r\n            this._detailRows = dr;\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    set details(detailsRow: Array<PropertyLine>) {\r\n        this.clean();\r\n        //add the searchBar\r\n        this._addSearchBarDetails();\r\n        this._details = Helpers.CreateDiv('details', this._div);\r\n        this._detailRows = detailsRow;\r\n        // Refresh HTML\r\n        this.update();\r\n    }\r\n\r\n    protected _build() {\r\n        this._div.className = 'insp-details';\r\n        this._div.id = 'insp-details';\r\n        // Create header row\r\n        this._createHeaderRow();\r\n        this._div.appendChild(this._headerRow);\r\n\r\n    }\r\n\r\n    /** Updates the HTML of the detail panel */\r\n    public update(_items?: Array<PropertyLine>) {\r\n        this._sortDetails('name', 1);\r\n        // Check the searchbar\r\n        if (_items) {\r\n            this.cleanRow();\r\n            this._addSearchDetails(_items);\r\n            //console.log(_items);\r\n        } else {\r\n            this._addDetails();\r\n            //console.log(\"np\");\r\n        }\r\n    }\r\n\r\n    /** Add the search bar for the details */\r\n    private _addSearchBarDetails() {\r\n        let searchDetails = Helpers.CreateDiv('searchbar-details', this._div);\r\n        // Create search bar\r\n        this._searchDetails = new SearchBarDetails(this);\r\n\r\n        searchDetails.appendChild(this._searchDetails.toHtml());\r\n        this._div.appendChild(searchDetails);\r\n    }\r\n\r\n    /** Search an element by name  */\r\n    public searchByName(searchName: string) {\r\n        let rows = [];\r\n        for (let row of this._detailRows) {\r\n            if (row.name.indexOf(searchName) >= 0) {\r\n                rows.push(row);\r\n            }\r\n        }\r\n        this.update(rows);\r\n    }\r\n\r\n    /** Add all lines in the html div. Does not sort them! */\r\n    private _addDetails() {\r\n        for (let row of this._detailRows) {\r\n            this._details.appendChild(row.toHtml());\r\n        }\r\n    }\r\n\r\n    private _addSearchDetails(_items: Array<PropertyLine>) {\r\n        for (let row of _items) {\r\n            this._details.appendChild(row.toHtml());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sort the details row by comparing the given property of each row\r\n     */\r\n    private _sortDetails(property: string, _direction?: number) {\r\n\r\n        // Clean header\r\n        let elems = Inspector.DOCUMENT.querySelectorAll('.sort-direction');\r\n        for (let e = 0; e < elems.length; e++) {\r\n            elems[e].classList.remove('fa-chevron-up');\r\n            elems[e].classList.remove('fa-chevron-down');\r\n        }\r\n\r\n\r\n        if (_direction || !this._sortDirection[property]) {\r\n            this._sortDirection[property] = _direction || 1;\r\n        } else {\r\n            this._sortDirection[property] *= -1;\r\n        }\r\n        let direction = this._sortDirection[property];\r\n        let query = this._headerRow.querySelector(`#sort-direction-${property}`);\r\n        if (query) {\r\n            if (direction == 1) {\r\n                query.classList.remove('fa-chevron-down');\r\n                query.classList.add('fa-chevron-up');\r\n            } else {\r\n                query.classList.remove('fa-chevron-up');\r\n                query.classList.add('fa-chevron-down');\r\n            }\r\n        }\r\n\r\n        let isString = (s: any) => {\r\n            return typeof (s) === 'string' || s instanceof String;\r\n        };\r\n\r\n        this._detailRows.forEach((property) => {\r\n            property.closeDetails();\r\n        })\r\n\r\n        this._detailRows.sort((detail1: any, detail2: any): number => {\r\n            let str1 = String(detail1[property]);\r\n            let str2 = String(detail2[property]);\r\n            if (!isString(str1)) {\r\n                str1 = detail1[property].toString();\r\n            }\r\n            if (!isString(str2)) {\r\n                str2 = detail2[property].toString();\r\n            }\r\n            // Compare numbers as numbers and string as string with 'numeric=true'\r\n            return str1.localeCompare(str2, [], { numeric: true }) * direction;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Removes all data in the detail panel but keep the header row\r\n     */\r\n    public clean() {\r\n        // Delete all details row\r\n        for (let pline of this._detailRows) {\r\n            pline.dispose();\r\n        }\r\n        Helpers.CleanDiv(this._div);\r\n        // Header row\r\n        this._div.appendChild(this._headerRow);\r\n    }\r\n\r\n    /**\r\n     * Clean the rows only\r\n     */\r\n    public cleanRow() {\r\n        // Delete all details row\r\n        for (let pline of this._detailRows) {\r\n            pline.dispose();\r\n        }\r\n        Helpers.CleanDiv(this._details);\r\n    }\r\n\r\n    /** Overrides basicelement.dispose */\r\n    public dispose() {\r\n        // Delete all details row\r\n        for (let pline of this._detailRows) {\r\n            pline.dispose();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates the header row : name, value, id\r\n     */\r\n    private _createHeaderRow() {\r\n        this._headerRow = Helpers.CreateDiv('header-row');\r\n\r\n        let createDiv = (name: string, cssClass: string): HTMLElement => {\r\n            let div = Helpers.CreateDiv(cssClass + ' header-col');\r\n\r\n            // Column title - first letter in uppercase\r\n            let spanName = Inspector.DOCUMENT.createElement('span');\r\n            spanName.textContent = name.charAt(0).toUpperCase() + name.slice(1);\r\n\r\n            // sort direction\r\n            let spanDirection = Inspector.DOCUMENT.createElement('i');\r\n            spanDirection.className = 'sort-direction fa';\r\n            spanDirection.id = 'sort-direction-' + name;\r\n\r\n            div.appendChild(spanName);\r\n            div.appendChild(spanDirection);\r\n\r\n            div.addEventListener('click', (e) => {\r\n                this._sortDetails(name);\r\n                this._addDetails();\r\n            });\r\n            return div;\r\n        };\r\n\r\n        this._headerRow.appendChild(createDiv('name', 'prop-name'));\r\n        this._headerRow.appendChild(createDiv('value', 'prop-value'));\r\n    }\r\n}\r\n","import { Helpers } from \"./helpers/Helpers\";\r\nimport { Vector2, Vector3, Color3, Color4, Quaternion, Size, Texture, RenderTargetTexture, DynamicTexture, BaseTexture, CubeTexture, HDRCubeTexture, Sound, ArcRotateCamera, FreeCamera, Scene, TransformNode, AbstractMesh, Mesh, StandardMaterial, PBRMaterial, PhysicsImpostor, ImageProcessingConfiguration, ColorCurves } from \"babylonjs\";\r\n\r\nexport const PROPERTIES = {\r\n\r\n    /** Format the given object : \r\n     * If a format function exists, returns the result of this function.\r\n     * If this function doesn't exists, return the object type instead\r\n     */\r\n    format: (obj: any): any => {\r\n        let type = Helpers.GET_TYPE(obj) || 'type_not_defined';\r\n        if ((<any>PROPERTIES)[type] && (<any>PROPERTIES)[type].format) {\r\n            return (<any>PROPERTIES)[type].format(obj);\r\n        } else {\r\n            return Helpers.GET_TYPE(obj);\r\n        }\r\n    },\r\n    'type_not_defined': {\r\n        properties: new Array(),\r\n        format: () => ''\r\n    },\r\n    'Vector2': {\r\n        type: Vector2,\r\n        format: (vec: Vector2) => { return `x:${Helpers.Trunc(vec.x)}, y:${Helpers.Trunc(vec.y)}`; }\r\n    },\r\n    'Vector3': {\r\n        type: Vector3,\r\n        format: (vec: Vector3) => { return `x:${Helpers.Trunc(vec.x)}, y:${Helpers.Trunc(vec.y)}, z:${Helpers.Trunc(vec.z)}` }\r\n    },\r\n    'Color3': {\r\n        type: Color3,\r\n        format: (color: Color3) => { return `R:${color.r.toPrecision(2)}, G:${color.g.toPrecision(2)}, B:${color.b.toPrecision(2)}` },\r\n        slider: {\r\n            r: { min: 0, max: 1, step: 0.01 },\r\n            g: { min: 0, max: 1, step: 0.01 },\r\n            b: { min: 0, max: 1, step: 0.01 }\r\n        }\r\n    },\r\n    'Color4': {\r\n        type: Color4,\r\n        format: (color: Color4) => { return `R:${color.r}, G:${color.g}, B:${color.b}` },\r\n        slider: {\r\n            r: { min: 0, max: 1, step: 0.01 },\r\n            g: { min: 0, max: 1, step: 0.01 },\r\n            b: { min: 0, max: 1, step: 0.01 }\r\n        }\r\n    },\r\n    'Quaternion': {\r\n        type: Quaternion\r\n    },\r\n    'Size': {\r\n        type: Size,\r\n        format: (size: Size) => { return `Size - w:${Helpers.Trunc(size.width)}, h:${Helpers.Trunc(size.height)}` }\r\n    },\r\n    'Texture': {\r\n        type: Texture,\r\n        format: (tex: Texture) => { return tex.name }\r\n    },\r\n    'RenderTargetTexture': {\r\n        type: RenderTargetTexture\r\n    },\r\n    'DynamicTexture': {\r\n        type: DynamicTexture\r\n    },\r\n    'BaseTexture': {\r\n        type: BaseTexture\r\n    },\r\n    'CubeTexture': {\r\n        type: CubeTexture\r\n    },\r\n    'HDRCubeTexture': {\r\n        type: HDRCubeTexture\r\n    },\r\n    'Sound': {\r\n        type: Sound\r\n    },\r\n    'ArcRotateCamera': {\r\n        type: ArcRotateCamera,\r\n        slider: {\r\n            alpha: { min: 0, max: 2 * Math.PI, step: 0.01 },\r\n            beta: { min: -Math.PI, max: Math.PI, step: 0.01 },\r\n            fov: { min: 0, max: 180, step: 1 }\r\n        }\r\n    },\r\n    'FreeCamera': {\r\n        type: FreeCamera,\r\n        slider: {\r\n            fov: { min: 0, max: 180, step: 1 }\r\n        }\r\n    },\r\n    'Scene': {\r\n        type: Scene,\r\n    },\r\n    'TransformNode': {\r\n        type: TransformNode,\r\n        format: (m: TransformNode): string => { return m.name; }\r\n    },\r\n    'AbstractMesh': {\r\n        type: AbstractMesh,\r\n        format: (m: AbstractMesh): string => { return m.name; }\r\n    },\r\n    'Mesh': {\r\n        type: Mesh,\r\n        format: (m: Mesh): string => { return m.name; },\r\n        slider: {\r\n            visibility: { min: 0, max: 1, step: 0.1 }\r\n        }\r\n    },\r\n    'StandardMaterial': {\r\n        type: StandardMaterial,\r\n        format: (mat: StandardMaterial): string => { return mat.name; },\r\n        slider: {\r\n            alpha: { min: 0, max: 1, step: 0.01 }\r\n        }\r\n    },\r\n    'PBRMaterial': {\r\n        type: PBRMaterial,\r\n        slider: {\r\n            alpha: { min: 0, max: 1, step: 0.01 }\r\n        }\r\n    },\r\n    'PhysicsImpostor': {\r\n        type: PhysicsImpostor\r\n    },\r\n    'ImageProcessingConfiguration': {\r\n        type: ImageProcessingConfiguration\r\n    },\r\n    'ColorCurves': {\r\n        type: ColorCurves\r\n    }\r\n}\r\n","import { Nullable } from \"babylonjs\";\r\nimport { BasicElement } from \"../gui/BasicElement\";\r\nimport { ColorPickerElement } from \"../gui/ColorPickerElement\";\r\nimport { CubeTextureElement } from \"../gui/CubeTextureElement\";\r\nimport { HDRCubeTextureElement } from \"../gui/HDRCubeTextureElement\";\r\nimport { TextureElement } from \"../gui/TextureElement\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { PROPERTIES } from \"../properties\";\r\nimport { Scheduler } from \"../scheduler/Scheduler\";\r\nimport { Property } from \"./Property\";\r\n\r\nexport class PropertyFormatter {\r\n\r\n    /**\r\n     * Format the value of the given property of the given object.\r\n     */\r\n    public static format(obj: any, prop: string): string {\r\n        // Get original value;\r\n        let value = obj[prop];\r\n        // test if type PrimitiveAlignment is available (only included in canvas2d)           \r\n        return value;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * A property line represents a line in the detail panel. This line is composed of : \r\n * - a name (the property name)\r\n * - a value if this property is of a type 'simple' : string, number, boolean, color, texture\r\n * - the type of the value if this property is of a complex type (Vector2, Size, ...)\r\n * - a ID if defined (otherwise an empty string is displayed)\r\n * The original object is sent to the value object who will update it at will.\r\n * \r\n * A property line can contain OTHER property line objects in the case of a complex type.\r\n * If this instance has no link to other instances, its type is ALWAYS a simple one (see above).\r\n * \r\n */\r\nexport class PropertyLine {\r\n\r\n    // The property can be of any type (Property internally can have any type), relative to this._obj\r\n    private _property: Property;\r\n    //The HTML element corresponding to this line\r\n    private _div: HTMLElement;\r\n    // The div containing the value to display. Used to update dynamically the property\r\n    private _valueDiv: HTMLElement;\r\n    // If the type is complex, this property will have child to update\r\n    private _children: Array<PropertyLine> = [];\r\n    // Array representing the simple type. All others are considered 'complex'\r\n    private static _SIMPLE_TYPE = ['number', 'string', 'boolean'];\r\n    // The number of pixel at each children step\r\n    private static _MARGIN_LEFT = 15;\r\n    // The margin-left used to display to row\r\n    private _level: number;\r\n    /** The list of viewer element displayed at the end of the line (color, texture...) */\r\n    private _elements: Array<BasicElement> = [];\r\n    /** The property parent of this one. Used to update the value of this property and to retrieve the correct object */\r\n    private _parent: Nullable<PropertyLine>;\r\n    /** The input element to display if this property is 'simple' in order to update it */\r\n    private _input: HTMLInputElement;\r\n    /** Display input handler (stored to be removed afterwards) */\r\n    private _displayInputHandler: EventListener;\r\n    /** Handler used to validate the input by pressing 'enter' */\r\n    private _validateInputHandler: EventListener;\r\n    /** Handler used to validate the input by pressing 'esc' */\r\n    private _escapeInputHandler: EventListener;\r\n    /** Handler used on focus out */\r\n    private _focusOutInputHandler: EventListener;\r\n    /** Handler used to get mouse position */\r\n    private _onMouseDownHandler: EventListener;\r\n    private _onMouseDragHandler: EventListener;\r\n    private _onMouseUpHandler: EventListener;\r\n\r\n    private _textValue: HTMLElement;\r\n    /** Save previous Y mouse position */\r\n    private _prevY: number;\r\n    /**Save value while slider is on */\r\n    private _preValue: number;\r\n\r\n    constructor(prop: Property, parent: Nullable<PropertyLine> = null, level: number = 0) {\r\n        this._property = prop;\r\n        this._level = level;\r\n        this._parent = parent;\r\n\r\n        this._div = Helpers.CreateDiv('row');\r\n        this._div.style.marginLeft = `${this._level}px`;\r\n\r\n        // Property name\r\n        let propName: HTMLElement = Helpers.CreateDiv('prop-name', this._div);\r\n        propName.textContent = `${this.name}`;\r\n\r\n        // Value\r\n        this._valueDiv = Helpers.CreateDiv('prop-value', this._div);\r\n\r\n        if (typeof this.value !== 'boolean' && !this._isSliderType()) {\r\n            this._valueDiv.textContent = this._displayValueContent() || '-'; // Init value text node\r\n        }\r\n\r\n        this._createElements();\r\n\r\n        for (let elem of this._elements) {\r\n            this._valueDiv.appendChild(elem.toHtml());\r\n        }\r\n\r\n        this._updateValue();\r\n        // If the property type is not simple, add click event to unfold its children\r\n        if (typeof this.value === 'boolean') {\r\n            this._checkboxInput();\r\n        } else if (this._isSliderType()) {\r\n            this._rangeInput();\r\n        } else if (!this._isSimple()) {\r\n            this._valueDiv.classList.add('clickable');\r\n            this._valueDiv.addEventListener('click', this._addDetails.bind(this));\r\n        } else {\r\n            this._initInput();\r\n            this._valueDiv.addEventListener('click', this._displayInputHandler);\r\n            this._input.addEventListener('focusout', this._focusOutInputHandler);\r\n            this._input.addEventListener('keydown', this._validateInputHandler);\r\n            this._input.addEventListener('keydown', this._escapeInputHandler);\r\n        }\r\n        // Add this property to the scheduler\r\n        Scheduler.getInstance().add(this);\r\n    }\r\n\r\n    /** \r\n     * Init the input element and al its handler : \r\n     * - a click in the window remove the input and restore the old property value\r\n     * - enters updates the property\r\n     */\r\n    private _initInput() {\r\n        // Create the input element\r\n        this._input = document.createElement('input') as HTMLInputElement;\r\n        this._input.setAttribute('type', 'text');\r\n\r\n        // if the property is 'simple', add an event listener to create an input\r\n        this._displayInputHandler = this._displayInput.bind(this);\r\n        this._validateInputHandler = this._validateInput.bind(this);\r\n        this._escapeInputHandler = this._escapeInput.bind(this);\r\n        this._focusOutInputHandler = this.update.bind(this);\r\n\r\n        this._onMouseDownHandler = this._onMouseDown.bind(this);\r\n        this._onMouseDragHandler = this._onMouseDrag.bind(this);\r\n        this._onMouseUpHandler = this._onMouseUp.bind(this);\r\n    }\r\n\r\n    /** \r\n     * On enter : validates the new value and removes the input\r\n     * On escape : removes the input\r\n     */\r\n    private _validateInput(e: KeyboardEvent) {\r\n        this._input.removeEventListener('focusout', this._focusOutInputHandler);\r\n        if (e.keyCode == 13) { // Enter\r\n            this.validateInput(this._input.value);\r\n        } else if (e.keyCode == 9) { // Tab\r\n            e.preventDefault();\r\n            this.validateInput(this._input.value);\r\n        } else if (e.keyCode == 27) { // Esc : remove input\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    public validateInput(value: any, forceupdate: boolean = true): void {\r\n        this.updateObject();\r\n        if (typeof this._property.value === 'number') {\r\n            this._property.value = parseFloat(value);\r\n        } else {\r\n            this._property.value = value;\r\n        }\r\n        // Remove input\r\n        if (forceupdate) {\r\n            this.update();\r\n            // resume scheduler\r\n            Scheduler.getInstance().pause = false;\r\n        }\r\n    }\r\n\r\n    /** \r\n     * On escape : removes the input\r\n     */\r\n    private _escapeInput(e: KeyboardEvent) {\r\n        // Remove focus out handler\r\n        this._input.removeEventListener('focusout', this._focusOutInputHandler);\r\n        if (e.keyCode == 27) {\r\n            // Esc : remove input\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    /** Removes the input without validating the new value */\r\n    private _removeInputWithoutValidating() {\r\n        Helpers.CleanDiv(this._valueDiv);\r\n        if (typeof this.value !== 'boolean' && !this._isSliderType()) {\r\n            this._valueDiv.textContent = \"-\";\r\n        }\r\n        // restore elements\r\n        for (let elem of this._elements) {\r\n            this._valueDiv.appendChild(elem.toHtml());\r\n        }\r\n\r\n        if (typeof this.value !== 'boolean' && !this._isSliderType()) {\r\n            this._valueDiv.addEventListener('click', this._displayInputHandler);\r\n        }\r\n    }\r\n\r\n    /** Replaces the default display with an input */\r\n    private _displayInput(e: any) {\r\n        // Remove the displayInput event listener\r\n        this._valueDiv.removeEventListener('click', this._displayInputHandler);\r\n        // Set input value\r\n        let valueTxt = this._valueDiv.textContent;\r\n        this._valueDiv.textContent = \"\";\r\n        this._input.value = valueTxt || \"\";\r\n        this._valueDiv.appendChild(this._input);\r\n        this._input.focus();\r\n\r\n        if (typeof this.value !== 'boolean' && !this._isSliderType()) {\r\n            this._input.addEventListener('focusout', this._focusOutInputHandler);\r\n        } else if (typeof this.value === 'number') {\r\n            this._input.addEventListener('mousedown', this._onMouseDownHandler);\r\n        }\r\n\r\n        // Pause the scheduler\r\n        Scheduler.getInstance().pause = true;\r\n    }\r\n\r\n    /** Retrieve the correct object from its parent. \r\n     * If no parent exists, returns the property value.\r\n     * This method is used at each update in case the property object is removed from the original object \r\n     * (example : mesh.position = new Vector3 ; the original vector3 object is deleted from the mesh).\r\n    */\r\n    public updateObject() {\r\n        if (this._parent) {\r\n            this._property.obj = this._parent.updateObject();\r\n        }\r\n\r\n\r\n        return this._property.value;\r\n    }\r\n\r\n    // Returns the property name\r\n    public get name(): string {\r\n        // let arrayName = Helpers.Capitalize(this._property.name).match(/[A-Z][a-z]+|[0-9]+/g)\r\n        // if (arrayName) {\r\n        //     return arrayName.join(\" \");\r\n        // }\r\n        return this._property.name;\r\n    }\r\n\r\n    // Returns the value of the property\r\n    public get value(): any {\r\n        return PropertyFormatter.format(this._property.obj, this._property.name);\r\n    }\r\n\r\n    // Returns the type of the property\r\n    public get type(): string {\r\n        return this._property.type;\r\n    }\r\n\r\n    /**\r\n     * Creates elements that wil be displayed on a property line, depending on the\r\n     * type of the property.\r\n     */\r\n    private _createElements() {\r\n        // Colors\r\n        if (this.type == 'Color3' || this.type == 'Color4') {\r\n            if (!Helpers.IsBrowserIE()) {\r\n                this._elements.push(new ColorPickerElement(this.value, this));\r\n            }\r\n        }\r\n        // Texture\r\n        if (this.type == 'Texture') {\r\n            this._elements.push(new TextureElement(this.value));\r\n        }\r\n        // HDR Texture\r\n        if (this.type == 'HDRCubeTexture') {\r\n            this._elements.push(new HDRCubeTextureElement(this.value));\r\n        }\r\n        if (this.type == 'CubeTexture') {\r\n            this._elements.push(new CubeTextureElement(this.value));\r\n        }\r\n    }\r\n\r\n    // Returns the text displayed on the left of the property name : \r\n    // - If the type is simple, display its value\r\n    // - If the type is complex, but instance of Vector2, Size, display the type and its tostring\r\n    // - If the type is another one, display the Type\r\n    private _displayValueContent() {\r\n        let value = this.value;\r\n        // If the value is a number, truncate it if needed\r\n        if (typeof value === 'number') {\r\n            return Helpers.Trunc(value);\r\n        }\r\n\r\n        // If it's a string or a boolean, display its value\r\n        if (typeof value === 'string' || typeof value === 'boolean') {\r\n            return value;\r\n        }\r\n        return PROPERTIES.format(value);\r\n    }\r\n\r\n    /** Delete properly this property line. \r\n     * Removes itself from the scheduler.\r\n     * Dispose all viewer element (color, texture...)\r\n     */\r\n    public dispose() {\r\n        Scheduler.getInstance().remove(this);\r\n        for (let child of this._children) {\r\n            Scheduler.getInstance().remove(child);\r\n        }\r\n        for (let elem of this._elements) {\r\n            elem.dispose();\r\n        }\r\n        this._elements = [];\r\n    }\r\n\r\n    /** Updates the content of _valueDiv with the value of the property, \r\n     * and all HTML element correpsonding to this type.\r\n     * Elements are updated as well\r\n     */\r\n    private _updateValue() {\r\n        // Update the property object first\r\n        this.updateObject();\r\n        // Then update its value\r\n        // this._valueDiv.textContent = \" \"; // TOFIX this removes the elements after\r\n        if (typeof this.value === 'boolean') {\r\n            this._checkboxInput();\r\n        } else if (this._isSliderType()) { // Add slider when parent have slider property\r\n            this._rangeInput();\r\n        } else {\r\n            this._valueDiv.childNodes[0].nodeValue = this._displayValueContent();\r\n\r\n            //Doing the Hexa convertion\r\n            if ((this._property.type == \"Color3\" && this._children.length == 5 && this._children[1].value == true) || (this._property.type == \"Color4\" && this._children.length == 6 && this._children[1].value == true)) {\r\n                if (this._children[0] != undefined && this._children[0].name == \"hex\") {\r\n                    let hexLineString = this._children[0].value;\r\n                    let rValue = (parseInt((hexLineString.slice(1, 3)), 16)) * (1 / 255);\r\n                    let rValueRound = Math.round(100 * rValue) / 100;\r\n                    this.value.r = rValueRound;\r\n                    let gValue = (parseInt((hexLineString.slice(3, 5)), 16)) * (1 / 255);\r\n                    let gValueRound = Math.round(100 * gValue) / 100;\r\n                    this.value.g = gValueRound;\r\n                    let bValue = (parseInt((hexLineString.slice(5, 7)), 16)) * (1 / 255);\r\n                    let bValueRound = Math.round(100 * bValue) / 100;\r\n                    this.value.b = bValueRound;\r\n                    if (this._children[2].name == \"a\") {\r\n                        let aValue = (parseInt((hexLineString.slice(7, 9)), 16)) * (1 / 255);\r\n                        let aValueRound = Math.round(100 * aValue) / 100;\r\n                        this.value.a = aValueRound;\r\n                    }\r\n                }\r\n            } else if (this._property.type == \"Color3\" || this._property.type == \"Color4\") {\r\n                if (this._property.value.hex != undefined && this._property.value.hex != null) {\r\n                    let hexLineInfos = [];\r\n                    let valHexR = ((this._property.value.r * 255) | 0).toString(16);\r\n                    hexLineInfos.push(valHexR);\r\n                    if (valHexR == \"0\") {\r\n                        hexLineInfos.push(\"0\");\r\n                    }\r\n                    let valHexG = ((this._property.value.g * 255) | 0).toString(16);\r\n                    hexLineInfos.push(valHexG);\r\n                    if (valHexG == \"0\") {\r\n                        hexLineInfos.push(\"0\");\r\n                    }\r\n                    let valHexB = ((this._property.value.b * 255) | 0).toString(16);\r\n                    hexLineInfos.push(valHexB);\r\n                    if (valHexB == \"0\") {\r\n                        hexLineInfos.push(\"0\");\r\n                    }\r\n                    if (this._property.value.a != undefined) {\r\n                        let valHexA = ((this._property.value.a * 255) | 0).toString(16);\r\n                        hexLineInfos.push(valHexA);\r\n                        if (valHexA == \"0\") {\r\n                            hexLineInfos.push(\"0\");\r\n                        }\r\n                    }\r\n                    hexLineInfos.unshift(\"#\");\r\n                    let hexLineString = hexLineInfos.join(\"\");\r\n                    this._property.value.hex = hexLineString;\r\n                    hexLineInfos.length = 0;\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n        for (let elem of this._elements) {\r\n            elem.update(this.value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the property division with the new property value. \r\n     * If this property is complex, update its child, otherwise update its text content\r\n     */\r\n    public update() {\r\n        this._removeInputWithoutValidating();\r\n        this._updateValue();\r\n    }\r\n\r\n    /**\r\n     * Returns true if the type of this property is simple, false otherwise.\r\n     * Returns true if the value is null\r\n     */\r\n    private _isSimple(): boolean {\r\n        if (this.value != null && this.type !== 'type_not_defined') {\r\n            if (PropertyLine._SIMPLE_TYPE.indexOf(this.type) == -1) {\r\n                // complex type : return the type name\r\n                return false;\r\n            } else {\r\n                // simple type : return value\r\n                return true;\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public toHtml(): HTMLElement {\r\n        return this._div;\r\n    }\r\n\r\n    public closeDetails() {\r\n        if (this._div.classList.contains('unfolded')) {\r\n            // Remove class unfolded\r\n            this._div.classList.remove('unfolded');\r\n            // remove html children\r\n            if (this._div.parentNode) {\r\n                for (let child of this._children) {\r\n                    this._div.parentNode.removeChild(child.toHtml());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add sub properties in case of a complex type\r\n     */\r\n    private _addDetails() {\r\n        if (this._div.classList.contains('unfolded')) {\r\n            // Remove class unfolded\r\n            this._div.classList.remove('unfolded');\r\n            // remove html children\r\n            if (this._div.parentNode) {\r\n                for (let child of this._children) {\r\n                    this._div.parentNode.removeChild(child.toHtml());\r\n                }\r\n            }\r\n        } else {\r\n            // if children does not exists, generate it\r\n            this._div.classList.toggle('unfolded');\r\n            if (this._children.length == 0) {\r\n\r\n                let objToDetail = this.value;\r\n\r\n                // Display all properties that are not functions\r\n                let propToDisplay = Helpers.GetAllLinesPropertiesAsString(objToDetail);\r\n                // special case for color3\r\n                if ((propToDisplay.indexOf('r') && propToDisplay.indexOf('g') && propToDisplay.indexOf('b')) == 0) {\r\n                    propToDisplay.sort();\r\n                } else {\r\n                    propToDisplay.sort().reverse();\r\n                }\r\n                for (let prop of propToDisplay) {\r\n                    let infos = new Property(prop, this._property.value, this._property.obj);\r\n                    let child = new PropertyLine(infos, this, this._level + PropertyLine._MARGIN_LEFT);\r\n                    this._children.push(child);\r\n                }\r\n                //Add the Hexa converter\r\n                if ((propToDisplay.indexOf('r') && propToDisplay.indexOf('g') && propToDisplay.indexOf('b') && propToDisplay.indexOf('a')) == 0) {\r\n                    let hexLineInfos = [];\r\n                    let hexLinePropCheck = new Property(\"hexEnable\", this._property.value, this._property.obj);\r\n                    hexLinePropCheck.value = false;\r\n                    let hexLineCheck = new PropertyLine(hexLinePropCheck, this, this._level + PropertyLine._MARGIN_LEFT);\r\n                    this._children.unshift(hexLineCheck);\r\n                    for (let prop of propToDisplay) {\r\n                        let infos = new Property(prop, this._property.value, this._property.obj);\r\n                        let valHex = ((infos.value * 255) | 0).toString(16);\r\n                        hexLineInfos.push(valHex);\r\n                        if (valHex == \"0\") {\r\n                            hexLineInfos.push(\"0\");\r\n                        }\r\n                    }\r\n                    hexLineInfos.push(\"#\");\r\n                    hexLineInfos.reverse();\r\n                    let hexLineString = hexLineInfos.join(\"\");\r\n\r\n                    let hexLineProp = new Property(\"hex\", this._property.value, this._property.obj);\r\n                    hexLineProp.value = hexLineString;\r\n                    let hexLine = new PropertyLine(hexLineProp, this, this._level + PropertyLine._MARGIN_LEFT);\r\n\r\n                    this._children.unshift(hexLine);\r\n                }\r\n            }\r\n            // otherwise display it    \r\n            if (this._div.parentNode) {\r\n                for (let child of this._children) {\r\n                    this._div.parentNode.insertBefore(child.toHtml(), this._div.nextSibling);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh mouse position on y axis\r\n     * @param e \r\n     */\r\n    private _onMouseDrag(e: MouseEvent): void {\r\n        const diff = this._prevY - e.clientY;\r\n        this._input.value = (this._preValue + diff).toString();\r\n    }\r\n\r\n    /**\r\n     * Save new value from slider\r\n     * @param e \r\n     */\r\n    private _onMouseUp(e: MouseEvent): void {\r\n        window.removeEventListener('mousemove', this._onMouseDragHandler);\r\n        window.removeEventListener('mouseup', this._onMouseUpHandler);\r\n        this._prevY = e.clientY;\r\n    }\r\n\r\n    /**\r\n     * Start record mouse position\r\n     * @param e \r\n     */\r\n    private _onMouseDown(e: MouseEvent): void {\r\n        this._prevY = e.clientY;\r\n        this._preValue = this.value;\r\n        window.addEventListener('mousemove', this._onMouseDragHandler);\r\n        window.addEventListener('mouseup', this._onMouseUpHandler);\r\n    }\r\n\r\n    /**\r\n     * Create input entry\r\n     */\r\n    private _checkboxInput() {\r\n        if (this._valueDiv.childElementCount < 1) { // Prevent display two checkbox\r\n            this._input = Helpers.CreateInput('checkbox-element', this._valueDiv);\r\n            this._input.type = 'checkbox'\r\n            this._input.checked = this.value;\r\n            this._input.addEventListener('change', () => {\r\n                Scheduler.getInstance().pause = true;\r\n                this.validateInput(!this.value)\r\n            })\r\n        }\r\n    }\r\n\r\n    private _rangeInput() {\r\n        if (this._valueDiv.childElementCount < 1) { // Prevent display two input range\r\n            this._input = Helpers.CreateInput('slider-element', this._valueDiv);\r\n            this._input.type = 'range';\r\n            this._input.style.display = 'inline-block';\r\n            this._input.min = this._getSliderProperty().min;\r\n            this._input.max = this._getSliderProperty().max;\r\n            this._input.step = this._getSliderProperty().step;\r\n            this._input.value = this.value;\r\n\r\n            this._validateInputHandler = this._rangeHandler.bind(this)\r\n            this._input.addEventListener('input', this._validateInputHandler)\r\n            this._input.addEventListener('change', () => {\r\n                Scheduler.getInstance().pause = false;\r\n            })\r\n\r\n            this._textValue = Helpers.CreateDiv('value-text', this._valueDiv);\r\n            this._textValue.innerText = Helpers.Trunc(this.value).toString();\r\n            this._textValue.style.paddingLeft = '10px';\r\n            this._textValue.style.display = 'inline-block';\r\n        }\r\n    }\r\n\r\n    private _rangeHandler() {\r\n        Scheduler.getInstance().pause = true;\r\n        //this._input.style.backgroundSize = ((parseFloat(this._input.value) - parseFloat(this._input.min)) * 100 / ( parseFloat(this._input.max) - parseFloat(this._input.min))) + '% 100%'\r\n        this._textValue.innerText = this._input.value;\r\n        this.validateInput(this._input.value, false);\r\n    }\r\n\r\n    private _isSliderType() { //Check if property have slider definition\r\n        return this._property &&\r\n            PROPERTIES.hasOwnProperty(this._property.obj.constructor.name) &&\r\n            (<any>PROPERTIES)[this._property.obj.constructor.name].hasOwnProperty('slider') &&\r\n            (<any>PROPERTIES)[this._property.obj.constructor.name].slider.hasOwnProperty(this.name);\r\n    }\r\n\r\n    private _getSliderProperty() {\r\n        return (<any>PROPERTIES)[this._property.obj.constructor.name].slider[this.name]\r\n    }\r\n}\r\n","import { DetailPanel } from \"../details/DetailPanel\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { PropertyTab } from \"../tabs/PropertyTab\";\r\nimport { BasicElement } from \"./BasicElement\";\r\n\r\n\r\n/**\r\n * A search bar can be used to filter elements in the tree panel.\r\n * At each keypress on the input, the treepanel will be filtered.\r\n */\r\nexport class SearchBar extends BasicElement {\r\n\r\n    private _propTab: PropertyTab;\r\n    private _inputElement: HTMLInputElement;\r\n\r\n    constructor(tab: PropertyTab) {\r\n        super();\r\n        this._propTab = tab;\r\n        this._div.classList.add('searchbar');\r\n\r\n        let filter = Inspector.DOCUMENT.createElement('i');\r\n        filter.className = 'fa fa-search';\r\n\r\n        this._div.appendChild(filter);\r\n        // Create input\r\n        this._inputElement = Inspector.DOCUMENT.createElement('input');\r\n        this._inputElement.placeholder = 'Filter by name...';\r\n        this._div.appendChild(this._inputElement);\r\n\r\n        this._inputElement.addEventListener('keyup', (evt: KeyboardEvent) => {\r\n            let filter = this._inputElement.value;\r\n            this._propTab.filter(filter);\r\n        })\r\n    }\r\n\r\n    /** Delete all characters typped in the input element */\r\n    public reset() {\r\n        this._inputElement.value = '';\r\n    }\r\n\r\n    public update() {\r\n        // Nothing to update\r\n    }\r\n\r\n}\r\n\r\nexport class SearchBarDetails extends BasicElement {\r\n\r\n    private _detailTab: DetailPanel;\r\n    private _inputElement: HTMLInputElement;\r\n\r\n    constructor(tab: DetailPanel) {\r\n        super();\r\n        this._detailTab = tab;\r\n        this._div.classList.add('searchbar');\r\n\r\n        let filter = Inspector.DOCUMENT.createElement('i');\r\n        filter.className = 'fa fa-search';\r\n\r\n        this._div.appendChild(filter);\r\n        // Create input\r\n        this._inputElement = Inspector.DOCUMENT.createElement('input');\r\n        this._inputElement.placeholder = 'Filter by name...';\r\n        this._div.appendChild(this._inputElement);\r\n\r\n        this._inputElement.addEventListener('keyup', (evt: KeyboardEvent) => {\r\n            let filter = this._inputElement.value;\r\n            this._detailTab.searchByName(filter);\r\n        })\r\n    }\r\n\r\n    /** Delete all characters typped in the input element */\r\n    public reset() {\r\n        this._inputElement.value = '';\r\n    }\r\n\r\n    public update() {\r\n        // Nothing to update\r\n    }\r\n\r\n}\r\n","import { AbstractMesh, Debug, Node, Nullable, Observer, Scene, TransformNode, Vector3 } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { BoundingBox, IToolBoundingBox } from \"../treetools/BoundingBox\";\r\nimport { Checkbox, IToolVisible } from \"../treetools/Checkbox\";\r\nimport { DebugArea, IToolDebug } from \"../treetools/DebugArea\";\r\nimport { Info, IToolInfo } from \"../treetools/Info\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\n\r\nexport class MeshAdapter\r\n    extends Adapter\r\n    implements IToolVisible, IToolDebug, IToolBoundingBox, IToolInfo {\r\n\r\n    /** Keep track of the axis of the actual object */\r\n    private _axesViewer: Nullable<any>;\r\n    private onBeforeRenderObserver: Nullable<Observer<Scene>>;\r\n\r\n    constructor(mesh: Node) {\r\n        super(mesh);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new Checkbox(this));\r\n        tools.push(new DebugArea(this));\r\n        if (this._obj instanceof AbstractMesh) {\r\n            if ((this._obj as AbstractMesh).getTotalVertices() > 0) {\r\n                tools.push(new BoundingBox(this));\r\n            }\r\n        }\r\n\r\n\r\n        tools.push(new Info(this));\r\n        return tools;\r\n    }\r\n\r\n    public setVisible(b: boolean) {\r\n        this._obj.setEnabled(b);\r\n        this._obj.isVisible = b;\r\n    }\r\n    public isVisible(): boolean {\r\n        return this._obj.isEnabled() && (this._obj.isVisible === undefined || this._obj.isVisible);\r\n    }\r\n    public isBoxVisible(): boolean {\r\n        return (this._obj as AbstractMesh).showBoundingBox;\r\n    }\r\n    public setBoxVisible(b: boolean) {\r\n        return (this._obj as AbstractMesh).showBoundingBox = b;\r\n    }\r\n\r\n    public debug(enable: boolean) {\r\n        // Draw axis the first time\r\n        if (!this._axesViewer) {\r\n            this._drawAxis();\r\n        }\r\n        // Display or hide axis\r\n        if (!enable && this._axesViewer) {\r\n            let mesh = this._obj as AbstractMesh;\r\n            mesh.getScene().onBeforeRenderObservable.remove(this.onBeforeRenderObserver);\r\n            this._axesViewer.dispose();\r\n            this._axesViewer = null;\r\n        }\r\n    }\r\n\r\n    /** Returns some information about this mesh */\r\n    public getInfo(): string {\r\n        if (this._obj instanceof AbstractMesh) {\r\n            return `${(this._obj as AbstractMesh).getTotalVertices()} vertices`;\r\n        }\r\n        return '0 vertices';\r\n    }\r\n\r\n    /** Draw X, Y and Z axis for the actual object if this adapter.\r\n     * Should be called only one time as it will fill this._axis\r\n     */\r\n    private _drawAxis() {\r\n        this._obj.computeWorldMatrix();\r\n\r\n        // Axis\r\n        var x = new Vector3(1, 0, 0);\r\n        var y = new Vector3(0, 1, 0);\r\n        var z = new Vector3(0, 0, 1);\r\n\r\n        this._axesViewer = new Debug.AxesViewer(this._obj.getScene());\r\n\r\n        let mesh = this._obj as TransformNode;\r\n        this.onBeforeRenderObserver = mesh.getScene().onBeforeRenderObservable.add(() => {\r\n            let matrix = mesh.getWorldMatrix();\r\n            let extend = new Vector3(1, 1, 1);\r\n            if (mesh instanceof AbstractMesh) {\r\n                extend = mesh.getBoundingInfo().boundingBox.extendSizeWorld;\r\n            }\r\n            this._axesViewer!.scaleLines = Math.max(extend.x, extend.y, extend.z) * 2;\r\n            this._axesViewer!.update(this._obj.position, Vector3.TransformNormal(x, matrix), Vector3.TransformNormal(y, matrix), Vector3.TransformNormal(z, matrix));\r\n        });\r\n    }\r\n}\r\n","import { Nullable } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\n\r\n\r\n/**\r\n * Creates a tooltip for the parent of the given html element\r\n */\r\nexport class Tooltip {\r\n\r\n    /** The tooltip is displayed for this element */\r\n    private _elem: HTMLElement;\r\n\r\n    /** The tooltip div */\r\n    private _infoDiv: HTMLDivElement;\r\n\r\n    constructor(elem: HTMLElement, tip: string, attachTo: Nullable<HTMLElement> = null) {\r\n\r\n        this._elem = elem;\r\n        if (!attachTo) {\r\n            attachTo = this._elem.parentElement;\r\n        }\r\n        this._infoDiv = Helpers.CreateDiv('tooltip', <HTMLElement>attachTo) as HTMLDivElement;\r\n\r\n\r\n        this._elem.addEventListener('mouseover', () => {\r\n            this._infoDiv.textContent = tip;\r\n            this._infoDiv.style.display = 'block'\r\n        });\r\n        this._elem.addEventListener('mouseout', () => { this._infoDiv.style.display = 'none' });\r\n    }\r\n}\r\n","import { Color4, CubeTexture, Engine, Mesh, Scene, StandardMaterial, Texture } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { BasicElement } from \"./BasicElement\";\r\n\r\n/**\r\n* Display a very small div. A new canvas is created, with a new js scene, containing only the \r\n* cube texture in a cube\r\n*/\r\nexport class CubeTextureElement extends BasicElement {\r\n\r\n    /** The big div displaying the full image */\r\n    private _textureDiv: HTMLElement;\r\n\r\n    private _engine: Engine;\r\n    protected _scene: Scene;\r\n    protected _cube: Mesh;\r\n    private _canvas: HTMLCanvasElement;\r\n    protected _textureUrl: string;\r\n\r\n    // On pause the engine will not render anything\r\n    private _pause: boolean = false;\r\n\r\n    /** The texture given as a parameter should be cube. */\r\n    constructor(tex: Texture) {\r\n        super();\r\n        this._div.className = 'fa fa-search texture-element';\r\n\r\n        // Create the texture viewer\r\n        this._textureDiv = Helpers.CreateDiv('texture-viewer', this._div);\r\n        // canvas\r\n        this._canvas = Helpers.CreateElement('canvas', 'texture-viewer-img', this._textureDiv) as HTMLCanvasElement;\r\n\r\n        if (tex) {\r\n            this._textureUrl = tex.name;\r\n        }\r\n\r\n        this._div.addEventListener('mouseover', this._showViewer.bind(this, 'flex'));\r\n        this._div.addEventListener('mouseout', this._showViewer.bind(this, 'none'));\r\n\r\n    }\r\n\r\n    public update(tex?: Texture) {\r\n        if (tex && tex.url === this._textureUrl) {\r\n            // Nothing to do, as the old texture is the same as the old one\r\n        } else {\r\n            if (tex) {\r\n                this._textureUrl = tex.name;\r\n            }\r\n            if (this._engine) {\r\n                // Dispose old material and cube\r\n                if (this._cube.material) {\r\n                    this._cube.material.dispose(true, true);\r\n                }\r\n                this._cube.dispose();\r\n            } else {\r\n                this._initEngine();\r\n            }\r\n            // and create it again\r\n            this._populateScene();\r\n        }\r\n    }\r\n\r\n    /** Creates the box  */\r\n    protected _populateScene() {\r\n        // Create the hdr texture\r\n        let hdrTexture = new CubeTexture(this._textureUrl, this._scene);\r\n        hdrTexture.coordinatesMode = Texture.SKYBOX_MODE;\r\n\r\n        this._cube = Mesh.CreateBox(\"hdrSkyBox\", 10.0, this._scene);\r\n        let hdrSkyboxMaterial = new StandardMaterial(\"skyBox\", this._scene);\r\n        hdrSkyboxMaterial.backFaceCulling = false;\r\n        hdrSkyboxMaterial.reflectionTexture = hdrTexture;\r\n        hdrSkyboxMaterial.reflectionTexture.coordinatesMode = Texture.SKYBOX_MODE;\r\n        hdrSkyboxMaterial.disableLighting = true;\r\n        this._cube.material = hdrSkyboxMaterial;\r\n        this._cube.registerBeforeRender(() => {\r\n            this._cube.rotation.y += 0.01;\r\n        })\r\n    }\r\n\r\n    /** Init the babylon engine */\r\n    private _initEngine() {\r\n        this._engine = new Engine(this._canvas);\r\n        this._scene = new Scene(this._engine);\r\n        this._scene.clearColor = new Color4(0, 0, 0, 0);\r\n\r\n        this._engine.runRenderLoop(() => {\r\n            if (!this._pause) {\r\n                this._scene.render();\r\n            }\r\n        });\r\n\r\n        this._canvas.setAttribute('width', '110');\r\n        this._canvas.setAttribute('height', '110');\r\n    }\r\n\r\n    private _showViewer(mode: string) {\r\n        // If displaying...\r\n        if (mode != 'none') {\r\n            // ... and the canvas is not initialized                \r\n            if (!this._engine) {\r\n                this._initEngine();\r\n                this._populateScene();\r\n            }\r\n            // In every cases, unpause the engine\r\n            this._pause = false;\r\n        } else {\r\n            // hide : pause the engine\r\n            this._pause = true;\r\n        }\r\n        this._textureDiv.style.display = mode;\r\n    }\r\n\r\n    /** Removes properly the babylon engine */\r\n    public dispose() {\r\n        if (this._engine) {\r\n            this._engine.dispose();\r\n            (<any>this._engine) = null;\r\n        }\r\n    }\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\nimport { Inspector } from \"../Inspector\";\r\n\r\n\r\nexport interface ICameraPOV {\r\n    setPOV: () => void,\r\n    getCurrentActiveCamera: () => string,\r\n    id: () => string\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport class CameraPOV extends AbstractTreeTool {\r\n    private cameraPOV: ICameraPOV;\r\n\r\n    constructor(camera: ICameraPOV) {\r\n        super();\r\n        this.cameraPOV = camera;\r\n\r\n        // Setting the id of the line with the name of the camera\r\n        this._elem.id = this.cameraPOV.id();\r\n\r\n        // Put the right icon \r\n        if (this._elem.id == this.cameraPOV.getCurrentActiveCamera()) {\r\n            this._elem.classList.add('fa-check-circle');\r\n        } else {\r\n            this._elem.classList.add('fa-circle');\r\n        }\r\n    }\r\n\r\n    protected action() {\r\n        super.action();\r\n        this._gotoPOV();\r\n    }\r\n\r\n    private _gotoPOV() {\r\n        // Uncheck all the radio buttons\r\n        let actives = Inspector.DOCUMENT.querySelectorAll(\".fa-check-circle\");\r\n        for (let i = 0; i < actives.length; i++) {\r\n            actives[i].classList.remove('fa-check-circle');\r\n            actives[i].classList.add('fa-circle');\r\n        }\r\n\r\n        // setting the point off view to the right camera\r\n        this.cameraPOV.setPOV();\r\n\r\n        // Check the right radio button\r\n        if (this._elem.id == this.cameraPOV.getCurrentActiveCamera()) {\r\n            this._elem.classList.remove('fa-circle');\r\n            this._elem.classList.add('fa-check-circle');\r\n        }\r\n\r\n    }\r\n}\r\n","import { CubeTexture, Engine, EnvironmentTextureTools, Nullable, Scene, Tools } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class ToolsTab extends Tab {\r\n\r\n    private _inspector: Inspector;\r\n\r\n    private _scene: Scene;\r\n\r\n    constructor(tabbar: TabBar, insp: Inspector) {\r\n        super(tabbar, 'Tools');\r\n\r\n        this._inspector = insp;\r\n\r\n        this._scene = this._inspector.scene;\r\n\r\n        // Build the tools panel: a div that will contains all tools\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n        this._panel.classList.add(\"tools-panel\")\r\n\r\n        let title = Helpers.CreateDiv('tool-title1', this._panel);\r\n        let versionSpan = Helpers.CreateElement('span');\r\n        versionSpan.textContent = `js v${Engine.Version} - Tools`;\r\n        title.appendChild(versionSpan);\r\n\r\n        // Environment block\r\n        title = Helpers.CreateDiv('tool-title2', this._panel);\r\n        title.textContent = \"Environment Texture (.dds, .env)\";\r\n        {\r\n            let errorElemm = Inspector.DOCUMENT.createElement('div');\r\n            errorElemm.className = \"tool-label-error\";\r\n            errorElemm.style.display = \"none\";\r\n\r\n            let elemValue = Helpers.CreateDiv(null, this._panel);\r\n\r\n            let inputElement = Inspector.DOCUMENT.createElement('input');\r\n            inputElement.className = \"tool-input\";\r\n            inputElement.type = \"file\";\r\n            inputElement.accept = \".dds, .env\";\r\n            inputElement.onchange = (event: any) => {\r\n                var files: File[] = event.target.files;\r\n                let file: Nullable<File> = null;\r\n                if (files && files.length) {\r\n                    file = files[0];\r\n                }\r\n\r\n                if (!file) {\r\n                    errorElemm.style.display = \"block\";\r\n                    errorElemm.textContent = \"Please, select a file first.\"\r\n                    return;\r\n                }\r\n\r\n                let isFileDDS = file.name.toLowerCase().indexOf(\".dds\") > 0;\r\n                let isFileEnv = file.name.toLowerCase().indexOf(\".env\") > 0;\r\n                if (!isFileDDS && !isFileEnv) {\r\n                    errorElemm.style.display = \"block\";\r\n                    errorElemm.textContent = \"Please, select a dds or env file.\"\r\n                    return;\r\n                }\r\n\r\n                Tools.ReadFile(file, data => {\r\n                    var blob = new Blob([data], { type: \"octet/stream\" });\r\n                    var url = URL.createObjectURL(blob);\r\n                    if (isFileDDS) {\r\n                        this._scene.environmentTexture = CubeTexture.CreateFromPrefilteredData(url, this._scene, \".dds\");\r\n                        errorElemm.style.display = \"none\";\r\n                    }\r\n                    else {\r\n                        this._scene.environmentTexture = new CubeTexture(url, this._scene,\r\n                            undefined, undefined, undefined,\r\n                            () => {\r\n                                errorElemm.style.display = \"none\";\r\n                            },\r\n                            (message) => {\r\n                                if (message) {\r\n                                    errorElemm.style.display = \"block\";\r\n                                    errorElemm.textContent = message;\r\n                                }\r\n                            },\r\n                            undefined, undefined,\r\n                            \".env\");\r\n                    }\r\n                }, undefined, true);\r\n            };\r\n            elemValue.appendChild(inputElement);\r\n\r\n            if (!this._scene.getEngine().premultipliedAlpha) {\r\n                elemValue = Helpers.CreateDiv(null, this._panel);\r\n\r\n                inputElement = Inspector.DOCUMENT.createElement('input');\r\n                inputElement.value = \"Compress current texture to .env\";\r\n                inputElement.className = \"tool-input\";\r\n                inputElement.type = \"button\";\r\n                inputElement.onclick = () => {\r\n                    if (!this._scene.environmentTexture) {\r\n                        errorElemm.style.display = \"block\";\r\n                        errorElemm.textContent = \"You must load an environment texture first.\";\r\n                        return;\r\n                    }\r\n                    if (this._scene.activeCamera) {\r\n                        EnvironmentTextureTools.CreateEnvTextureAsync(<CubeTexture>this._scene.environmentTexture)\r\n                            .then((buffer: ArrayBuffer) => {\r\n                                var blob = new Blob([buffer], { type: \"octet/stream\" });\r\n                                Tools.Download(blob, \"environment.env\");\r\n                                errorElemm.style.display = \"none\";\r\n                            })\r\n                            .catch((error: any) => {\r\n                                errorElemm.style.display = \"block\";\r\n                                errorElemm.textContent = error;\r\n                            });\r\n                    }\r\n                    else {\r\n                        errorElemm.style.display = \"block\";\r\n                        errorElemm.textContent = \"An active camera is required.\";\r\n                    }\r\n                };\r\n                elemValue.appendChild(inputElement);\r\n            }\r\n\r\n            this._panel.appendChild(errorElemm);\r\n        }\r\n\r\n        title = Helpers.CreateDiv('tool-title2', this._panel);\r\n        title.textContent = \"Capture\";\r\n        {\r\n            let elemValue = Helpers.CreateDiv(null, this._panel);\r\n\r\n            let inputElement = Inspector.DOCUMENT.createElement('input');\r\n            inputElement.value = \"Take Screenshot\";\r\n            inputElement.type = \"button\";\r\n            inputElement.className = \"tool-input\";\r\n            inputElement.onclick = () => {\r\n                if (this._scene.activeCamera) {\r\n                    Tools.CreateScreenshot(this._scene.getEngine(), this._scene.activeCamera, { precision: 0.5 });\r\n                }\r\n            };\r\n            elemValue.appendChild(inputElement);\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        // Nothing to dispose\r\n    }\r\n}\r\n","import { Adapter } from \"./Adapter\";\r\nimport { BaseTexture } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\n\r\nexport class TextureAdapter\r\n    extends Adapter {\r\n\r\n    constructor(obj: BaseTexture) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        // Not used in this tab\r\n        return [];\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = new Array<AbstractTreeTool>();\r\n        // tools.push(new CameraPOV(this));\r\n        return tools;\r\n    }\r\n\r\n}\r\n","import { CubeTexture, RenderTargetTexture, Tools } from \"babylonjs\";\r\nimport { TextureAdapter } from \"../adapters/TextureAdapter\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\n\r\nexport class TextureTab extends Tab {\r\n\r\n    private _inspector: Inspector;\r\n    /** The panel containing a list of items */\r\n    protected _treePanel: HTMLElement;\r\n    protected _treeItems: Array<TreeItem> = [];\r\n\r\n    /* Panel containing the texture image */\r\n    private _imagePanel: HTMLElement;\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Textures');\r\n        this._inspector = inspector;\r\n\r\n        // Build the properties panel : a div that will contains the tree and the detail panel\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n\r\n        // Build the treepanel\r\n        this._treePanel = Helpers.CreateDiv('insp-tree', this._panel);\r\n\r\n        this._imagePanel = Helpers.CreateDiv('insp-details', this._panel) as HTMLDivElement;\r\n\r\n        Split([this._treePanel, this._imagePanel], {\r\n            blockDrag: this._inspector.popupMode,\r\n            direction: 'vertical'\r\n        });\r\n\r\n        this.update();\r\n    }\r\n\r\n    public dispose() {\r\n        // Nothing to dispose\r\n    }\r\n\r\n    public update(_items?: Array<TreeItem>) {\r\n        let items;\r\n        if (_items) {\r\n            items = _items;\r\n        } else {\r\n            // Rebuild the tree\r\n            this._treeItems = this._getTree();\r\n            items = this._treeItems;\r\n        }\r\n        // Clean the tree\r\n        Helpers.CleanDiv(this._treePanel);\r\n        Helpers.CleanDiv(this._imagePanel);\r\n\r\n        // Sort items alphabetically\r\n        items.sort((item1, item2) => {\r\n            return item1.compareTo(item2);\r\n        });\r\n\r\n        // Display items\r\n        for (let item of items) {\r\n            this._treePanel.appendChild(item.toHtml());\r\n        }\r\n    }\r\n\r\n    /* Overrides super */\r\n    private _getTree(): Array<TreeItem> {\r\n        let arr = [];\r\n\r\n        // get all cameras from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let tex of instances.textures) {\r\n            arr.push(new TreeItem(this, new TextureAdapter(tex)));\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /** Display the details of the given item */\r\n    public displayDetails(item: TreeItem) {\r\n        // Remove active state on all items\r\n        this.activateNode(item);\r\n        Helpers.CleanDiv(this._imagePanel);\r\n        // Get the texture object\r\n        let texture = item.adapter.object;\r\n        let imgs: HTMLImageElement[] = [];\r\n        let img = Helpers.CreateElement('img', 'texture-image', this._imagePanel) as HTMLImageElement;\r\n        imgs.push(img);\r\n        //Create five other images elements\r\n        for (let i = 0; i < 5; i++) {\r\n            imgs.push(Helpers.CreateElement('img', 'texture-image', this._imagePanel) as HTMLImageElement);\r\n        }\r\n\r\n        if (texture instanceof RenderTargetTexture) {\r\n            // RenderTarget textures\r\n            let scene = this._inspector.scene;\r\n            let engine = scene.getEngine();\r\n            let size = texture.getSize();\r\n\r\n            // Clone the texture\r\n            let screenShotTexture = texture.clone();\r\n            screenShotTexture.activeCamera = texture.activeCamera;\r\n            screenShotTexture.onBeforeRender = texture.onBeforeRender;\r\n            screenShotTexture.onAfterRender = texture.onAfterRender;\r\n            screenShotTexture.onBeforeRenderObservable = texture.onBeforeRenderObservable;\r\n\r\n            // To display the texture after rendering\r\n            screenShotTexture.onAfterRenderObservable.add((faceIndex: number) => {\r\n                Tools.DumpFramebuffer(size.width, size.height, engine,\r\n                    (data) => imgs[faceIndex].src = data);\r\n            });\r\n\r\n            // Render the texture\r\n            scene.incrementRenderId();\r\n            scene.resetCachedMaterial();\r\n            screenShotTexture.render();\r\n            screenShotTexture.dispose();\r\n        } else if (texture instanceof CubeTexture) {\r\n            // Cannot open correctly DDS File\r\n            // Display all textures of the CubeTexture\r\n            let pixels = <ArrayBufferView>texture.readPixels();\r\n            let canvas = document.createElement('canvas');\r\n            canvas.id = \"MyCanvas\";\r\n\r\n            if (img.parentElement) {\r\n                img.parentElement.appendChild(canvas);\r\n            }\r\n            let ctx = <CanvasRenderingContext2D>canvas.getContext('2d');\r\n            let size = texture.getSize();\r\n\r\n            let tmp = pixels.buffer.slice(0, size.height * size.width * 4);\r\n            let u = new Uint8ClampedArray(tmp)\r\n\r\n            let colors = new ImageData(size.width * 6, size.height);\r\n\r\n            colors.data.set(u);\r\n            let imgData = ctx.createImageData(size.width * 6, size.height);\r\n\r\n            imgData.data.set(u);\r\n\r\n            // let data = imgData.data;\r\n\r\n            // for(let i = 0, len = size.height * size.width; i < len; i++) {\r\n            //     data[i] = pixels[i];\r\n            // }\r\n            ctx.putImageData(imgData, 0, 0);\r\n            // let i: number = 0;\r\n            // for(let filename of (texture as CubeTexture)['_files']){\r\n            //     imgs[i].src = filename;\r\n            //     i++;\r\n            // }\r\n        }\r\n        else if (texture['_canvas']) {\r\n            // Dynamic texture\r\n            let base64Image = texture['_canvas'].toDataURL(\"image/png\");\r\n            img.src = base64Image;\r\n        } else if (texture.url) {\r\n            let pixels = texture.readPixels();\r\n            let canvas = document.createElement('canvas');\r\n            canvas.id = \"MyCanvas\";\r\n\r\n            if (img.parentElement) {\r\n                img.parentElement.appendChild(canvas);\r\n            }\r\n            let ctx = <CanvasRenderingContext2D>canvas.getContext('2d');\r\n            let size = texture.getSize();\r\n\r\n            let imgData = ctx.createImageData(size.width, size.height);\r\n\r\n            imgData.data.set(pixels);\r\n\r\n            ctx.putImageData(imgData, 0, 0);\r\n            // If an url is present, the texture is an image\r\n            // img.src = texture.url;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /** Select an item in the tree */\r\n    public select(item: TreeItem) {\r\n        // Active the node\r\n        this.activateNode(item);\r\n        // Display its details\r\n        this.displayDetails(item);\r\n    }\r\n\r\n    /** Set the given item as active in the tree */\r\n    public activateNode(item: TreeItem) {\r\n        if (this._treeItems) {\r\n            for (let node of this._treeItems) {\r\n                node.active(false);\r\n            }\r\n        }\r\n        item.active(true);\r\n    }\r\n}\r\n","import { Engine, EngineInstrumentation, Nullable, Scene, SceneInstrumentation, Tools } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class StatsTab extends Tab {\r\n\r\n    private _inspector: Inspector;\r\n\r\n    /** \r\n     * Properties in this array will be updated\r\n     * in a render loop - Mostly stats properties\r\n     */\r\n    private _updatableProperties: Array<{ elem: HTMLElement, updateFct: () => string }> = [];\r\n\r\n    private _scene: Scene;\r\n    private _engine: Engine;\r\n    private _glInfo: any;\r\n\r\n    private _updateLoopHandler: any;\r\n    private _refreshRateCounter: any;\r\n    private refreshRate: any;\r\n\r\n    private _sceneInstrumentation: Nullable<SceneInstrumentation>;\r\n    private _engineInstrumentation: Nullable<EngineInstrumentation>;\r\n\r\n    private _inputElement: HTMLInputElement;\r\n\r\n    private _connectToInstrumentation() {\r\n        if (this._sceneInstrumentation) {\r\n            return;\r\n        }\r\n\r\n        this._sceneInstrumentation = new SceneInstrumentation(this._scene);\r\n        this._sceneInstrumentation.captureActiveMeshesEvaluationTime = true;\r\n        this._sceneInstrumentation.captureRenderTargetsRenderTime = true;\r\n        this._sceneInstrumentation.captureFrameTime = true;\r\n        this._sceneInstrumentation.captureRenderTime = true;\r\n        this._sceneInstrumentation.captureInterFrameTime = true;\r\n        this._sceneInstrumentation.captureParticlesRenderTime = true;\r\n        this._sceneInstrumentation.captureSpritesRenderTime = true;\r\n        this._sceneInstrumentation.capturePhysicsTime = true;\r\n        this._sceneInstrumentation.captureAnimationsTime = true;\r\n\r\n        this._engineInstrumentation = new EngineInstrumentation(this._engine);\r\n        this._engineInstrumentation.captureGPUFrameTime = true;\r\n    }\r\n\r\n    constructor(tabbar: TabBar, insp: Inspector) {\r\n        super(tabbar, 'Stats');\r\n\r\n        this._inspector = insp;\r\n\r\n        this._scene = this._inspector.scene;\r\n        this._engine = this._scene.getEngine();\r\n        this._glInfo = this._engine.getGlInfo();\r\n\r\n        this._connectToInstrumentation();\r\n\r\n        // Build the stats panel: a div that will contains all stats\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n        this._panel.classList.add(\"stats-panel\")\r\n\r\n        let title = Helpers.CreateDiv('stat-title1', this._panel);\r\n        let fpsSpan = Helpers.CreateElement('span', 'stats-fps');\r\n        this._updatableProperties.push({\r\n            elem: fpsSpan,\r\n            updateFct: () => { return Tools.Format(this._inspector.scene.getEngine().getFps(), 0) + \" fps\" }\r\n        });\r\n\r\n        let versionSpan = Helpers.CreateElement('span');\r\n        versionSpan.textContent = `js v${Engine.Version} - `;\r\n        title.appendChild(versionSpan);\r\n        title.appendChild(fpsSpan);\r\n\r\n        this._updateLoopHandler = this._update.bind(this);\r\n        this._refreshRateCounter = 0;\r\n        this.refreshRate = 4;\r\n\r\n        // Count block\r\n        title = Helpers.CreateDiv('stat-title2', this._panel);\r\n        title.textContent = \"Count\";\r\n        {\r\n            this._createStatLabel(\"Total meshes\", this._panel);\r\n            let elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.meshes.length.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Draw calls\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._sceneInstrumentation!.drawCallsCounter.current.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Texture collisions\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._sceneInstrumentation!.textureCollisionsCounter.current.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Total lights\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.lights.length.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Total vertices\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.getTotalVertices().toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Total materials\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.materials.length.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Total textures\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.textures.length.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Active meshes\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.getActiveMeshes().length.toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Active indices\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.getActiveIndices().toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Active bones\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.getActiveBones().toString() }\r\n            });\r\n\r\n            this._createStatLabel(\"Active particles\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._scene.getActiveParticles().toString() }\r\n            });\r\n        }\r\n\r\n        title = Helpers.CreateDiv('stat-title2', this._panel);\r\n        title.textContent = \"Duration\";\r\n        {\r\n            this._createStatLabel(\"Properties refresh rate (per second)\", this._panel);\r\n            let elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._inputElement = Inspector.DOCUMENT.createElement('input');\r\n            this._inputElement.value = this.refreshRate;\r\n            elemValue.appendChild(this._inputElement);\r\n            this._inputElement.addEventListener('keyup', (evt: KeyboardEvent) => {\r\n                this.refreshRate = this._inputElement.value;\r\n            })\r\n            this._createStatLabel(\"Meshes selection\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.activeMeshesEvaluationTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Render targets\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.renderTargetsRenderTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Particles\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.particlesRenderTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Sprites\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.spritesRenderTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Animations\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.animationsTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Physics\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.physicsTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Render\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.renderTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Frame\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.frameTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"Inter-frame\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._sceneInstrumentation!.interFrameTimeCounter.current) }\r\n            });\r\n            this._createStatLabel(\"GPU Frame time\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._engineInstrumentation!.gpuFrameTimeCounter.current * 0.000001) }\r\n            });\r\n            this._createStatLabel(\"GPU Frame time (average)\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(this._engineInstrumentation!.gpuFrameTimeCounter.average * 0.000001) }\r\n            });\r\n            this._createStatLabel(\"Potential FPS\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return Tools.Format(1000.0 / this._sceneInstrumentation!.frameTimeCounter.current, 0) }\r\n            });\r\n            this._createStatLabel(\"Resolution\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._engine.getRenderWidth() + \"x\" + this._engine.getRenderHeight() }\r\n            });\r\n        }\r\n\r\n        title = Helpers.CreateDiv('stat-title2', this._panel);\r\n        title.textContent = \"Extensions\";\r\n        {\r\n            this._createStatLabel(\"Std derivatives\", this._panel);\r\n            let elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().standardDerivatives ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Compressed textures\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().s3tc ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Hardware instances\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().instancedArrays ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Texture float\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().textureFloat ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"32bits indices\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().uintIndices ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Fragment depth\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().fragmentDepthSupported ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"High precision shaders\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().highPrecisionShaderSupported ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Draw buffers\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().drawBuffersExtension ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Vertex array object\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().vertexArrayObject ? \"Yes\" : \"No\") }\r\n            });\r\n            this._createStatLabel(\"Timer query\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.getCaps().timerQuery ? \"Yes\" : \"No\") }\r\n            });\r\n        }\r\n\r\n        title = Helpers.CreateDiv('stat-title2', this._panel);\r\n        title.textContent = \"Caps.\";\r\n        {\r\n            this._createStatLabel(\"Stencil\", this._panel);\r\n            let elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return (this._engine.isStencilEnable ? \"Enabled\" : \"Disabled\") }\r\n            });\r\n            this._createStatLabel(\"Max textures units\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._engine.getCaps().maxTexturesImageUnits.toString() }\r\n            });\r\n            this._createStatLabel(\"Max textures size\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._engine.getCaps().maxTextureSize.toString() }\r\n            });\r\n            this._createStatLabel(\"Max anisotropy\", this._panel);\r\n            elemValue = Helpers.CreateDiv('stat-value', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return this._engine.getCaps().maxAnisotropy.toString() }\r\n            });\r\n        }\r\n        title = Helpers.CreateDiv('stat-title2', this._panel);\r\n        title.textContent = \"Info\";\r\n        {\r\n            let elemValue = Helpers.CreateDiv('stat-infos', this._panel);\r\n            this._updatableProperties.push({\r\n                elem: elemValue,\r\n                updateFct: () => { return \"WebGL v\" + this._engine.webGLVersion + \" - \" + this._glInfo.version + \" - \" + this._glInfo.renderer }\r\n            });\r\n        }\r\n    }\r\n\r\n    private _createStatLabel(content: string, parent: HTMLElement): HTMLElement {\r\n        let elem = Helpers.CreateDiv('stat-label', parent);\r\n        elem.textContent = content;\r\n        return elem;\r\n    }\r\n\r\n    /** Update each properties of the stats panel */\r\n    private _update() {\r\n\r\n        if (this._refreshRateCounter > 1) {\r\n            this._refreshRateCounter--;\r\n        } else {\r\n            for (let prop of this._updatableProperties) {\r\n                prop.elem.textContent = prop.updateFct();\r\n            }\r\n            if (this._inspector.scene.getEngine().getFps() / this.refreshRate == Infinity) {\r\n                this._refreshRateCounter = 1;\r\n            } else {\r\n                this._refreshRateCounter = this._inspector.scene.getEngine().getFps() / this.refreshRate;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public dispose() {\r\n        this._scene.unregisterAfterRender(this._updateLoopHandler);\r\n        this._sceneInstrumentation!.dispose();\r\n        this._sceneInstrumentation = null;\r\n        this._engineInstrumentation!.dispose();\r\n        this._engineInstrumentation = null;\r\n    }\r\n\r\n    public active(b: boolean) {\r\n        super.active(b);\r\n        if (b) {\r\n            this._connectToInstrumentation();\r\n            this._scene.registerAfterRender(this._updateLoopHandler);\r\n        }\r\n    }\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\n\r\n\r\nexport interface ISoundInteractions {\r\n    setPlaying: (callback: Function) => void;\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport class SoundInteractions extends AbstractTreeTool {\r\n    private playSound: ISoundInteractions;\r\n\r\n    constructor(playSound: ISoundInteractions) {\r\n        super();\r\n        this.playSound = playSound;\r\n        this._elem.classList.add('fa-play');\r\n    }\r\n\r\n    protected action() {\r\n        super.action();\r\n        this._playSound();\r\n    }\r\n\r\n    private _playSound() {\r\n\r\n        if (this._elem.classList.contains('fa-play')) {\r\n            this._elem.classList.remove('fa-play');\r\n            this._elem.classList.add('fa-pause');\r\n        }\r\n        else {\r\n            this._elem.classList.remove('fa-pause');\r\n            this._elem.classList.add('fa-play');\r\n        }\r\n        this.playSound.setPlaying(() => {\r\n            this._elem.classList.remove('fa-pause');\r\n            this._elem.classList.add('fa-play');\r\n        });\r\n    }\r\n}\r\n","import { Sound } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { ISoundInteractions, SoundInteractions } from \"../treetools/SoundInteractions\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\n\r\nexport class SoundAdapter\r\n    extends Adapter\r\n    implements ISoundInteractions {\r\n\r\n    constructor(obj: Sound) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new SoundInteractions(this));\r\n        return tools;\r\n    }\r\n\r\n    public setPlaying(callback: Function) {\r\n        if ((this._obj as Sound).isPlaying) {\r\n            (this._obj as Sound).pause();\r\n        }\r\n        else {\r\n            (this._obj as Sound).play();\r\n        }\r\n        (this._obj as Sound).onended = () => {\r\n            callback();\r\n        }\r\n    }\r\n}\r\n","import { SoundAdapter } from \"../adapters/SoundAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class SoundTab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Audio', inspector);\r\n    }\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = new Array<TreeItem>();\r\n\r\n        // get all cameras from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let sounds of instances.soundTracks) {\r\n            let sound = sounds.soundCollection;\r\n            sound.forEach(element => {\r\n                arr.push(new TreeItem(this, new SoundAdapter(element)));\r\n            });\r\n\r\n        }\r\n        return arr;\r\n    }\r\n\r\n}\r\n","import { Debug, StandardMaterial } from \"babylonjs\";\r\nimport { DetailPanel } from \"../details/DetailPanel\";\r\nimport { Property } from \"../details/Property\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class SceneTab extends Tab {\r\n\r\n    private _inspector: Inspector;\r\n    /** The list of  channels/options that can be activated/deactivated */\r\n    private _actions: HTMLDivElement;\r\n\r\n    /** The list of skeleton viewer */\r\n    private _skeletonViewers: Array<any> = [];\r\n\r\n    /** The detail of the scene */\r\n    private _detailsPanel: DetailPanel;\r\n\r\n    constructor(tabbar: TabBar, insp: Inspector) {\r\n        super(tabbar, 'Scene');\r\n        this._inspector = insp;\r\n\r\n        // Build the properties panel : a div that will contains the tree and the detail panel\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n\r\n        this._actions = Helpers.CreateDiv('scene-actions', this._panel) as HTMLDivElement;\r\n\r\n        this._detailsPanel = new DetailPanel();\r\n        this._panel.appendChild(this._detailsPanel.toHtml());\r\n\r\n        // build propertiesline\r\n        let details = [];\r\n        // Remove deprecated properties generating warning in console\r\n        let dontTakeThis = ['interFramePerfCounter', 'lastFramePerfCounter', 'evaluateActiveMeshesDurationPerfCounter', 'renderDurationPerfCounter', 'particlesDurationPerfCounter', 'spriteDuractionPerfCounter'];\r\n        let props = Helpers.GetAllLinesPropertiesAsString(this._inspector.scene, dontTakeThis);\r\n\r\n        for (let propString of props) {\r\n            let prop = new PropertyLine(new Property(propString, this._inspector.scene));\r\n            details.push(prop);\r\n        }\r\n        this._detailsPanel.details = details;\r\n\r\n        Split([this._actions, this._detailsPanel.toHtml()], {\r\n            blockDrag: this._inspector.popupMode,\r\n            sizes: [50, 50],\r\n            direction: 'vertical'\r\n        });\r\n\r\n        // Build actions\r\n        {\r\n\r\n            // Rendering mode\r\n            let title = Helpers.CreateDiv('actions-title', this._actions);\r\n            title.textContent = 'Rendering mode';\r\n            let point = Helpers.CreateDiv('action-radio', this._actions);\r\n            let wireframe = Helpers.CreateDiv('action-radio', this._actions);\r\n            let solid = Helpers.CreateDiv('action-radio', this._actions);\r\n            point.textContent = 'Point';\r\n            wireframe.textContent = 'Wireframe';\r\n            solid.textContent = 'Solid';\r\n            if (this._inspector.scene.forcePointsCloud) {\r\n                point.classList.add('active');\r\n            } else if (this._inspector.scene.forceWireframe) {\r\n                wireframe.classList.add('active');\r\n            } else {\r\n                solid.classList.add('active');\r\n            }\r\n            this._generateRadioAction([point, wireframe, solid]);\r\n            point.addEventListener('click', () => { this._inspector.scene.forcePointsCloud = true; this._inspector.scene.forceWireframe = false; });\r\n            wireframe.addEventListener('click', () => { this._inspector.scene.forcePointsCloud = false; this._inspector.scene.forceWireframe = true; });\r\n            solid.addEventListener('click', () => { this._inspector.scene.forcePointsCloud = false; this._inspector.scene.forceWireframe = false; });\r\n\r\n            // Textures\r\n            title = Helpers.CreateDiv('actions-title', this._actions);\r\n            title.textContent = 'Textures channels';\r\n            this._generateActionLine('Diffuse Texture', StandardMaterial.DiffuseTextureEnabled, (b: boolean) => { StandardMaterial.DiffuseTextureEnabled = b });\r\n            this._generateActionLine('Ambient Texture', StandardMaterial.AmbientTextureEnabled, (b: boolean) => { StandardMaterial.AmbientTextureEnabled = b });\r\n            this._generateActionLine('Specular Texture', StandardMaterial.SpecularTextureEnabled, (b: boolean) => { StandardMaterial.SpecularTextureEnabled = b });\r\n            this._generateActionLine('Emissive Texture', StandardMaterial.EmissiveTextureEnabled, (b: boolean) => { StandardMaterial.EmissiveTextureEnabled = b });\r\n            this._generateActionLine('Bump Texture', StandardMaterial.BumpTextureEnabled, (b: boolean) => { StandardMaterial.BumpTextureEnabled = b });\r\n            this._generateActionLine('Opacity Texture', StandardMaterial.OpacityTextureEnabled, (b: boolean) => { StandardMaterial.OpacityTextureEnabled = b });\r\n            this._generateActionLine('Reflection Texture', StandardMaterial.ReflectionTextureEnabled, (b: boolean) => { StandardMaterial.ReflectionTextureEnabled = b });\r\n            this._generateActionLine('Refraction Texture', StandardMaterial.RefractionTextureEnabled, (b: boolean) => { StandardMaterial.RefractionTextureEnabled = b });\r\n            this._generateActionLine('ColorGrading', StandardMaterial.ColorGradingTextureEnabled, (b: boolean) => { StandardMaterial.ColorGradingTextureEnabled = b });\r\n            this._generateActionLine('Lightmap Texture', StandardMaterial.LightmapTextureEnabled, (b: boolean) => { StandardMaterial.LightmapTextureEnabled = b });\r\n            this._generateActionLine('Fresnel', StandardMaterial.FresnelEnabled, (b: boolean) => { StandardMaterial.FresnelEnabled = b });\r\n\r\n            // Options\r\n            title = Helpers.CreateDiv('actions-title', this._actions);\r\n            title.textContent = 'Options';\r\n            this._generateActionLine('Animations', this._inspector.scene.animationsEnabled, (b: boolean) => { this._inspector.scene.animationsEnabled = b });\r\n            this._generateActionLine('Collisions', this._inspector.scene.collisionsEnabled, (b: boolean) => { this._inspector.scene.collisionsEnabled = b });\r\n            this._generateActionLine('Fog', this._inspector.scene.fogEnabled, (b: boolean) => { this._inspector.scene.fogEnabled = b });\r\n            this._generateActionLine('Lens flares', this._inspector.scene.lensFlaresEnabled, (b: boolean) => { this._inspector.scene.lensFlaresEnabled = b });\r\n            this._generateActionLine('Lights', this._inspector.scene.lightsEnabled, (b: boolean) => { this._inspector.scene.lightsEnabled = b });\r\n            this._generateActionLine('Particles', this._inspector.scene.particlesEnabled, (b: boolean) => { this._inspector.scene.particlesEnabled = b });\r\n            this._generateActionLine('Post-processes', this._inspector.scene.postProcessesEnabled, (b: boolean) => { this._inspector.scene.postProcessesEnabled = b });\r\n            this._generateActionLine('Probes', this._inspector.scene.probesEnabled, (b: boolean) => { this._inspector.scene.probesEnabled = b });\r\n            this._generateActionLine('Procedural textures', this._inspector.scene.proceduralTexturesEnabled, (b: boolean) => { this._inspector.scene.proceduralTexturesEnabled = b });\r\n            this._generateActionLine('Render targets', this._inspector.scene.renderTargetsEnabled, (b: boolean) => { this._inspector.scene.renderTargetsEnabled = b });\r\n            this._generateActionLine('Shadows', this._inspector.scene.shadowsEnabled, (b: boolean) => { this._inspector.scene.shadowsEnabled = b });\r\n            this._generateActionLine('Skeletons', this._inspector.scene.skeletonsEnabled, (b: boolean) => { this._inspector.scene.skeletonsEnabled = b });\r\n            this._generateActionLine('Sprites', this._inspector.scene.spritesEnabled, (b: boolean) => { this._inspector.scene.spritesEnabled = b });\r\n            this._generateActionLine('Textures', this._inspector.scene.texturesEnabled, (b: boolean) => { this._inspector.scene.texturesEnabled = b });\r\n\r\n            // Audio\r\n            title = Helpers.CreateDiv('actions-title', this._actions);\r\n            title.textContent = 'Audio';\r\n            let headphones = Helpers.CreateDiv('action-radio', this._actions);\r\n            let normalSpeaker = Helpers.CreateDiv('action-radio', this._actions);\r\n            this._generateActionLine('Disable audio', !this._inspector.scene.audioEnabled, (b: boolean) => { this._inspector.scene.audioEnabled = !b });\r\n            headphones.textContent = 'Headphones';\r\n            normalSpeaker.textContent = 'Normal speakers';\r\n            this._generateRadioAction([headphones, normalSpeaker]);\r\n            if (this._inspector.scene.headphone) {\r\n                headphones.classList.add('active');\r\n            } else {\r\n                normalSpeaker.classList.add('active');\r\n            }\r\n            headphones.addEventListener('click', () => { this._inspector.scene.headphone = true; });\r\n            normalSpeaker.addEventListener('click', () => { this._inspector.scene.headphone = false; });\r\n\r\n            // Viewers\r\n            title = Helpers.CreateDiv('actions-title', this._actions);\r\n            title.textContent = 'Viewer';\r\n            this._generateActionLine('Skeletons', false, (b: boolean) => {\r\n                if (b) {\r\n                    for (var index = 0; index < this._inspector.scene.meshes.length; index++) {\r\n                        var mesh = this._inspector.scene.meshes[index];\r\n                        if (mesh.skeleton) {\r\n                            var found = false;\r\n                            for (var sIndex = 0; sIndex < this._skeletonViewers.length; sIndex++) {\r\n                                if (this._skeletonViewers[sIndex].skeleton === mesh.skeleton) {\r\n                                    found = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (found) {\r\n                                continue;\r\n                            }\r\n                            var viewer = new Debug.SkeletonViewer(mesh.skeleton, mesh, this._inspector.scene);\r\n                            viewer.isEnabled = true;\r\n                            this._skeletonViewers.push(viewer);\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (var index = 0; index < this._skeletonViewers.length; index++) {\r\n                        this._skeletonViewers[index].dispose();\r\n                    }\r\n                    this._skeletonViewers = [];\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /** Overrides super.dispose */\r\n    public dispose() {\r\n        this._detailsPanel.dispose();\r\n    }\r\n\r\n    /** generates a div which correspond to an option that can be activated/deactivated */\r\n    private _generateActionLine(name: string, initValue: boolean, action: (b: boolean) => void) {\r\n        let div = Helpers.CreateDiv('scene-actions', this._actions);\r\n        div.textContent = name;\r\n        div.classList.add('action');\r\n        if (initValue) {\r\n            div.classList.add('active');\r\n        }\r\n        div.addEventListener('click', (e) => {\r\n            div.classList.toggle('active');\r\n            let isActivated = div.classList.contains('active');\r\n            action(isActivated);\r\n        })\r\n    }\r\n\r\n    /** \r\n     * Add a click action for all given elements : \r\n     * the clicked element is set as active, all others elements are deactivated\r\n     */\r\n    private _generateRadioAction(arr: Array<HTMLElement>) {\r\n        let active = (elem: HTMLElement, evt: any) => {\r\n            for (let e of arr) {\r\n                e.classList.remove('active');\r\n            }\r\n            elem.classList.add('active');\r\n        }\r\n        for (let elem of arr) {\r\n            elem.addEventListener('click', active.bind(this, elem));\r\n        }\r\n    }\r\n}\r\n","import { AbstractMesh, PhysicsImpostor } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { Checkbox, IToolVisible } from \"../treetools/Checkbox\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\n\r\nexport class PhysicsImpostorAdapter\r\n    extends Adapter\r\n    implements IToolVisible {\r\n\r\n    private _viewer: any;\r\n    private _isVisible = false;\r\n\r\n    constructor(obj: PhysicsImpostor, viewer: any) {\r\n        super(obj);\r\n        this._viewer = viewer;\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        let physicsImposter = (<PhysicsImpostor>this._obj);\r\n        if (physicsImposter && physicsImposter.object) {\r\n            str = (<AbstractMesh>physicsImposter.object).name || \"\";\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new Checkbox(this));\r\n        return tools;\r\n    }\r\n\r\n    public setVisible(b: boolean) {\r\n        this._isVisible = b;\r\n        if (b) {\r\n            this._viewer.showImpostor(this._obj);\r\n        } else {\r\n            this._viewer.hideImpostor(this._obj);\r\n        }\r\n    }\r\n\r\n    public isVisible(): boolean {\r\n        return this._isVisible;\r\n    }\r\n\r\n}\r\n","import { Debug } from \"babylonjs\";\r\nimport { PhysicsImpostorAdapter } from \"../adapters/PhysicsImpostorAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class PhysicsTab extends PropertyTab {\r\n\r\n    public viewer: any;\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Physics', inspector);\r\n    }\r\n\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = new Array<TreeItem>();\r\n\r\n        let scene = this._inspector.scene;\r\n\r\n        if (!scene.isPhysicsEnabled()) {\r\n            return arr;\r\n        }\r\n\r\n        if (!this.viewer) {\r\n            this.viewer = new Debug.PhysicsViewer(scene);\r\n        }\r\n\r\n        for (let mesh of scene.meshes) {\r\n            if (mesh.physicsImpostor) {\r\n                arr.push(new TreeItem(this, new PhysicsImpostorAdapter(mesh.physicsImpostor, this.viewer)));\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n}","import { Node, TransformNode } from \"babylonjs\";\r\nimport { MeshAdapter } from \"../adapters/MeshAdapter\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\n\r\nexport class MeshTab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Mesh', inspector);\r\n    }\r\n\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = new Array<TreeItem>();\r\n        // Tab containing mesh already in results\r\n        let alreadyIn = new Array<Node>();\r\n\r\n        // Recursive method building the tree panel\r\n        let createNode = (obj: Node) => {\r\n            let descendants = obj.getDescendants(true);\r\n\r\n            let node = new TreeItem(this, new MeshAdapter(obj));\r\n\r\n            if (descendants.length > 0) {\r\n                for (let child of descendants) {\r\n                    if (child instanceof TransformNode) {\r\n                        if (!Helpers.IsSystemName(child.name)) {\r\n                            let n = createNode(child);\r\n                            node.add(n);\r\n                        }\r\n                    }\r\n                }\r\n                node.update();\r\n            }\r\n\r\n            // Retrieve the root node if the mesh is actually child of another mesh\r\n            // This can hapen if the child mesh has been created before the parent mesh\r\n            if (obj.parent != null && alreadyIn.indexOf(obj) != -1) {\r\n                let i: number = 0;\r\n                let notFound: boolean = true;\r\n                // Find and delete the root node standing for this mesh\r\n                while (i < arr.length && notFound) {\r\n                    if (obj.name === arr[i].id) {\r\n                        arr.splice(i, 1);\r\n                        notFound = false;\r\n                    }\r\n                    i++;\r\n                }\r\n            }\r\n\r\n            alreadyIn.push(obj);\r\n            return node;\r\n        };\r\n\r\n        // get all meshes from the first scene\r\n        let instances = this._inspector.scene;\r\n\r\n        // Find top of hierarchy for meshes...\r\n        let meshWithoutAnyParent: Array<Node> = [];\r\n        for (let mesh of instances.meshes) {\r\n            // Not already in the array, not system name and no parent\r\n            if (meshWithoutAnyParent.indexOf(mesh) == -1 && !Helpers.IsSystemName(mesh.name) && !mesh.parent) {\r\n                meshWithoutAnyParent.push(mesh);\r\n            }\r\n        }\r\n        // ... and for transforms\r\n        for (let tn of instances.transformNodes) {\r\n            // Not already in the array, not system name and no parent\r\n            if (meshWithoutAnyParent.indexOf(tn) == -1 && !Helpers.IsSystemName(tn.name) && !tn.parent) {\r\n                meshWithoutAnyParent.push(tn);\r\n            }\r\n        }\r\n\r\n        for (let mesh of meshWithoutAnyParent) {\r\n            if (alreadyIn.indexOf(mesh) == -1 && !Helpers.IsSystemName(mesh.name)) {\r\n                let node = createNode(mesh);\r\n                arr.push(node);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n}\r\n","import { Material } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\nexport class MaterialAdapter\r\n    extends Adapter {\r\n\r\n    constructor(obj: Material) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    /** No tools for a material adapter */\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        return [];\r\n    }\r\n}","import { MaterialAdapter } from \"../adapters/MaterialAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class MaterialTab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Material', inspector);\r\n    }\r\n\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = [];\r\n\r\n        // get all meshes from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let mat of instances.materials) {\r\n            arr.push(new TreeItem(this, new MaterialAdapter(mat)))\r\n        }\r\n        return arr;\r\n    }\r\n}\r\n","import { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { Checkbox, IToolVisible } from \"../treetools/Checkbox\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\nexport class LightAdapter\r\n    extends Adapter\r\n    implements IToolVisible {\r\n\r\n    constructor(obj: BABYLON.Light) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new Checkbox(this));\r\n        return tools;\r\n    }\r\n\r\n    public setVisible(b: boolean) {\r\n        this._obj.setEnabled(b);\r\n    }\r\n    public isVisible(): boolean {\r\n        return this._obj.isEnabled();\r\n    }\r\n\r\n    /** Returns some information about this mesh */\r\n    // public getInfo() : string {\r\n    //     return `${(this._obj as BABYLON.AbstractMesh).getTotalVertices()} vertices`;\r\n    // }\r\n}","import { LightAdapter } from \"../adapters/LightAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\n\r\nexport class LightTab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Light', inspector);\r\n    }\r\n\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = [];\r\n\r\n        // get all lights from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let light of instances.lights) {\r\n            arr.push(new TreeItem(this, new LightAdapter(light)));\r\n        }\r\n        return arr;\r\n    }\r\n}\r\n","\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { Checkbox, IToolVisible } from \"../treetools/Checkbox\";\r\nimport { Adapter } from \"./Adapter\";\r\nimport { Control } from \"babylonjs-gui\";\r\n\r\n\r\nexport class GUIAdapter\r\n    extends Adapter\r\n    implements IToolVisible {\r\n\r\n    constructor(obj: Control) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new Checkbox(this));\r\n        return tools;\r\n    }\r\n\r\n    public setVisible(b: boolean) {\r\n        (this._obj as Control).isVisible = b;\r\n    }\r\n\r\n    public isVisible(): boolean {\r\n        return (this._obj as Control).isVisible;\r\n    }\r\n}\r\n","import { AdvancedDynamicTexture, Container, Control } from \"babylonjs-gui\";\r\nimport { GUIAdapter } from \"../adapters/GUIAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\nexport class GUITab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'GUI', inspector);\r\n    }\r\n\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = [];\r\n\r\n        // Recursive method building the tree panel\r\n        let createNode = (obj: Control) => {\r\n            let descendants = (obj as Container).children;\r\n\r\n            if (descendants && descendants.length > 0) {\r\n                let node = new TreeItem(this, new GUIAdapter(obj));\r\n                for (let child of descendants) {\r\n                    let n = createNode(child);\r\n                    node.add(n);\r\n                }\r\n                node.update();\r\n                return node;\r\n            } else {\r\n                return new TreeItem(this, new GUIAdapter(obj));\r\n            }\r\n        };\r\n\r\n        // get all textures from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let tex of instances.textures) {\r\n            //only get GUI's textures\r\n            if (tex instanceof AdvancedDynamicTexture) {\r\n                let node = createNode(tex._rootContainer);\r\n                arr.push(node);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n}\r\n","import { Mesh, NullEngine, PBRMaterial, Scene, SceneLoader, StandardMaterial, Texture, TransformNode } from \"babylonjs\";\r\nimport { GLTF2, GLTFFileLoader } from \"babylonjs-loaders\";\r\nimport { GLTF2Export } from \"babylonjs-serializers\";\r\nimport { DetailPanel } from \"../details/DetailPanel\";\r\nimport { Property } from \"../details/Property\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\ninterface ILoaderDefaults {\r\n    [extensionName: string]: {\r\n        [key: string]: any\r\n    },\r\n    extensions: {\r\n        [extensionName: string]: {\r\n            [key: string]: any\r\n        }\r\n    }\r\n}\r\n\r\nexport class GLTFTab extends Tab {\r\n    private static _LoaderDefaults: ILoaderDefaults | null = null;\r\n\r\n    private _inspector: Inspector;\r\n    private _actions: HTMLDivElement;\r\n    private _detailsPanel: DetailPanel | null = null;\r\n    private _split: any;\r\n\r\n    public static get IsSupported(): boolean {\r\n        return !!(SceneLoader && GLTFFileLoader && GLTF2.GLTFLoader) || !!GLTF2Export;\r\n    }\r\n\r\n    /** @hidden */\r\n    public static _Initialize(): void {\r\n        // Must register with OnPluginActivatedObservable as early as possible to override the loader defaults.\r\n        SceneLoader.OnPluginActivatedObservable.add((loader: GLTFFileLoader) => {\r\n            if (loader.name === \"gltf\" && GLTFTab._LoaderDefaults) {\r\n                const defaults = GLTFTab._LoaderDefaults;\r\n                for (const key in defaults) {\r\n                    if (key !== \"extensions\") {\r\n                        (loader as any)[key] = GLTFTab._LoaderDefaults[key];\r\n                    }\r\n                }\r\n\r\n                loader.onExtensionLoadedObservable.add(extension => {\r\n                    const extensionDefaults = defaults.extensions[extension.name];\r\n                    for (const key in extensionDefaults) {\r\n                        (extension as any)[key] = extensionDefaults[key];\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'GLTF');\r\n\r\n        this._inspector = inspector;\r\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\r\n        this._actions = Helpers.CreateDiv('gltf-actions', this._panel) as HTMLDivElement;\r\n        this._actions.addEventListener('click', event => {\r\n            this._closeDetailsPanel();\r\n        });\r\n\r\n        if (SceneLoader && GLTFFileLoader && GLTF2.GLTFLoader) {\r\n            this._addImport();\r\n        }\r\n\r\n        if (GLTF2Export) {\r\n            this._addExport();\r\n        }\r\n    }\r\n\r\n    public dispose() {\r\n        if (this._detailsPanel) {\r\n            this._detailsPanel.dispose();\r\n        }\r\n    }\r\n\r\n    private _addImport() {\r\n        const importTitle = Helpers.CreateDiv('gltf-title', this._actions);\r\n        importTitle.textContent = 'Import';\r\n\r\n        const importActions = Helpers.CreateDiv('gltf-actions', this._actions) as HTMLDivElement;\r\n\r\n        this._getLoaderDefaultsAsync().then(defaults => {\r\n            importTitle.addEventListener('click', event => {\r\n                this._showLoaderDefaults(defaults);\r\n                event.stopPropagation();\r\n            });\r\n\r\n            importActions.addEventListener('click', event => {\r\n                this._showLoaderDefaults(defaults);\r\n                event.stopPropagation();\r\n            });\r\n\r\n            const extensionsTitle = Helpers.CreateDiv('gltf-title', importActions) as HTMLDivElement;\r\n            extensionsTitle.textContent = \"Extensions\";\r\n\r\n            for (const extensionName in defaults.extensions) {\r\n                const extensionDefaults = defaults.extensions[extensionName];\r\n\r\n                const extensionAction = Helpers.CreateDiv('gltf-action', importActions);\r\n                extensionAction.addEventListener('click', event => {\r\n                    if (this._showLoaderExtensionDefaults(extensionDefaults)) {\r\n                        event.stopPropagation();\r\n                    }\r\n                });\r\n\r\n                const checkbox = Helpers.CreateElement('span', 'gltf-checkbox', extensionAction);\r\n\r\n                if (extensionDefaults.enabled) {\r\n                    checkbox.classList.add('action', 'active');\r\n                }\r\n\r\n                checkbox.addEventListener('click', () => {\r\n                    checkbox.classList.toggle('active');\r\n                    extensionDefaults.enabled = checkbox.classList.contains('active');\r\n                });\r\n\r\n                const label = Helpers.CreateElement('span', null, extensionAction);\r\n                label.textContent = extensionName;\r\n            }\r\n        });\r\n    }\r\n\r\n    private static _EnumeratePublic(obj: any, callback: (key: string, value: any) => void): void {\r\n        for (const key in obj) {\r\n            if (key !== \"name\" && key[0] !== '_') {\r\n                const value = obj[key];\r\n                const type = typeof value;\r\n                if (type !== \"object\" && type !== \"function\" && type !== \"undefined\") {\r\n                    callback(key, value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _getLoaderDefaultsAsync(): Promise<ILoaderDefaults> {\r\n        if (GLTFTab._LoaderDefaults) {\r\n            return Promise.resolve(GLTFTab._LoaderDefaults);\r\n        }\r\n\r\n        const defaults: ILoaderDefaults = {\r\n            extensions: {}\r\n        };\r\n\r\n        const engine = new NullEngine();\r\n        const scene = new Scene(engine);\r\n\r\n        const loader = new GLTFFileLoader();\r\n        GLTFTab._EnumeratePublic(loader, (key, value) => {\r\n            defaults[key] = value;\r\n        });\r\n\r\n        loader.onExtensionLoadedObservable.add(extension => {\r\n            const extensionDefaults: any = {};\r\n            GLTFTab._EnumeratePublic(extension, (key, value) => {\r\n                extensionDefaults[key] = value;\r\n            });\r\n            defaults.extensions[extension.name] = extensionDefaults;\r\n        });\r\n\r\n        const data = '{ \"asset\": { \"version\": \"2.0\" } }';\r\n        return loader.importMeshAsync([], scene, data, \"\").then(() => {\r\n            scene.dispose();\r\n            engine.dispose();\r\n\r\n            return (GLTFTab._LoaderDefaults = defaults);\r\n        });\r\n    }\r\n\r\n    private _openDetailsPanel(): DetailPanel {\r\n        if (!this._detailsPanel) {\r\n            this._detailsPanel = new DetailPanel();\r\n            this._panel.appendChild(this._detailsPanel.toHtml());\r\n\r\n            this._split = Split([this._actions, this._detailsPanel.toHtml()], {\r\n                blockDrag: this._inspector.popupMode,\r\n                sizes: [50, 50],\r\n                direction: 'vertical'\r\n            });\r\n        }\r\n\r\n        this._detailsPanel.clean();\r\n        return this._detailsPanel;\r\n    }\r\n\r\n    private _closeDetailsPanel(): void {\r\n        if (this._detailsPanel) {\r\n            this._detailsPanel.toHtml().remove();\r\n            this._detailsPanel.dispose();\r\n            this._detailsPanel = null;\r\n        }\r\n\r\n        if (this._split) {\r\n            this._split.destroy();\r\n            delete this._split;\r\n        }\r\n    }\r\n\r\n    private _showLoaderDefaults(defaults: { [key: string]: any }): void {\r\n        var detailsPanel = this._openDetailsPanel();\r\n        const details = new Array<PropertyLine>();\r\n        for (const key in defaults) {\r\n            if (key !== \"extensions\") {\r\n                details.push(new PropertyLine(new Property(key, defaults, this._inspector.scene)));\r\n            }\r\n        }\r\n        detailsPanel.details = details;\r\n    }\r\n\r\n    private _showLoaderExtensionDefaults(defaults: { [key: string]: any }): boolean {\r\n        if (Object.keys(defaults).length === 1) {\r\n            return false;\r\n        }\r\n\r\n        var detailsPanel = this._openDetailsPanel();\r\n        const details = new Array<PropertyLine>();\r\n        for (const key in defaults) {\r\n            if (key !== \"enabled\") {\r\n                details.push(new PropertyLine(new Property(key, defaults, this._inspector.scene)));\r\n            }\r\n        }\r\n        detailsPanel.details = details;\r\n\r\n        return true;\r\n    }\r\n\r\n    private _addExport() {\r\n        const exportTitle = Helpers.CreateDiv('gltf-title', this._actions);\r\n        exportTitle.textContent = 'Export';\r\n\r\n        const exportActions = Helpers.CreateDiv('gltf-actions', this._actions) as HTMLDivElement;\r\n\r\n        const name = Helpers.CreateInput('gltf-input', exportActions);\r\n        name.placeholder = \"File name...\";\r\n\r\n        const button = Helpers.CreateElement('button', 'gltf-button', exportActions) as HTMLButtonElement;\r\n        button.innerText = 'Export GLB';\r\n        button.addEventListener('click', () => {\r\n            GLTF2Export.GLBAsync(this._inspector.scene, name.value || \"scene\", {\r\n                shouldExportTransformNode: transformNode => !GLTFTab._IsSkyBox(transformNode)\r\n            }).then((glb) => {\r\n                glb.downloadFiles();\r\n            });\r\n        });\r\n    }\r\n\r\n    private static _IsSkyBox(transformNode: TransformNode): boolean {\r\n        if (transformNode instanceof Mesh) {\r\n            if (transformNode.material) {\r\n                const material = transformNode.material as PBRMaterial | StandardMaterial;\r\n                const reflectionTexture = material.reflectionTexture;\r\n                if (reflectionTexture && reflectionTexture.coordinatesMode === Texture.SKYBOX_MODE) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nGLTFTab._Initialize();\r\n","import { Tools } from \"babylonjs\";\nimport { Helpers } from \"../helpers/Helpers\";\nimport { Inspector } from \"../Inspector\";\nimport { Tab } from \"./Tab\";\nimport { TabBar } from \"./TabBar\";\n\n/** \n * The console tab will have two features : \n * - hook all console.log call and display them in this panel (and in the browser console as well)\n * - display all Babylon logs (called with Tools.Log...)\n */\nexport class ConsoleTab extends Tab {\n\n    private _inspector: Inspector;\n\n    private _consolePanelContent: HTMLElement;\n    private _bjsPanelContent: HTMLElement;\n\n    private _oldConsoleLog: any;\n    private _oldConsoleWarn: any;\n    private _oldConsoleError: any;\n\n\n    constructor(tabbar: TabBar, insp: Inspector) {\n        super(tabbar, 'Console');\n        this._inspector = insp;\n\n        // Build the shaders panel : a div that will contains the shaders tree and both shaders panels\n        this._panel = Helpers.CreateDiv('tab-panel') as HTMLDivElement;\n\n        let consolePanel = Helpers.CreateDiv('console-panel') as HTMLDivElement;\n        let bjsPanel = Helpers.CreateDiv('console-panel') as HTMLDivElement;\n\n        this._panel.appendChild(consolePanel);\n        this._panel.appendChild(bjsPanel);\n\n        Split([consolePanel, bjsPanel], {\n            blockDrag: this._inspector.popupMode,\n            sizes: [50, 50],\n            direction: 'vertical'\n        }\n        );\n\n        // Titles\n        let title = Helpers.CreateDiv('console-panel-title', consolePanel);\n        title.textContent = 'Console logs';\n        title = Helpers.CreateDiv('console-panel-title', bjsPanel);\n        title.textContent = 'js logs';\n\n        // Contents\n        this._consolePanelContent = Helpers.CreateDiv('console-panel-content', consolePanel) as HTMLDivElement;\n        this._bjsPanelContent = Helpers.CreateDiv('console-panel-content', bjsPanel) as HTMLDivElement;\n\n        // Bjs logs\n        this._bjsPanelContent.innerHTML = Tools.LogCache;\n        Tools.OnNewCacheEntry = (entry: string) => {\n            this._bjsPanelContent.innerHTML += entry;\n            this._bjsPanelContent.scrollTop = this._bjsPanelContent.scrollHeight;\n        };\n\n        // Testing\n        //console.log(\"This is a console.log message\");\n        // console.log(\"That's right, console.log calls are hooked to be written in this window\");\n        // console.log(\"Object are also stringify-ed\", {width:10, height:30, shape:'rectangular'});\n        // console.warn(\"This is a console.warn message\");\n        // console.error(\"This is a console.error message\");\n\n        // Tools.Log(\"This is a message\");\n        // Tools.Warn(\"This is a warning\");\n        // Tools.Error(\"This is a error\");\n\n    }\n\n    /** Overrides super.dispose */\n    public dispose() {\n        console.log = this._oldConsoleLog;\n        console.warn = this._oldConsoleWarn;\n        console.error = this._oldConsoleError;\n\n    }\n\n    public active(b: boolean) {\n        super.active(b);\n        if (b) {\n            // save old console.log\n            this._oldConsoleLog = console.log;\n            this._oldConsoleWarn = console.warn;\n            this._oldConsoleError = console.error;\n\n            console.log = this._addConsoleLog.bind(this);\n            console.warn = this._addConsoleWarn.bind(this);\n            console.error = this._addConsoleError.bind(this);\n        }\n    }\n\n    private _message(type: string, message: any, caller: string) {\n        let callerLine = Helpers.CreateDiv('caller', this._consolePanelContent);\n        callerLine.textContent = caller.replace(' ', '\\u00A0');\n\n        let line = Helpers.CreateDiv(type, this._consolePanelContent);\n        line.textContent = message.replace(' ', '\\u00A0');\n\n        this._consolePanelContent.scrollTop = this._consolePanelContent.scrollHeight;\n    }\n    private _addConsoleLog(...params: any[]) {\n\n        // Get caller name if not null\n        let callerFunc = this._addConsoleLog.caller as Function;\n        let caller = callerFunc == null ? \"Window\" : \"Function \" + (<any>callerFunc)['name'] + \": \";\n\n        for (var i = 0; i < params.length; i++) {\n            this._message('log', params[i], caller);\n            // Write again in console does not work on edge, as the console object                 \n            // is not instantiate if debugger tools is not open\n            if (!Helpers.IsBrowserEdge()) {\n                this._oldConsoleLog(params[i]);\n            }\n        }\n    }\n\n    private _addConsoleWarn(...params: any[]) {\n\n        // Get caller name if not null\n        let callerFunc = this._addConsoleLog.caller as Function;\n        let caller = callerFunc == null ? \"Window\" : (<any>callerFunc)['name'];\n\n        for (var i = 0; i < params.length; i++) {\n            this._message('warn', params[i], caller);\n            // Write again in console does not work on edge, as the console object \n            // is not instantiate if debugger tools is not open\n            if (!Helpers.IsBrowserEdge()) {\n                this._oldConsoleWarn(params[i]);\n            }\n        }\n    }\n\n    private _addConsoleError(...params: any[]) {\n\n        // Get caller name if not null\n        let callerFunc = this._addConsoleLog.caller as Function;\n        let caller = callerFunc == null ? \"Window\" : (<any>callerFunc)['name'];\n\n        for (var i = 0; i < params.length; i++) {\n            this._message('error', params[i], caller);\n            // Write again in console does not work on edge, as the console object \n            // is not instantiate if debugger tools is not open\n            if (!Helpers.IsBrowserEdge()) {\n                this._oldConsoleError(params[i]);\n            }\n        }\n    }\n\n}\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\nimport { Tooltip } from \"../gui/Tooltip\";\r\n\r\n/** Any object implementing this interface should \r\n * provide methods to retrieve its info\r\n */\r\nexport interface IToolInfo {\r\n    getInfo: () => string;\r\n}\r\n/**\r\n * Checkbox to display/hide the primitive\r\n */\r\nexport class Info extends AbstractTreeTool {\r\n\r\n    private _obj: IToolInfo;\r\n\r\n    constructor(obj: IToolInfo) {\r\n        super();\r\n        this._obj = obj;\r\n        this._elem.classList.add('fa-info-circle');\r\n\r\n        new Tooltip(this._elem, this._obj.getInfo(), this._elem);\r\n    }\r\n\r\n    // Nothing to do on click\r\n    protected action() {\r\n        super.action();\r\n    }\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\n\r\n/** Any object implementing this interface should \r\n * provide methods to toggle a debug area\r\n */\r\nexport interface IToolDebug {\r\n    debug: (b: boolean) => void;\r\n}\r\n\r\nexport class DebugArea extends AbstractTreeTool {\r\n\r\n    private _obj: IToolDebug;\r\n\r\n    constructor(obj: IToolDebug) {\r\n        super();\r\n        this._obj = obj;\r\n        this._elem.classList.add('fa-wrench');\r\n    }\r\n\r\n    protected action() {\r\n        super.action();\r\n        if (this._on) {\r\n            // set icon activated\r\n            this._elem.classList.add('active');\r\n        } else {\r\n            // set icon deactivated\r\n            this._elem.classList.remove('active');\r\n        }\r\n        this._obj.debug(this._on);\r\n    }\r\n}\r\n","import { AbstractTreeTool } from \"./AbstractTreeTool\";\r\n\r\n/** Any object implementing this interface should \r\n * provide methods to toggle its bounding box\r\n */\r\nexport interface IToolBoundingBox {\r\n    isBoxVisible: () => boolean,\r\n    setBoxVisible: (b: boolean) => void;\r\n}\r\n/**\r\n * Checkbox to display/hide the primitive\r\n */\r\nexport class BoundingBox extends AbstractTreeTool {\r\n\r\n    private _obj: IToolBoundingBox;\r\n\r\n    constructor(obj: IToolBoundingBox) {\r\n        super();\r\n        this._obj = obj;\r\n        this._elem.classList.add('fa-cube');\r\n        this._on = this._obj.isBoxVisible();\r\n        this._check();\r\n    }\r\n\r\n    // For a checkbox, set visible/invisible the corresponding prim\r\n    protected action() {\r\n        super.action();\r\n        // update object and gui according to the new status\r\n        this._check();\r\n    }\r\n\r\n    private _check() {\r\n        if (this._on) {\r\n            // set icon eye\r\n            this._elem.classList.add('active');\r\n        } else {\r\n            // set icon eye-slash\r\n            this._elem.classList.remove('active');\r\n        }\r\n        this._obj.setBoxVisible(this._on);\r\n    }\r\n}\r\n","import { CameraAdapter } from \"../adapters/CameraAdapter\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { TreeItem } from \"../tree/TreeItem\";\r\nimport { PropertyTab } from \"./PropertyTab\";\r\nimport { TabBar } from \"./TabBar\";\r\n\r\n\r\nexport class CameraTab extends PropertyTab {\r\n\r\n    constructor(tabbar: TabBar, inspector: Inspector) {\r\n        super(tabbar, 'Camera', inspector);\r\n    }\r\n    /* Overrides super */\r\n    protected _getTree(): Array<TreeItem> {\r\n        let arr = [];\r\n\r\n        // get all cameras from the first scene\r\n        let instances = this._inspector.scene;\r\n        for (let camera of instances.cameras) {\r\n            arr.push(new TreeItem(this, new CameraAdapter(camera)));\r\n        }\r\n        return arr;\r\n    }\r\n\r\n}\r\n","import { AbstractTool } from \"./AbstractTool\";\r\nimport { Inspector } from \"../Inspector\";\r\n\r\n/**\r\n * Removes the inspector panel\r\n */\r\nexport class DisposeTool extends AbstractTool {\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-times', parent, inspector, 'Close the inspector panel');\r\n    }\r\n\r\n    // Action : refresh the whole panel\r\n    public action() {\r\n        this._inspector.dispose();\r\n    }\r\n}\r\n","import { Inspector } from \"../Inspector\";\r\nimport { Scheduler } from \"../scheduler/Scheduler\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\n\r\n\r\nexport class PauseScheduleTool extends AbstractTool {\r\n\r\n    private _isPause: boolean = false;\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-pause', parent, inspector, 'Pause the automatic update of properties');\r\n    }\r\n\r\n    // Action : refresh the whole panel\r\n    public action() {\r\n        if (this._isPause) {\r\n            Scheduler.getInstance().pause = false;\r\n            this._updateIcon('fa-pause');\r\n        } else {\r\n            Scheduler.getInstance().pause = true;\r\n            this._updateIcon('fa-play');\r\n        }\r\n        this._isPause = !this._isPause;\r\n    }\r\n}\r\n","import { AbstractTool } from \"./AbstractTool\";\r\nimport { Inspector } from \"../Inspector\";\r\n\r\nexport class FullscreenTool extends AbstractTool {\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-expand', parent, inspector, 'Open the scene in fullscreen, press Esc to exit');\r\n    }\r\n\r\n    // Action : refresh the whole panel\r\n    public action() {\r\n\r\n        var elem = document.body;\r\n\r\n        function requestFullScreen(element: HTMLElement) {\r\n            // Supports most browsers and their versions.\r\n            var requestMethod = element.requestFullscreen || element.webkitRequestFullScreen;\r\n            requestMethod.call(element);\r\n        }\r\n\r\n        requestFullScreen(elem);\r\n    }\r\n}\r\n","import { Inspector } from \"../Inspector\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\n\r\n\r\nexport class PopupTool extends AbstractTool {\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fas', 'fa-external-link-alt', parent, inspector, 'Open the inspector in a popup');\r\n    }\r\n\r\n    // Action : refresh the whole panel\r\n    public action() {\r\n        this._inspector.openPopup();\r\n    }\r\n}\r\n","import { AbstractMesh } from \"babylonjs\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\n\r\n\r\nexport class PickTool extends AbstractTool {\r\n\r\n    private _isActive: boolean = false;\r\n    private _pickHandler: (evt: Event) => void;\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-mouse-pointer', parent, inspector, 'Select a mesh in the scene');\r\n\r\n        // Create handler\r\n        this._pickHandler = this._pickMesh.bind(this);\r\n    }\r\n\r\n    // Action : find the corresponding tree item in the correct tab and display it\r\n    public action() {\r\n        if (this._isActive) {\r\n            this._deactivate();\r\n        } else {\r\n            this.toHtml().classList.add('active');\r\n            // Add event handler : pick on a mesh in the scene\r\n            let canvas = <HTMLElement>this._inspector.scene.getEngine().getRenderingCanvas();\r\n            canvas.addEventListener('click', this._pickHandler);\r\n            this._isActive = true;\r\n        }\r\n    }\r\n\r\n    /** Deactivate this tool */\r\n    private _deactivate() {\r\n        this.toHtml().classList.remove('active');\r\n        // Remove event handler\r\n        let canvas = <HTMLElement>this._inspector.scene.getEngine().getRenderingCanvas();\r\n        canvas.removeEventListener('click', this._pickHandler);\r\n        this._isActive = false;\r\n    }\r\n\r\n    /** Pick a mesh in the scene */\r\n    private _pickMesh(evt: PointerEvent) {\r\n        let pos = this._updatePointerPosition(evt);\r\n        let pi = this._inspector.scene.pick(pos.x, pos.y, (mesh: AbstractMesh) => { return true });\r\n\r\n        if (pi && pi.pickedMesh) {\r\n            this._inspector.displayObjectDetails(pi.pickedMesh);\r\n        }\r\n        this._deactivate();\r\n    }\r\n\r\n    private _updatePointerPosition(evt: PointerEvent): { x: number, y: number } {\r\n        let canvasRect = <ClientRect>this._inspector.scene.getEngine().getRenderingCanvasClientRect();\r\n        let pointerX = evt.clientX - canvasRect.left;\r\n        let pointerY = evt.clientY - canvasRect.top;\r\n        return { x: pointerX, y: pointerY };\r\n    };\r\n}\r\n","import { AbstractMesh, Nullable, Scene } from \"babylonjs\";\r\nimport * as GUI from \"babylonjs-gui\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\n\r\n\r\nexport class LabelTool extends AbstractTool {\r\n\r\n    /** True if label are displayed, false otherwise */\r\n    private _isDisplayed: boolean = false;\r\n    private _advancedTexture: Nullable<GUI.AdvancedDynamicTexture> = null;\r\n    private _labelInitialized: boolean = false;\r\n    private _scene: Nullable<Scene> = null;\r\n    private _guiLoaded: boolean = false;\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-tags', parent, inspector, 'Display mesh names on the canvas');\r\n\r\n        this._scene = inspector.scene;\r\n    }\r\n\r\n    public dispose() {\r\n\r\n        if (this._advancedTexture) {\r\n            this._advancedTexture.dispose();\r\n        }\r\n    }\r\n\r\n    private _checkGUILoaded(): boolean {\r\n        if (this._guiLoaded === true) {\r\n            return true;\r\n        }\r\n        if (GUI) {\r\n            this._guiLoaded = true;\r\n        }\r\n        return this._guiLoaded;\r\n    }\r\n\r\n    private _initializeLabels() {\r\n        // Check if the label are already initialized and quit if it's the case\r\n        if (this._labelInitialized || !this._scene) {\r\n            return;\r\n        }\r\n\r\n        // Can't initialize them if the GUI lib is not loaded yet\r\n        if (!this._checkGUILoaded()) {\r\n            return;\r\n        }\r\n\r\n        // Create the canvas that will be used to display the labels\r\n        this._advancedTexture = GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\r\n\r\n        // Create label for all the Meshes, Lights and Cameras\r\n        // Those that will be created/removed after this method is called will be taken care by the event handlers added below\r\n\r\n        for (let m of this._scene.meshes) {\r\n            this._createLabel(m);\r\n        }\r\n\r\n        this._scene.onNewMeshAddedObservable.add((m, s) => {\r\n            this._createLabel(m);\r\n        });\r\n\r\n        this._scene.onMeshRemovedObservable.add((m, s) => {\r\n            this._removeLabel(m);\r\n        });\r\n\r\n        this._labelInitialized = true;\r\n    }\r\n\r\n    private _createLabel(mesh: AbstractMesh) {\r\n        // Don't create label for \"system nodes\" (starting and ending with ###)\r\n        let name = mesh.name;\r\n\r\n        if (Helpers.IsSystemName(name)) {\r\n            return;\r\n        }\r\n\r\n        if (mesh && this._advancedTexture) {\r\n            let rect1 = new GUI.Rectangle();\r\n            rect1.width = 4 + 10 * name.length + \"px\";\r\n            rect1.height = \"22px\";\r\n            rect1.background = \"rgba(0,0,0,0.6)\";\r\n            rect1.color = \"black\";\r\n            this._advancedTexture.addControl(rect1);\r\n\r\n            let label = new GUI.TextBlock();\r\n            label.text = name;\r\n            label.fontSize = 12;\r\n            rect1.addControl(label);\r\n\r\n            rect1.linkWithMesh(mesh);\r\n        }\r\n    }\r\n\r\n    private _removeLabel(mesh: AbstractMesh) {\r\n        if (!this._advancedTexture) {\r\n            return;\r\n        }\r\n        for (let g of this._advancedTexture._rootContainer.children) {\r\n            let ed = g._linkedMesh;\r\n            if (ed === mesh) {\r\n                this._advancedTexture.removeControl(g);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Action : Display/hide mesh names on the canvas\r\n    public action() {\r\n        // Don't toggle if the script is not loaded\r\n        if (!this._checkGUILoaded() || !this._advancedTexture) {\r\n            return;\r\n        }\r\n\r\n        // Toggle the label display state\r\n        this._isDisplayed = !this._isDisplayed;\r\n\r\n        // Check if we have to display the labels\r\n        if (this._isDisplayed) {\r\n            this._initializeLabels();\r\n            this._advancedTexture._rootContainer.isVisible = true;\r\n        }\r\n\r\n        // Or to hide them\r\n        else {\r\n            this._advancedTexture._rootContainer.isVisible = false;\r\n        }\r\n    }\r\n}\r\n","import { Inspector } from \"../Inspector\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\n\r\n\r\nexport class RefreshTool extends AbstractTool {\r\n\r\n    constructor(parent: HTMLElement, inspector: Inspector) {\r\n        super('fa', 'fa-sync', parent, inspector, 'Refresh the current tab');\r\n    }\r\n\r\n    // Action : refresh the whole panel\r\n    public action() {\r\n        this._inspector.refresh();\r\n    }\r\n}\r\n","import { BasicElement } from \"../gui/BasicElement\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { AbstractTool } from \"./AbstractTool\";\r\nimport { RefreshTool } from \"./RefreshTool\";\r\nimport { LabelTool } from \"./LabelTool\";\r\nimport { PickTool } from \"./PickTool\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { PopupTool } from \"./PopupTool\";\r\nimport { FullscreenTool } from \"./FullscreenTool\";\r\nimport { PauseScheduleTool } from \"./PauseScheduleTool\";\r\nimport { DisposeTool } from \"./DisposeTool\";\r\n\r\n\r\nexport class Toolbar extends BasicElement {\r\n\r\n    private _inspector: Inspector;\r\n    private _tools: Array<AbstractTool> = []\r\n\r\n    constructor(inspector: Inspector) {\r\n        super();\r\n        this._inspector = inspector;\r\n        this._build();\r\n\r\n        this._addTools();\r\n    }\r\n\r\n    // A toolbar cannot be updated\r\n    public update() { };\r\n\r\n    protected _build() {\r\n        this._div.className = 'toolbar';\r\n    };\r\n\r\n    private _addTools() {\r\n        // Refresh\r\n        this._tools.push(new RefreshTool(this._div, this._inspector));\r\n        // Display labels\r\n        this._tools.push(new LabelTool(this._div, this._inspector));\r\n        // Pick object\r\n        this._tools.push(new PickTool(this._div, this._inspector));\r\n\r\n        // Add the popup mode only if the inspector is not in popup mode and if the brower is not edge\r\n        // Edge is \r\n        if (!this._inspector.popupMode && !Helpers.IsBrowserEdge()) {\r\n            this._tools.push(new PopupTool(this._div, this._inspector));\r\n        }\r\n        // FullScreen\r\n        this._tools.push(new FullscreenTool(this._div, this._inspector));\r\n\r\n        // Pause schedule\r\n        this._tools.push(new PauseScheduleTool(this._div, this._inspector));\r\n\r\n        // Pause schedule\r\n        this._tools.push(new DisposeTool(this._div, this._inspector));\r\n    }\r\n\r\n    /** \r\n     * Returns the total width in pixel of the tabbar, \r\n     * that corresponds to the sum of the width of each tab + toolbar width\r\n    */\r\n    public getPixelWidth(): number {\r\n        let sum = 0;\r\n        for (let tool of this._tools) {\r\n            sum += tool.getPixelWidth();\r\n        }\r\n\r\n        return sum;\r\n    }\r\n}\r\n","import { AbstractMesh, Nullable } from \"babylonjs\";\r\nimport * as GUI from \"babylonjs-gui\";\r\nimport { BasicElement } from \"../gui/BasicElement\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Inspector } from \"../Inspector\";\r\nimport { Toolbar } from \"../tools/Toolbar\";\r\nimport { CameraTab } from \"./CameraTab\";\r\nimport { ConsoleTab } from \"./ConsoleTab\";\r\nimport { GLTFTab } from \"./GLTFTab\";\r\nimport { GUITab } from \"./GUITab\";\r\nimport { LightTab } from \"./LightTab\";\r\nimport { MaterialTab } from \"./MaterialTab\";\r\nimport { MeshTab } from \"./MeshTab\";\r\nimport { PhysicsTab } from \"./PhysicsTab\";\r\nimport { SceneTab } from \"./SceneTab\";\r\nimport { SoundTab } from \"./SoundTab\";\r\nimport { StatsTab } from \"./StatsTab\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TextureTab } from \"./TextureTab\";\r\nimport { ToolsTab } from \"./ToolsTab\";\r\n\r\n\r\n/**\r\n * A tab bar will contains each view the inspector can have : Canvas2D, Meshes...\r\n * The default active tab is the first one of the list.\r\n */\r\nexport class TabBar extends BasicElement {\r\n\r\n    // The list of available tabs\r\n    private _tabs: Array<Tab> = [];\r\n    private _inspector: Inspector;\r\n    /** The tab displaying all meshes */\r\n    private _meshTab: MeshTab;\r\n    /** The toolbar */\r\n    private _toolBar: Toolbar;\r\n    /** The icon displayed at the end of the toolbar displaying a combo box of tabs not displayed */\r\n    private _moreTabsIcon: HTMLElement;\r\n    /** The panel displayed when the 'more-tab' icon is selected */\r\n    private _moreTabsPanel: HTMLElement;\r\n    /** The list of tab displayed by clicking on the remainingIcon */\r\n    private _invisibleTabs: Array<Tab> = [];\r\n    /** The list of tabs visible, displayed in the tab bar */\r\n    private _visibleTabs: Array<Tab> = [];\r\n\r\n    constructor(inspector: Inspector, initialTab?: number) {\r\n        super();\r\n        this._inspector = inspector;\r\n        this._tabs.push(new SceneTab(this, this._inspector));\r\n        this._tabs.push(new ConsoleTab(this, this._inspector));\r\n        this._tabs.push(new StatsTab(this, this._inspector));\r\n        this._meshTab = new MeshTab(this, this._inspector);\r\n        this._tabs.push(new TextureTab(this, this._inspector));\r\n        this._tabs.push(this._meshTab);\r\n        this._tabs.push(new LightTab(this, this._inspector));\r\n        this._tabs.push(new MaterialTab(this, this._inspector));\r\n        if (GLTFTab.IsSupported) {\r\n            this._tabs.push(new GLTFTab(this, this._inspector));\r\n        }\r\n        if (GUI) {\r\n            this._tabs.push(new GUITab(this, this._inspector));\r\n        }\r\n        this._tabs.push(new PhysicsTab(this, this._inspector));\r\n        this._tabs.push(new CameraTab(this, this._inspector));\r\n        this._tabs.push(new SoundTab(this, this._inspector));\r\n        this._tabs.push(new ToolsTab(this, this._inspector));\r\n        this._toolBar = new Toolbar(this._inspector);\r\n\r\n        this._build();\r\n\r\n        //Check initialTab is defined and between tabs bounds\r\n        if (!initialTab || initialTab < 0 || initialTab >= this._tabs.length) {\r\n            initialTab = 0;\r\n        }\r\n\r\n        this._tabs[initialTab].active(true);\r\n\r\n        // set all tab as visible\r\n        for (let tab of this._tabs) {\r\n            this._visibleTabs.push(tab);\r\n        }\r\n    }\r\n\r\n    // No update\r\n    public update() { }\r\n\r\n    protected _build() {\r\n        this._div.className = 'tabbar';\r\n\r\n        this._div.appendChild(this._toolBar.toHtml());\r\n        for (let tab of this._tabs) {\r\n            this._div.appendChild(tab.toHtml());\r\n        }\r\n\r\n\r\n        this._moreTabsIcon = Helpers.CreateElement('i', 'fa fa-angle-double-right more-tabs');\r\n\r\n        this._moreTabsPanel = Helpers.CreateDiv('more-tabs-panel');\r\n\r\n        this._moreTabsIcon.addEventListener('click', () => {\r\n            // Hide the 'more-tabs-panel' if already displayed \r\n            if (this._moreTabsPanel.style.display == 'flex') {\r\n                this._moreTabsPanel.style.display = 'none';\r\n            } else {\r\n                // Attach more-tabs-panel if not attached yet\r\n                let topPanel = this._div.parentNode as HTMLElement;\r\n                if (!topPanel.contains(this._moreTabsPanel)) {\r\n                    topPanel.appendChild(this._moreTabsPanel);\r\n                }\r\n                // Clean the 'more-tabs-panel'\r\n                Helpers.CleanDiv(this._moreTabsPanel);\r\n                // Add each invisible tabs to this panel\r\n                for (let tab of this._invisibleTabs) {\r\n                    this._addInvisibleTabToPanel(tab);\r\n                }\r\n                // And display it\r\n                this._moreTabsPanel.style.display = 'flex';\r\n            }\r\n        });\r\n    }\r\n\r\n    /** \r\n     * Add a tab to the 'more-tabs' panel, displayed by clicking on the \r\n     * 'more-tabs' icon\r\n     */\r\n    private _addInvisibleTabToPanel(tab: Tab) {\r\n        let div = Helpers.CreateDiv('invisible-tab', this._moreTabsPanel);\r\n        div.textContent = tab.name;\r\n        div.addEventListener('click', () => {\r\n            this._moreTabsPanel.style.display = 'none';\r\n            this.switchTab(tab);\r\n        });\r\n    }\r\n\r\n    /** Dispose the current tab, set the given tab as active, and refresh the treeview */\r\n    public switchTab(tab: Tab) {\r\n        // Dispose the active tab\r\n        let activeTab = this.getActiveTab();\r\n\r\n        if (activeTab) {\r\n            activeTab.dispose();\r\n        }\r\n\r\n        // Deactivate all tabs\r\n        for (let t of this._tabs) {\r\n            t.active(false);\r\n        }\r\n        // activate the given tab\r\n        tab.active(true);\r\n\r\n        // Refresh the inspector\r\n        this._inspector.refresh();\r\n    }\r\n\r\n    /** Display the mesh tab.\r\n     * If a parameter is given, the given mesh details are displayed\r\n     */\r\n    public switchMeshTab(mesh?: AbstractMesh) {\r\n        this.switchTab(this._meshTab);\r\n        if (mesh) {\r\n            let item = this._meshTab.getItemFor(mesh);\r\n            if (item) {\r\n                this._meshTab.select(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Returns the active tab */\r\n    public getActiveTab(): Nullable<Tab> {\r\n        for (let tab of this._tabs) {\r\n            if (tab.isActive()) {\r\n                return tab;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getActiveTabIndex(): number {\r\n        for (let i = 0; i < this._tabs.length; i++) {\r\n            if (this._tabs[i].isActive()) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public get inspector(): Inspector {\r\n        return this._inspector;\r\n    }\r\n\r\n    /** \r\n     * Returns the total width in pixel of the tabbar, \r\n     * that corresponds to the sum of the width of each visible tab + toolbar width\r\n    */\r\n    public getPixelWidth(): number {\r\n        let sum = 0;\r\n        for (let tab of this._visibleTabs) {\r\n            sum += tab.getPixelWidth();\r\n        }\r\n        sum += this._toolBar.getPixelWidth();\r\n        if (this._div.contains(this._moreTabsIcon)) {\r\n            sum += 30; // $tabbarheight\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    /** Display the remaining icon or not depending on the tabbar width.\r\n     * This function should be called each time the inspector width is updated\r\n     */\r\n    public updateWidth(): void {\r\n        if (!this._div.parentElement) {\r\n            return;\r\n        }\r\n        let parentSize = this._div.parentElement.clientWidth;\r\n        let lastTabWidth = 75;\r\n        let currentSize = this.getPixelWidth();\r\n\r\n        // Check if a tab should be removed : if the tab bar width is greater than\r\n        // its parent width\r\n        while (this._visibleTabs.length > 0 && currentSize > parentSize) {\r\n            // Start by the last element\r\n            let tab = this._visibleTabs.pop();\r\n\r\n            if (!tab) {\r\n                break;\r\n            }\r\n\r\n            // set it invisible\r\n            this._invisibleTabs.push(tab);\r\n            // and removes it from the DOM\r\n            this._div.removeChild(tab.toHtml());\r\n            currentSize = this.getPixelWidth() + lastTabWidth;\r\n        }\r\n\r\n        // Check if a tab can be added to the tab bar : if the tab bar width\r\n        // + 100 (at least 100px is needed to add a tab) is less than its parent width\r\n        if (this._invisibleTabs.length > 0) {\r\n            if (currentSize + lastTabWidth < parentSize) {\r\n                let lastTab = this._invisibleTabs.pop();\r\n\r\n                if (lastTab) {\r\n                    this._div.appendChild(lastTab.toHtml());\r\n                    this._visibleTabs.push(lastTab);\r\n                }\r\n                // Update more-tab icon in last position if needed\r\n                if (this._div.contains(this._moreTabsIcon)) {\r\n                    this._div.removeChild(this._moreTabsIcon);\r\n                }\r\n            }\r\n        }\r\n        if (this._invisibleTabs.length > 0 && !this._div.contains(this._moreTabsIcon)) {\r\n            this._div.appendChild(this._moreTabsIcon);\r\n        }\r\n    }\r\n\r\n}\r\n","import * as GUI from \"babylonjs-gui\";\r\nimport { PROPERTIES } from \"./properties\";\r\n\r\n/**\r\n  * Function that add gui objects properties to the variable PROPERTIES\r\n  */\r\nexport function loadGUIProperties() {\r\n    let PROPERTIES_GUI = {\r\n        'ValueAndUnit': {\r\n            type: GUI.ValueAndUnit,\r\n            properties: ['_value', 'unit'],\r\n            format: (valueAndUnit: GUI.ValueAndUnit) => { return valueAndUnit }\r\n        },\r\n        'Control': {\r\n            type: GUI.Control,\r\n            properties: [\r\n                '_alpha',\r\n                '_fontFamily',\r\n                '_color',\r\n                '_scaleX',\r\n                '_scaleY',\r\n                '_rotation',\r\n                '_currentMeasure',\r\n                '_width',\r\n                '_height',\r\n                '_left',\r\n                '_top',\r\n                '_linkedMesh',\r\n                'isHitTestVisible',\r\n                'isPointerBlocker',\r\n            ],\r\n            format: (control: GUI.Control) => { return control.name }\r\n        },\r\n        'Button': {\r\n            type: GUI.Button,\r\n            properties: new Array(),\r\n            format: (button: GUI.Button) => { return button.name }\r\n        },\r\n        'ColorPicker': {\r\n            type: GUI.ColorPicker,\r\n            properties: ['_value'],\r\n            format: (colorPicker: GUI.ColorPicker) => { return colorPicker.name }\r\n        },\r\n        'Checkbox': {\r\n            type: GUI.Checkbox,\r\n            properties: ['_isChecked', '_background'],\r\n            format: (checkbox: GUI.Checkbox) => { return checkbox.name }\r\n        },\r\n        'Ellipse': {\r\n            type: GUI.Ellipse,\r\n            properties: ['_thickness'],\r\n            format: (ellipse: GUI.Ellipse) => { return ellipse.name }\r\n        },\r\n        'Image': {\r\n            type: GUI.Image,\r\n            properties: [\r\n                '_imageWidth',\r\n                '_imageHeight',\r\n                '_loaded',\r\n                '_source',\r\n            ],\r\n            format: (image: GUI.Image) => { return image.name }\r\n        },\r\n        'Line': {\r\n            type: GUI.Line,\r\n            properties: ['_lineWidth',\r\n                '_background',\r\n                '_x1',\r\n                '_y1',\r\n                '_x2',\r\n                '_y2',\r\n            ],\r\n            format: (line: GUI.Line) => { return line.name }\r\n        },\r\n        'RadioButton': {\r\n            type: GUI.RadioButton,\r\n            properties: ['_isChecked', '_background'],\r\n            format: (radioButton: GUI.RadioButton) => { return radioButton.name }\r\n        },\r\n        'Rectangle': {\r\n            type: GUI.Rectangle,\r\n            properties: ['_thickness', '_cornerRadius'],\r\n            format: (rectangle: GUI.Rectangle) => { return rectangle.name }\r\n        },\r\n        'Slider': {\r\n            type: GUI.Slider,\r\n            properties: [\r\n                '_minimum',\r\n                '_maximum',\r\n                '_value',\r\n                '_background',\r\n                '_borderColor',\r\n            ],\r\n            format: (slider: GUI.Slider) => { return slider.name }\r\n        },\r\n        'StackPanel': {\r\n            type: GUI.StackPanel,\r\n            properties: ['_isVertical'],\r\n            format: (stackPanel: GUI.StackPanel) => { return stackPanel.name }\r\n        },\r\n        'TextBlock': {\r\n            type: GUI.TextBlock,\r\n            properties: ['_text', '_textWrapping'],\r\n            format: (textBlock: GUI.TextBlock) => { return textBlock.name }\r\n        },\r\n        'Container': {\r\n            type: GUI.Container,\r\n            properties: ['_background'],\r\n            format: (container: GUI.Container) => { return container.name }\r\n        },\r\n    }\r\n\r\n    for (let prop in PROPERTIES_GUI) {\r\n        (<any>PROPERTIES)[prop] = (<any>PROPERTIES_GUI)[prop];\r\n    }\r\n} \r\n","import { Texture } from \"babylonjs\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { BasicElement } from \"./BasicElement\";\r\n\r\n/**\r\n* Display a very small div corresponding to the given texture. On mouse over, display the full image\r\n*/\r\nexport class TextureElement extends BasicElement {\r\n\r\n    /** The big div displaying the full image */\r\n    private _textureDiv: HTMLElement;\r\n\r\n    constructor(tex: Texture) {\r\n        super();\r\n        this._div.className = 'fa fa-search texture-element';\r\n\r\n        // Create the texture viewer\r\n        this._textureDiv = Helpers.CreateDiv('texture-viewer', this._div);\r\n        // Img\r\n        let imgDiv = Helpers.CreateDiv('texture-viewer-img', this._textureDiv);\r\n\r\n        // Texture size\r\n        let sizeDiv = Helpers.CreateDiv(null, this._textureDiv);\r\n\r\n        if (tex) {\r\n            sizeDiv.textContent = `${tex.getBaseSize().width}px x ${tex.getBaseSize().height}px`;\r\n            imgDiv.style.backgroundImage = `url('${tex.url}')`;\r\n            imgDiv.style.width = `${tex.getBaseSize().width}px`;\r\n            imgDiv.style.height = `${tex.getBaseSize().height}px`;\r\n        }\r\n\r\n        this._div.addEventListener('mouseover', this._showViewer.bind(this, 'flex'));\r\n        this._div.addEventListener('mouseout', this._showViewer.bind(this, 'none'));\r\n\r\n    }\r\n\r\n    public update(tex?: Texture) {\r\n\r\n    }\r\n\r\n    private _showViewer(mode: string) {\r\n        this._textureDiv.style.display = mode;\r\n    }\r\n}\r\n","import { HDRCubeTexture, Mesh, PBRMaterial, Texture } from \"babylonjs\";\r\nimport { CubeTextureElement } from \"./CubeTextureElement\";\r\n\r\n/**\r\n* Display a very small div. A new canvas is created, with a new js scene, containing only the \r\n* cube texture in a cube\r\n*/\r\nexport class HDRCubeTextureElement extends CubeTextureElement {\r\n\r\n\r\n    /** The texture given as a parameter should be cube. */\r\n    constructor(tex: Texture) {\r\n        super(tex);\r\n    }\r\n\r\n    /** Creates the box  */\r\n    protected _populateScene() {\r\n        // Create the hdr texture\r\n        let hdrTexture = new HDRCubeTexture(this._textureUrl, this._scene, 512);\r\n        hdrTexture.coordinatesMode = Texture.SKYBOX_MODE;\r\n\r\n        this._cube = Mesh.CreateBox(\"hdrSkyBox\", 10.0, this._scene);\r\n        let hdrSkyboxMaterial = new PBRMaterial(\"skyBox\", this._scene);\r\n        hdrSkyboxMaterial.backFaceCulling = false;\r\n        hdrSkyboxMaterial.reflectionTexture = hdrTexture;\r\n        hdrSkyboxMaterial.microSurface = 1.0;\r\n        hdrSkyboxMaterial.disableLighting = true;\r\n        this._cube.material = hdrSkyboxMaterial;\r\n        this._cube.registerBeforeRender(() => {\r\n            this._cube.rotation.y += 0.01;\r\n        })\r\n    }\r\n}\r\n","import { Color3, Color4 } from \"babylonjs\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { Scheduler } from \"../scheduler/Scheduler\";\r\nimport { BasicElement } from \"./BasicElement\";\r\n\r\n/**\r\n * Represents a html div element. \r\n * The div is built when an instance of BasicElement is created.\r\n */\r\nexport class ColorPickerElement extends BasicElement {\r\n\r\n    protected _input: HTMLInputElement;\r\n    private pline: PropertyLine;\r\n\r\n    constructor(color: Color4 | Color3, propertyLine: PropertyLine) {\r\n        super();\r\n        let scheduler = Scheduler.getInstance();\r\n        this._div.className = 'color-element';\r\n        this._div.style.backgroundColor = this._toRgba(color);\r\n        this.pline = propertyLine;\r\n\r\n        this._input = Helpers.CreateInput();\r\n        this._input.type = 'color';\r\n        this._input.style.opacity = \"0\";\r\n        this._input.style.width = '10px';\r\n        this._input.style.height = '15px';\r\n        this._input.value = color.toHexString();\r\n\r\n        this._input.addEventListener('input', (e) => {\r\n            let color = Color3.FromHexString(this._input.value);\r\n            color.r = parseFloat(color.r.toPrecision(2));\r\n            color.g = parseFloat(color.g.toPrecision(2));\r\n            color.b = parseFloat(color.b.toPrecision(2));\r\n            this.pline.validateInput(color);\r\n            scheduler.pause = false;\r\n        });\r\n\r\n        this._div.appendChild(this._input);\r\n\r\n        this._input.addEventListener('click', (e) => {\r\n            scheduler.pause = true;\r\n        });\r\n    }\r\n\r\n    public update(color?: Color4 | Color3) {\r\n        if (color) {\r\n            this._div.style.backgroundColor = this._toRgba(color);\r\n            this._input.value = color.toHexString();\r\n        }\r\n    }\r\n\r\n    private _toRgba(color: Color4 | Color3): string {\r\n        if (color) {\r\n            let r = (color.r * 255) | 0;\r\n            let g = (color.g * 255) | 0;\r\n            let b = (color.b * 255) | 0;\r\n            let a = 1;\r\n            if (color instanceof Color4) {\r\n                a = (color as Color4).a;\r\n            }\r\n            return `rgba(${r}, ${g}, ${b}, ${a})`;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n}\r\n","import { Camera } from \"babylonjs\";\r\nimport { AbstractTreeTool } from \"../treetools/AbstractTreeTool\";\r\nimport { PropertyLine } from \"../details/PropertyLine\";\r\nimport { Helpers } from \"../helpers/Helpers\";\r\nimport { CameraPOV, ICameraPOV } from \"../treetools/CameraPOV\";\r\nimport { Adapter } from \"./Adapter\";\r\n\r\n\r\nexport class CameraAdapter\r\n    extends Adapter\r\n    implements ICameraPOV {\r\n\r\n    constructor(obj: Camera) {\r\n        super(obj);\r\n    }\r\n\r\n    /** Returns the name displayed in the tree */\r\n    public id(): string {\r\n        let str = '';\r\n        if (this._obj.name) {\r\n            str = this._obj.name;\r\n        } // otherwise nothing displayed        \r\n        return str;\r\n    }\r\n\r\n    /** Returns the type of this object - displayed in the tree */\r\n    public type(): string {\r\n        return Helpers.GET_TYPE(this._obj);\r\n    }\r\n\r\n    /** Returns the list of properties to be displayed for this adapter */\r\n    public getProperties(): Array<PropertyLine> {\r\n        return Helpers.GetAllLinesProperties(this._obj);\r\n    }\r\n\r\n    public getTools(): Array<AbstractTreeTool> {\r\n        let tools = [];\r\n        tools.push(new CameraPOV(this));\r\n        return tools;\r\n    }\r\n\r\n    // Set the point of view of the chosen camera\r\n    public setPOV() {\r\n        (this._obj as Camera).getScene().switchActiveCamera(this._obj);\r\n    }\r\n\r\n    // Return the name of the current active camera\r\n    public getCurrentActiveCamera() {\r\n        let activeCamera = (this._obj as Camera).getScene().activeCamera;\r\n        if (activeCamera != null) {\r\n            return activeCamera.name;\r\n        } else {\r\n            return \"0\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","export * from './AbstractTreeTool';\r\nexport * from './BoundingBox';\r\nexport * from './CameraPOV';\r\nexport * from './Checkbox';\r\nexport * from './DebugArea';\r\nexport * from './Info';\r\nexport * from './SoundInteractions';","export * from './TreeItem';","export * from './AbstractTool';\r\nexport * from './DisposeTool';\r\nexport * from './FullscreenTool';\r\nexport * from './LabelTool';\r\nexport * from './PauseScheduleTool';\r\nexport * from './PickTool';\r\nexport * from './PopupTool';\r\nexport * from './RefreshTool';\r\nexport * from './Toolbar';","export * from './CameraTab';\r\nexport * from './ConsoleTab';\r\nexport * from './GLTFTab';\r\nexport * from './GUITab';\r\nexport * from './LightTab';\r\nexport * from './MaterialTab';\r\nexport * from './MeshTab';\r\nexport * from './PhysicsTab';\r\nexport * from './PropertyTab';\r\nexport * from './SceneTab';\r\nexport * from './SoundTab';\r\nexport * from './StatsTab';\r\nexport * from './Tab';\r\nexport * from './TabBar';\r\nexport * from './TextureTab';\r\nexport * from './ToolsTab';","export * from './Scheduler';","export * from './Helpers';","import { Color3, Color4 } from \"babylonjs\";\r\nimport { BasicElement } from \"./BasicElement\";\r\n\r\n/**\r\n* Display a very small div corresponding to the given color\r\n*/\r\nexport class ColorElement extends BasicElement {\r\n\r\n    // The color as hexadecimal string\r\n    constructor(color: Color4 | Color3) {\r\n        super();\r\n        this._div.className = 'color-element';\r\n        this._div.style.backgroundColor = this._toRgba(color);\r\n    }\r\n\r\n    public update(color?: Color4 | Color3) {\r\n        if (color) {\r\n            this._div.style.backgroundColor = this._toRgba(color);\r\n        }\r\n    }\r\n\r\n    private _toRgba(color: Color4 | Color3): string {\r\n        if (color) {\r\n            let r = (color.r * 255) | 0;\r\n            let g = (color.g * 255) | 0;\r\n            let b = (color.b * 255) | 0;\r\n            let a = 1;\r\n            if (color instanceof Color4) {\r\n                a = (color as Color4).a;\r\n            }\r\n            return `rgba(${r}, ${g}, ${b}, ${a})`;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n}\r\n","export * from './BasicElement';\r\nexport * from './ColorElement';\r\nexport * from './ColorPickerElement';\r\nexport * from './CubeTextureElement';\r\nexport * from './HDRCubeTextureElement';\r\nexport * from './SearchBar';\r\nexport * from './TextureElement';\r\nexport * from './Tooltip';","export * from './DetailPanel';\r\nexport * from './Property';\r\nexport * from './PropertyLine';","module.exports = __WEBPACK_EXTERNAL_MODULE__68__;","module.exports = __WEBPACK_EXTERNAL_MODULE__69__;","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.push([module.id, \"@import url(https://use.fontawesome.com/releases/v5.0.13/css/all.css);\", \"\"]);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Inconsolata);\", \"\"]);\n\n// module\nexports.push([module.id, \".insp-wrapper {\\n  user-select: none;\\n  display: flex;\\n  font-size: 0.9em;\\n  font-family: \\\"Inconsolata\\\", sans-serif;\\n  background-color: #242424;\\n  /**\\r\\n * A tool contained in the tree panel (available for each item of the tree)\\r\\n */\\n  /**\\r\\n * The toolbar contains : \\r\\n * - a refresh tool - refresh the whole panel\\r\\n * - a popup tool - Open the inspector in a new panel\\r\\n * ...\\r\\n */\\n  /*\\r\\n* 1. Set to 0 height and width, and remove border for a slider without a thumb\\r\\n*/ }\\n  .insp-wrapper .gutter {\\n    background-color: #2c2c2c; }\\n    .insp-wrapper .gutter.gutter-vertical:not(.blocked) {\\n      cursor: ns-resize; }\\n    .insp-wrapper .gutter.gutter-horizontal:not(.blocked) {\\n      cursor: ew-resize; }\\n  .insp-wrapper .insp-right-panel {\\n    width: 750px;\\n    overflow-y: auto;\\n    display: flex;\\n    flex-direction: column;\\n    flex-shrink: 0; }\\n    .insp-wrapper .insp-right-panel.popupmode {\\n      width: 100% !important; }\\n    .insp-wrapper .insp-right-panel .top-panel {\\n      width: 100%;\\n      height: 100%;\\n      position: relative;\\n      background-color: #242424;\\n      color: #ccc;\\n      font-size: 1em; }\\n      .insp-wrapper .insp-right-panel .top-panel .tab-panel-content {\\n        width: 100%;\\n        height: calc(100% - 50px); }\\n      .insp-wrapper .insp-right-panel .top-panel .more-tabs-panel {\\n        position: absolute;\\n        z-index: 10;\\n        top: 50px;\\n        right: 0;\\n        width: 100px;\\n        display: none;\\n        flex-direction: column;\\n        align-items: center;\\n        justify-content: center;\\n        border: 1px solid #454545;\\n        background-color: #242424; }\\n        .insp-wrapper .insp-right-panel .top-panel .more-tabs-panel .invisible-tab {\\n          height: 25px;\\n          width: 100%;\\n          line-height: 25px;\\n          text-align: center;\\n          background-color: #2c2c2c;\\n          cursor: pointer; }\\n          .insp-wrapper .insp-right-panel .top-panel .more-tabs-panel .invisible-tab:hover {\\n            background-color: #383838; }\\n          .insp-wrapper .insp-right-panel .top-panel .more-tabs-panel .invisible-tab:active {\\n            background-color: #454545; }\\n  .insp-wrapper .tooltip {\\n    position: absolute;\\n    top: 50px;\\n    right: 0;\\n    color: #f29766;\\n    display: none;\\n    z-index: 4;\\n    font-family: \\\"Inconsolata\\\", sans-serif;\\n    padding: 2px;\\n    background-color: #242424;\\n    border: 1px solid #454545; }\\n  .insp-wrapper .treeTool {\\n    margin: 3px 8px 3px 3px;\\n    cursor: pointer;\\n    position: relative; }\\n    .insp-wrapper .treeTool:hover {\\n      color: #5db0d7; }\\n    .insp-wrapper .treeTool.active {\\n      color: #5db0d7; }\\n  .insp-wrapper .tab-panel {\\n    height: 100%; }\\n    .insp-wrapper .tab-panel.searchable {\\n      height: calc(100% - 30px - 10px); }\\n    .insp-wrapper .tab-panel .texture-image {\\n      max-height: 400px; }\\n    .insp-wrapper .tab-panel .scene-actions {\\n      overflow-y: auto;\\n      padding-left: 5px; }\\n      .insp-wrapper .tab-panel .scene-actions .actions-title {\\n        font-size: 1.1em;\\n        padding-bottom: 10px;\\n        border-bottom: 1px solid #5db0d7;\\n        margin: 10px 0 10px 0; }\\n      .insp-wrapper .tab-panel .scene-actions .defaut-action, .insp-wrapper .tab-panel .scene-actions .action-radio, .insp-wrapper .tab-panel .scene-actions .action {\\n        height: 20px;\\n        line-height: 20px;\\n        width: 100%;\\n        cursor: pointer; }\\n        .insp-wrapper .tab-panel .scene-actions .defaut-action:hover, .insp-wrapper .tab-panel .scene-actions .action-radio:hover, .insp-wrapper .tab-panel .scene-actions .action:hover {\\n          background-color: #2c2c2c; }\\n        .insp-wrapper .tab-panel .scene-actions .defaut-action:active, .insp-wrapper .tab-panel .scene-actions .action-radio:active, .insp-wrapper .tab-panel .scene-actions .action:active {\\n          background-color: #383838; }\\n      .insp-wrapper .tab-panel .scene-actions .action-radio:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F111\\\";\\n        margin-right: 10px; }\\n      .insp-wrapper .tab-panel .scene-actions .action-radio.active:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F192\\\";\\n        color: #5db0d7;\\n        margin-right: 10px; }\\n      .insp-wrapper .tab-panel .scene-actions .action:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F0C8\\\";\\n        margin-right: 10px; }\\n      .insp-wrapper .tab-panel .scene-actions .action.active:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F14A\\\";\\n        color: #5db0d7;\\n        margin-right: 10px; }\\n  .insp-wrapper .tab-panel .shader-tree-panel {\\n    height: 30px; }\\n    .insp-wrapper .tab-panel .shader-tree-panel select {\\n      height: 30px;\\n      background-color: transparent;\\n      color: #ccc;\\n      height: 30px;\\n      width: 100%;\\n      max-width: 300px;\\n      padding-left: 15px;\\n      border: 1px solid #2c2c2c;\\n      outline: 1px solid #454545; }\\n      .insp-wrapper .tab-panel .shader-tree-panel select option {\\n        padding: 5px;\\n        color: gray; }\\n  .insp-wrapper .tab-panel .shader-panel {\\n    min-height: 100px;\\n    user-select: text;\\n    box-sizing: border-box;\\n    padding: 0 15px; }\\n    .insp-wrapper .tab-panel .shader-panel pre {\\n      margin: 0;\\n      white-space: pre-wrap; }\\n      .insp-wrapper .tab-panel .shader-panel pre code {\\n        background-color: #242424 !important;\\n        padding: 0;\\n        margin: 0; }\\n    .insp-wrapper .tab-panel .shader-panel .shader-panel-title {\\n      height: 25px;\\n      border-bottom: 1px solid #383838;\\n      text-transform: uppercase;\\n      line-height: 25px;\\n      margin-bottom: 10px; }\\n  .insp-wrapper .tab-panel .console-panel {\\n    min-height: 100px;\\n    user-select: text;\\n    box-sizing: border-box;\\n    padding: 0 15px; }\\n    .insp-wrapper .tab-panel .console-panel .console-panel-title {\\n      height: 25px;\\n      border-bottom: 1px solid #383838;\\n      text-transform: uppercase;\\n      line-height: 25px;\\n      margin-bottom: 10px; }\\n    .insp-wrapper .tab-panel .console-panel .console-panel-content {\\n      overflow-y: auto;\\n      overflow-x: hidden;\\n      height: calc(100% - 30px); }\\n    .insp-wrapper .tab-panel .console-panel .defaut-line, .insp-wrapper .tab-panel .console-panel .log, .insp-wrapper .tab-panel .console-panel .warn, .insp-wrapper .tab-panel .console-panel .error, .insp-wrapper .tab-panel .console-panel .object {\\n      word-wrap: break-word;\\n      padding: 3px 0 3px 5px; }\\n    .insp-wrapper .tab-panel .console-panel .caller {\\n      padding: 3px 0 3px 0;\\n      color: #349ccd; }\\n    .insp-wrapper .tab-panel .console-panel .log {\\n      color: white; }\\n    .insp-wrapper .tab-panel .console-panel .warn {\\n      color: orange; }\\n    .insp-wrapper .tab-panel .console-panel .error {\\n      color: orangered; }\\n    .insp-wrapper .tab-panel .console-panel .object {\\n      color: #5db0d7; }\\n  .insp-wrapper .tab-panel.stats-panel {\\n    overflow-y: auto; }\\n  .insp-wrapper .tab-panel .stats-fps {\\n    font-weight: 600;\\n    color: #f29766; }\\n  .insp-wrapper .tab-panel .stat-title1 {\\n    font-size: 1.1em;\\n    padding: 10px; }\\n  .insp-wrapper .tab-panel .stat-title2 {\\n    margin: 10px 0 10px 0;\\n    font-size: 1.05em;\\n    border-bottom: 1px solid #5db0d7;\\n    box-sizing: border-box; }\\n  .insp-wrapper .tab-panel .stat-label {\\n    display: inline-block;\\n    width: 80%;\\n    padding: 2px;\\n    background-color: #2c2c2c;\\n    border-bottom: 1px solid #242424;\\n    border-top: 1px solid #242424;\\n    height: 30px;\\n    line-height: 30px;\\n    box-sizing: border-box; }\\n  .insp-wrapper .tab-panel .stat-value {\\n    display: inline-block;\\n    width: 20%;\\n    padding: 2px;\\n    background-color: #2c2c2c;\\n    border-top: 1px solid #242424;\\n    border-bottom: 1px solid #242424;\\n    height: 30px;\\n    line-height: 30px;\\n    box-sizing: border-box; }\\n  .insp-wrapper .tab-panel .stat-infos {\\n    width: 100%;\\n    padding: 4px; }\\n  .insp-wrapper .tab-panel .gltf-actions {\\n    overflow-y: auto;\\n    padding-left: 5px; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-title {\\n      font-size: 1.1em;\\n      padding-bottom: 10px;\\n      border-bottom: 1px solid #5db0d7;\\n      margin: 10px 0 10px 0; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-action, .insp-wrapper .tab-panel .gltf-actions .gltf-checkbox {\\n      height: 20px;\\n      line-height: 20px;\\n      width: 100%;\\n      cursor: pointer;\\n      white-space: nowrap; }\\n      .insp-wrapper .tab-panel .gltf-actions .gltf-action:hover, .insp-wrapper .tab-panel .gltf-actions .gltf-checkbox:hover {\\n        background-color: #2c2c2c; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-checkbox:before {\\n      width: 1em;\\n      height: 1em;\\n      line-height: 1em;\\n      display: inline-block;\\n      font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n      content: \\\"\\\\F0C8\\\";\\n      margin-right: 10px; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-checkbox.active:before {\\n      width: 1em;\\n      height: 1em;\\n      line-height: 1em;\\n      display: inline-block;\\n      font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n      content: \\\"\\\\F14A\\\";\\n      color: #5db0d7;\\n      margin-right: 10px; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-input {\\n      background-color: #2c2c2c;\\n      border: none;\\n      outline: none;\\n      font-family: \\\"Inconsolata\\\", sans-serif;\\n      color: #b3b3b3;\\n      padding: 5px;\\n      margin: 0px 6px 0px 0; }\\n      .insp-wrapper .tab-panel .gltf-actions .gltf-input:hover {\\n        background-color: #383838; }\\n    .insp-wrapper .tab-panel .gltf-actions .gltf-button {\\n      background-color: #2c2c2c;\\n      border: none;\\n      outline: none;\\n      font-family: \\\"Inconsolata\\\", sans-serif;\\n      color: #ccc;\\n      padding: 5px 10px;\\n      margin: 0px 6px 0px 0; }\\n      .insp-wrapper .tab-panel .gltf-actions .gltf-button:hover {\\n        background-color: #383838; }\\n      .insp-wrapper .tab-panel .gltf-actions .gltf-button:active {\\n        background-color: #454545; }\\n  .insp-wrapper .tab-panel.tools-panel {\\n    overflow-y: auto; }\\n  .insp-wrapper .tab-panel .tool-title1 {\\n    font-size: 1.1em;\\n    padding: 10px; }\\n  .insp-wrapper .tab-panel .tool-title2 {\\n    margin: 10px 0 10px 0;\\n    font-size: 1.05em;\\n    border-bottom: 1px solid #5db0d7;\\n    box-sizing: border-box; }\\n  .insp-wrapper .tab-panel .tool-label, .insp-wrapper .tab-panel .tool-label-line, .insp-wrapper .tab-panel .tool-label-error {\\n    background-color: #2c2c2c;\\n    border: none;\\n    outline: none;\\n    font-family: \\\"Inconsolata\\\", sans-serif;\\n    color: #b3b3b3;\\n    padding: 5px;\\n    margin: 0px 6px 0px 0; }\\n  .insp-wrapper .tab-panel .tool-label-line {\\n    width: 100%; }\\n  .insp-wrapper .tab-panel .tool-label-error {\\n    color: #fa371d;\\n    width: 100%;\\n    background-color: none; }\\n  .insp-wrapper .tab-panel .tool-value {\\n    display: inline-block;\\n    width: 25%;\\n    padding: 2px;\\n    background-color: #2c2c2c;\\n    border-top: 1px solid #242424;\\n    border-bottom: 1px solid #242424;\\n    height: 30px;\\n    line-height: 30px;\\n    box-sizing: border-box; }\\n  .insp-wrapper .tab-panel .tool-infos {\\n    width: 100%;\\n    padding: 4px; }\\n  .insp-wrapper .tab-panel .tool-input {\\n    background-color: #2c2c2c;\\n    border: none;\\n    outline: none;\\n    font-family: \\\"Inconsolata\\\", sans-serif;\\n    color: #ccc;\\n    padding: 5px 10px;\\n    margin: 0px 6px 0px 0;\\n    width: 100%;\\n    border-top: 1px solid #242424;\\n    border-bottom: 1px solid #242424;\\n    text-align: left; }\\n    .insp-wrapper .tab-panel .tool-input:hover {\\n      background-color: #383838;\\n      cursor: pointer; }\\n    .insp-wrapper .tab-panel .tool-input:active {\\n      background-color: #454545; }\\n  .insp-wrapper .property-type {\\n    color: #5db0d7; }\\n  .insp-wrapper .property-name, .insp-wrapper .insp-details .base-row .prop-name, .insp-wrapper .insp-details .row .prop-name, .insp-wrapper .insp-details .header-row .prop-name {\\n    color: #f29766; }\\n  .insp-wrapper .insp-tree {\\n    overflow-y: auto;\\n    overflow-x: hidden;\\n    height: calc(50% - 50px - 30px); }\\n    .insp-wrapper .insp-tree .line {\\n      padding: 3px;\\n      cursor: pointer; }\\n      .insp-wrapper .insp-tree .line:hover {\\n        background-color: #2c2c2c; }\\n      .insp-wrapper .insp-tree .line.active {\\n        background-color: #454545; }\\n        .insp-wrapper .insp-tree .line.active .line-content {\\n          background-color: #242424; }\\n      .insp-wrapper .insp-tree .line.unfolded:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F107\\\";\\n        font-weight: 900; }\\n      .insp-wrapper .insp-tree .line.folded:before {\\n        width: 1em;\\n        height: 1em;\\n        line-height: 1em;\\n        display: inline-block;\\n        font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n        content: \\\"\\\\F105\\\";\\n        font-weight: 900; }\\n      .insp-wrapper .insp-tree .line.unfolded.transformNode > span:first-of-type {\\n        color: #f29766; }\\n      .insp-wrapper .insp-tree .line.folded.transformNode > span:first-of-type {\\n        color: #f29766; }\\n      .insp-wrapper .insp-tree .line .line-content {\\n        padding-left: 15px; }\\n        .insp-wrapper .insp-tree .line .line-content:hover {\\n          background-color: #242424; }\\n        .insp-wrapper .insp-tree .line .line-content .line:hover:first-child {\\n          background-color: #383838; }\\n    .insp-wrapper .insp-tree .line_invisible {\\n      display: none; }\\n  .insp-wrapper .insp-details {\\n    background-color: #242424;\\n    overflow-y: auto;\\n    overflow-x: auto;\\n    color: #ccc;\\n    font-family: \\\"Inconsolata\\\", sans-serif; }\\n    .insp-wrapper .insp-details .details {\\n      padding-left: 5px; }\\n    .insp-wrapper .insp-details .base-row, .insp-wrapper .insp-details .row, .insp-wrapper .insp-details .header-row {\\n      display: flex;\\n      width: 100%; }\\n      .insp-wrapper .insp-details .base-row .base-property, .insp-wrapper .insp-details .row .base-property, .insp-wrapper .insp-details .header-row .base-property, .insp-wrapper .insp-details .base-row .prop-name, .insp-wrapper .insp-details .row .prop-name, .insp-wrapper .insp-details .header-row .prop-name, .insp-wrapper .insp-details .base-row .prop-value, .insp-wrapper .insp-details .row .prop-value, .insp-wrapper .insp-details .header-row .prop-value {\\n        padding: 2px 0 2px 0;\\n        text-overflow: ellipsis;\\n        white-space: nowrap;\\n        overflow: hidden; }\\n      .insp-wrapper .insp-details .base-row .prop-name, .insp-wrapper .insp-details .row .prop-name, .insp-wrapper .insp-details .header-row .prop-name {\\n        width: 35%; }\\n      .insp-wrapper .insp-details .base-row .prop-value, .insp-wrapper .insp-details .row .prop-value, .insp-wrapper .insp-details .header-row .prop-value {\\n        width: 59%;\\n        padding-left: 5px; }\\n        .insp-wrapper .insp-details .base-row .prop-value.clickable, .insp-wrapper .insp-details .row .prop-value.clickable, .insp-wrapper .insp-details .header-row .prop-value.clickable {\\n          cursor: pointer; }\\n          .insp-wrapper .insp-details .base-row .prop-value.clickable:hover, .insp-wrapper .insp-details .row .prop-value.clickable:hover, .insp-wrapper .insp-details .header-row .prop-value.clickable:hover {\\n            background-color: #383838; }\\n          .insp-wrapper .insp-details .base-row .prop-value.clickable:after, .insp-wrapper .insp-details .row .prop-value.clickable:after, .insp-wrapper .insp-details .header-row .prop-value.clickable:after {\\n            font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n            content: \\\"\\\\A0   \\\\A0   \\\\A0   \\\\F105\\\";\\n            font-weight: 900; }\\n    .insp-wrapper .insp-details .row:nth-child(even) {\\n      background-color: #2c2c2c; }\\n    .insp-wrapper .insp-details .row.unfolded .prop-value.clickable:after {\\n      font-family: \\\"Font Awesome 5 Free\\\", sans-serif;\\n      content: \\\"\\\\A0   \\\\A0   \\\\A0   \\\\F107\\\";\\n      font-weight: 900; }\\n    .insp-wrapper .insp-details .header-row {\\n      background-color: #2c2c2c;\\n      color: #ccc;\\n      width: 100%;\\n      max-width: 100%; }\\n      .insp-wrapper .insp-details .header-row > * {\\n        color: #ccc !important;\\n        padding: 5px 0 5px 5px !important;\\n        cursor: pointer; }\\n        .insp-wrapper .insp-details .header-row > *:hover {\\n          background-color: #383838; }\\n      .insp-wrapper .insp-details .header-row .header-col {\\n        display: flex;\\n        justify-content: space-between;\\n        align-items: center; }\\n        .insp-wrapper .insp-details .header-row .header-col .sort-direction {\\n          margin-right: 5px; }\\n    .insp-wrapper .insp-details .element-viewer, .insp-wrapper .insp-details .color-element, .insp-wrapper .insp-details .texture-element {\\n      position: relative;\\n      width: 10px;\\n      height: 10px;\\n      display: inline-block;\\n      margin-left: 5px; }\\n    .insp-wrapper .insp-details .color-element {\\n      width: 20px;\\n      height: 15px; }\\n    .insp-wrapper .insp-details .texture-element {\\n      color: #f29766;\\n      margin-left: 10px; }\\n      .insp-wrapper .insp-details .texture-element .texture-viewer {\\n        color: #ccc;\\n        position: absolute;\\n        z-index: 10;\\n        bottom: 0;\\n        right: 0;\\n        display: block;\\n        width: 150px;\\n        height: 150px;\\n        border: 1px solid #454545;\\n        background-color: #242424;\\n        transform: translateX(100%) translateY(100%);\\n        display: none;\\n        flex-direction: column;\\n        justify-content: flex-start;\\n        align-items: center; }\\n        .insp-wrapper .insp-details .texture-element .texture-viewer .texture-viewer-img {\\n          margin: 10px 0 10px 0;\\n          max-width: 110px;\\n          max-height: 110px; }\\n  .insp-wrapper .tabbar {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    border-bottom: 1px solid #383838;\\n    width: 100%;\\n    overflow-x: auto;\\n    overflow-y: hidden;\\n    box-sizing: border-box; }\\n    .insp-wrapper .tabbar .tab {\\n      height: calc(50px - 2px);\\n      width: auto;\\n      padding: 0 10px 0 10px;\\n      color: #ccc;\\n      line-height: 50px;\\n      text-align: center;\\n      cursor: pointer;\\n      margin: 0 5px 0 5px;\\n      box-sizing: border-box; }\\n      .insp-wrapper .tabbar .tab:hover {\\n        border-bottom: 1px solid #f29766;\\n        background-color: #2c2c2c; }\\n      .insp-wrapper .tabbar .tab:active {\\n        background-color: #383838; }\\n      .insp-wrapper .tabbar .tab.active {\\n        border-bottom: 1px solid #f29766; }\\n    .insp-wrapper .tabbar .more-tabs {\\n      width: 50px;\\n      height: 50px;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      cursor: pointer;\\n      position: relative;\\n      border-right: 1px solid #383838; }\\n      .insp-wrapper .tabbar .more-tabs:hover {\\n        background-color: #383838; }\\n      .insp-wrapper .tabbar .more-tabs:active {\\n        color: #f29766;\\n        background-color: #454545; }\\n      .insp-wrapper .tabbar .more-tabs.active {\\n        color: #f29766; }\\n  .insp-wrapper .toolbar {\\n    display: flex; }\\n    .insp-wrapper .toolbar .tool {\\n      width: 50px;\\n      height: 50px;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      cursor: pointer;\\n      position: relative;\\n      border-right: 1px solid #383838; }\\n      .insp-wrapper .toolbar .tool:hover {\\n        background-color: #383838; }\\n      .insp-wrapper .toolbar .tool:active {\\n        color: #f29766;\\n        background-color: #454545; }\\n      .insp-wrapper .toolbar .tool.active {\\n        color: #f29766; }\\n  .insp-wrapper .searchbar {\\n    border: 1px solid #2c2c2c;\\n    margin-bottom: 5px;\\n    display: flex;\\n    align-items: center;\\n    color: #b3b3b3; }\\n    .insp-wrapper .searchbar input {\\n      background-color: #242424;\\n      border: none;\\n      width: 100%;\\n      outline: none;\\n      font-family: \\\"Inconsolata\\\", sans-serif;\\n      color: #b3b3b3;\\n      padding: 3px 0 3px 10px;\\n      margin: 6px 0 6px 0; }\\n  .insp-wrapper input[type=\\\"range\\\"] {\\n    margin: auto;\\n    -webkit-appearance: none;\\n    position: relative;\\n    overflow: hidden;\\n    height: 15px;\\n    width: 50%;\\n    cursor: pointer;\\n    border-radius: 0;\\n    /* iOS */ }\\n  .insp-wrapper ::-webkit-slider-runnable-track {\\n    background: #ddd; }\\n  .insp-wrapper ::-webkit-slider-thumb {\\n    -webkit-appearance: none;\\n    width: 20px;\\n    /* 1 */\\n    height: 15px;\\n    /* 1 */\\n    background: #fff;\\n    box-shadow: -100vw 0 0 100vw dodgerblue;\\n    border: 0px solid #999;\\n    /* 1 */ }\\n  .insp-wrapper ::-moz-range-track {\\n    height: 15px;\\n    background: #ddd; }\\n  .insp-wrapper ::-moz-range-thumb {\\n    background: #fff;\\n    height: 15px;\\n    width: 20px;\\n    border: 0px solid #999;\\n    border-radius: 0 !important;\\n    box-shadow: -100vw 0 0 100vw dodgerblue;\\n    box-sizing: border-box; }\\n  .insp-wrapper ::-ms-fill-lower {\\n    background: dodgerblue; }\\n  .insp-wrapper ::-ms-thumb {\\n    background: #fff;\\n    border: 0px solid #999;\\n    height: 15px;\\n    width: 20px;\\n    box-sizing: border-box; }\\n  .insp-wrapper ::-ms-ticks-after {\\n    display: none; }\\n  .insp-wrapper ::-ms-ticks-before {\\n    display: none; }\\n  .insp-wrapper ::-ms-track {\\n    background: #ddd;\\n    color: transparent;\\n    height: 15px;\\n    border: none; }\\n  .insp-wrapper ::-ms-tooltip {\\n    display: none; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./main.scss\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./main.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","export * from './Adapter';\r\nexport * from './CameraAdapter';\r\nexport * from './GUIAdapter';\r\nexport * from './LightAdapter';\r\nexport * from './MaterialAdapter';\r\nexport * from './MeshAdapter';\r\nexport * from './PhysicsImpostorAdapter';\r\nexport * from './SoundAdapter';\r\nexport * from './TextureAdapter';","export * from './adapters';\r\nexport * from './details';\r\nexport * from './gui';\r\nexport * from './helpers';\r\nexport * from './scheduler';\r\nexport * from './tabs';\r\nexport * from './tools';\r\nexport * from './tree';\r\nexport * from './treetools';\r\n\r\nexport * from './Inspector';\r\nexport * from './properties';\r\nexport * from './properties_gui';"],"sourceRoot":""}